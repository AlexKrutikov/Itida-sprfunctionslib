Меркурий.ЗагрузитьПараметры( );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT '' AS applicationId, '' AS status, '' AS apl_status, '' AS apl_error SET FMTONLY OFF", "Ответ" );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT '' AS uuid, 0 AS recno SET FMTONLY OFF", "СписокВСД" );ДОБАВИТЬКОНТЕКСТ( "SELECT mrc.date, mrc.consignee_be, mrc.consignee_ent, mrc.transportinfo,						  mrc.ti_vehiclenumber, mrc.ti_trailernumber, mrc.ti_containernumber, mrc.ti_wagonnumber, mrc.ti_flightnumber, mrc.ti_shipname,						  mrc.transportstoragetype, mrc.purpose, mrc.resultvse, mrc.locationprosperity, ISNULL( spr000.ndok, 'б/н' ) AS issuenumber,						  mrc.identity_column AS ic				   FROM mrc_sertout mrc				   INNER JOIN " + ИМЯТАБЛИЦЫ + " temp ON temp.ic = mrc.identity_column AND mrc.status = 0				   LEFT OUTER JOIN spr000 spr000 ON spr000.code = mrc.code AND spr000.ic = mrc.ic", "Документы" );IF ( КОЛИЧЕСТВОСТРОК( "Документы" ) == 0 )
{
	СООБЩЕНИЕ( "Не было отмечено ни одного документа в списке." );
	RETURN;
}

НомерПопытки			= 0;НовыйЗапрос				= true;ТЕКСТТОВАРА				= "";АТРИБУТЫ 				= "";ПРЕРВАНО				= false;СИСТЕМНОЕСООБЩЕНИЕ( "Отправка отгрузки в ГИС Меркурий" );СИСТЕМНОЕСООБЩЕНИЕ( "#2Соединение с сервером ГИС Меркурий" );ИНДИКАТОР( "Отправка отгрузки ", КОЛИЧЕСТВОСТРОК( "Документы" ) );WHILE ( !КОНЕЦКОНТЕКСТА( "Документы" ) ){	ДОБАВИТЬКОНТЕКСТ( "SELECT stock.guid, stock.uuid, mrc.quantity, mrc.identity_column, stock.unit					   FROM  mrc_sertout_spec mrc					   INNER JOIN mrc_stock stock ON stock.guid = mrc.stock					   WHERE mrc.ic = " + Документы.ic + " AND mrc.status = 0", "Документ" );	НомерПопытки			= 0;	ВРаботе					= true;	WHILE ( ВРаботе AND НомерПопытки < 50 )	{		НомерПопытки++;		IF ( НовыйЗапрос )		{			Текст= "<SOAP-ENV:Envelope xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2"" 									   xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" 									   xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""									   xmlns:apldef=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" 									   xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 									   xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" 									   xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">				<SOAP-ENV:Header/>				<SOAP-ENV:Body>					<apldef:submitApplicationRequest>						<apldef:apiKey>" + APIKey + "</apldef:apiKey>						<apl:application>							<apl:serviceId>mercury-g2b.service:2.1</apl:serviceId>							<apl:issuerId>" + Предприятие + "</apl:issuerId>							<apl:issueDate>" + ЗАМЕНИТЬ( TTOC( ДАТАВРЕМЯ( ), 7, "-" ), " ", "T" ) + "</apl:issueDate>							<apl:data>								<merc:prepareOutgoingConsignmentRequest>									<merc:localTransactionId>q1234</merc:localTransactionId>									<merc:initiator>										<vd:login>" + Инициатор + "</vd:login>									</merc:initiator>									<merc:delivery>										<vd:consignor>											<dt:businessEntity>												<bs:guid>" + Предприятие + "</bs:guid>											</dt:businessEntity>											<dt:enterprise>												<bs:guid>" + Адрес + "</bs:guid>											</dt:enterprise>										</vd:consignor>																				<vd:consignee>											<dt:businessEntity>												<bs:guid>" + Документы.consignee_be + "</bs:guid>											</dt:businessEntity>											<dt:enterprise>												<bs:guid>" + Документы.consignee_ent + "</bs:guid>											</dt:enterprise>										</vd:consignee>";																				ПЕРЕЙТИВНАЧАЛО( "Документ" );										WHILE ( !КОНЕЦКОНТЕКСТА( "Документ" ) )										{											Текст += "											<vd:consignment id=""idvalue" + НОМЕРСТРОКИ( "Документ" ) + """>												<vd:volume>" + СТРОКА( Документ.quantity, 16, 3 ) + "</vd:volume>												<vd:unit>													<bs:guid>" + Документ.unit + "</bs:guid>												</vd:unit>												<vd:sourceStockEntry>													<bs:uuid>" + Документ.uuid + "</bs:uuid>												</vd:sourceStockEntry>											</vd:consignment>";											ПРОПУСТИТЬ( 1, "Документ" );										}																				Текст 	+= "										<vd:transportInfo>											<vd:transportType>" + Документы.transportinfo + "</vd:transportType>											<vd:transportNumber>												" + ЕСЛИ( !ПУСТО( Документы.ti_containernumber ), "<vd:containerNumber>" + ЕГАИС.ЗаменитьСимволы( Документы.ti_containernumber ) + "</vd:containerNumber>", "" ) + "												" + ЕСЛИ( !ПУСТО( Документы.ti_wagonnumber ), "<vd:wagonNumber>" + ЕГАИС.ЗаменитьСимволы( Документы.ti_wagonnumber ) + "</vd:wagonNumber>", "" ) + "												" + ЕСЛИ( !ПУСТО( Документы.ti_vehiclenumber ), "<vd:vehicleNumber>" + ЕГАИС.ЗаменитьСимволы( Документы.ti_vehiclenumber ) + "</vd:vehicleNumber>", "" ) + "												" + ЕСЛИ( !ПУСТО( Документы.ti_trailernumber ), "<vd:trailerNumber>" + ЕГАИС.ЗаменитьСимволы( Документы.ti_trailernumber ) + "</vd:trailerNumber>", "" ) + "												" + ЕСЛИ( !ПУСТО( Документы.ti_shipname ), "<vd:shipName>" + ЕГАИС.ЗаменитьСимволы( Документы.ti_shipname ) + "</vd:shipName>", "" ) + "												" + ЕСЛИ( !ПУСТО( Документы.ti_flightnumber ), "<vd:flightNumber>" + ЕГАИС.ЗаменитьСимволы( Документы.ti_flightnumber ) + "</vd:flightNumber>", "" ) + "																			</vd:transportNumber>										</vd:transportInfo>										" + ЕСЛИ( !ПУСТО( Документы.transportstoragetype ), "<vd:transportStorageType>" + Документы.transportstoragetype + "</vd:transportStorageType>", "" ) + "										<vd:accompanyingForms>											<vd:waybill>												<vd:issueNumber>" + ЕГАИС.ЗаменитьСимволы( Документы.issuenumber ) + "</vd:issueNumber>												<vd:issueDate>" + DTOC( Документы.date, 7, "-" ) + "</vd:issueDate>												<vd:type>1</vd:type>											</vd:waybill>";										ПЕРЕЙТИВНАЧАЛО( "Документ" );										WHILE ( !КОНЕЦКОНТЕКСТА( "Документ" ) )										{											Текст += "												<vd:vetCertificate for=""idvalue" + НОМЕРСТРОКИ( "Документ" ) + """>													<vd:authentication>														<vd:purpose>															<bs:guid>" + Документы.purpose + "</bs:guid>														</vd:purpose>														<vd:cargoInspected>true</vd:cargoInspected>														<vd:cargoExpertized>" + Документы.resultvse + "</vd:cargoExpertized>														<vd:locationProsperity>" + Документы.locationprosperity + "</vd:locationProsperity>													</vd:authentication>												</vd:vetCertificate>";											ПРОПУСТИТЬ( 1, "Документ" );										}																						Текст 	+= "										</vd:accompanyingForms>									</merc:delivery>								</merc:prepareOutgoingConsignmentRequest>							</apl:data>						</apl:application>					</apldef:submitApplicationRequest>				</SOAP-ENV:Body>			</SOAP-ENV:Envelope>";						ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );			УДАЛИТЬ( "ALL", "Ответ" );			ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера );			ПЕРЕЙТИВНАЧАЛО( "Ответ" );			IF ( UPPER( ALLTRIM( Ответ.status ) ) <> "ACCEPTED" ) 			{				IF ( !ПУСТО( ОтветСервера ) )					СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий. " + Ответ.status + " " + Ответ.apl_error );				RETURN false;			}			ИДЗаявки				= Ответ.applicationId;			УДАЛИТЬ( "ALL", "Ответ" );			Текст = "			<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" >				<soapenv:Header/>				<soapenv:Body>					<ws:receiveApplicationResultRequest>						<ws:apiKey>" + APIKey + "</ws:apiKey>						<ws:issuerId>" + Предприятие + "</ws:issuerId>						<ws:applicationId>" + ИДЗаявки + "</ws:applicationId>					</ws:receiveApplicationResultRequest>				</soapenv:Body>			</soapenv:Envelope>";		}					ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );		IF ( ПУСТО( ОтветСервера ) ) RETURN false;		IF ( AT( ОтветСервера, "prepareOutgoingConsignmentResponse" ) == 0 ) 		{			IF ( AT( ОтветСервера, "APLM0012" ) > 0 )			{				СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий APLM0012. Попытка " + НомерПопытки );				ВРаботе			= true;				НовыйЗапрос		= true;			}			ELSE 			{				УДАЛИТЬ( "ALL", "Ответ" );				ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера ); ПЕРЕЙТИВНАЧАЛО( "Ответ" );				IF ( UPPER( ALLTRIM( Ответ.status ) ) == "REJECTED" )				{					СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий." + Ответ.status + " " + Ответ.apl_error );					УДАЛИТЬ( "ALL", "Ответ" );					RETURN false;				}				ВРаботе			= UPPER( ALLTRIM( Ответ.status ) ) == "IN_PROCESS"  OR UPPER( ALLTRIM( Ответ.apl_status ) ) == "IN_PROCESS";				НовыйЗапрос		= false;				IF ( ВРаботе )				{					СИСТЕМНОЕСООБЩЕНИЕ( "#2Запрос обрабатывается. Попытка " + НомерПопытки );					ОЖИДАНИЕ( 1000 );				}				ELSE					СИСТЕМНОЕСООБЩЕНИЕ( "#2Получены данные. Обработка" );			}		}		ELSE		{			// Необходимо разобрать ответ, получим номер в журнале			УДАЛИТЬ( "ALL", "СписокВСД" );			currentState		= "";			РАЗОБРАТЬ_XML( ОтветСервера, "МЕРКУРИЙ.МеркурийРазобратьТэгиОтгрузкиТовара", true );						ПЕРЕЙТИВНАЧАЛО( "СписокВСД" );			WHILE ( !КОНЕЦКОНТЕКСТА( "СписокВСД" ) )			{				ПЕРЕЙТИ( СписокВСД.recno, "Документ" );				Меркурий.ЗапросСпискаСкладскихЗаписей( "", _КОДМЕРКУРИЯ, Документ.guid );				ЗАПРОС( "UPDATE mrc_sertout_spec SET status= 1, guid= '" + СписокВСД.uuid + "' WHERE identity_column= " + Документ.identity_column );				ПРОПУСТИТЬ( 1, "СписокВСД" );			}			СИСТЕМНОЕСООБЩЕНИЕ( "#2Получены данные. Обработка" );			ВРаботе				= false;			НовыйЗапрос			= true;						}		IF ( _ПРЕРВАТЬВЫПОЛНЕНИЕ ) 		{			ПРЕРВАНО			= true;			BREAK;		}	}	IF ( НомерПопытки >= 50 || _ПРЕРВАТЬВЫПОЛНЕНИЕ ) 	{		ПРЕРВАНО				= true;		BREAK;	}	УДАЛИТЬКОНТЕКСТ( "Документ" );	IF ( ПРЕРВАНО ) BREAK;		ЗАПРОС( "UPDATE mrc_sertout SET status= 1 WHERE identity_column= '" + STDF( Документы.ic ) + "'" );	ПРОПУСТИТЬ( 1, "Документы" );	ИНДИКАТОР( НОМЕРСТРОКИ( "Документы" ), "Отправлено " + STR( НОМЕРСТРОКИ( "Документы" ) ) + " из " + STR( КОЛИЧЕСТВОСТРОК( "Документы" ) ) );}	ИНДИКАТОР( );УДАЛИТЬКОНТЕКСТ( "Документы" );RETURN true;
