Меркурий.ЗагрузитьПараметры( );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT CONVERT( int, 0 ) AS count, CONVERT( int, 0 ) AS total, CONVERT( int, 0 ) AS offset SET FMTONLY OFF", "Данные" );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT '' AS product, '' AS product_type, '' AS product_guid, '' AS subproduct_guid, '' AS productitem_guid, '' AS productitem_name, 										 '' AS productitem_volume, '' AS productitem_unit, '' AS productitem_gtin, '' AS productitem_code, '' AS productitem_producer, 										 '' AS productitem_country, '' AS guid, '' AS uuid, CONVERT( datetime, '' ) AS createdate, CONVERT( datetime, '' ) AS updatedate, 										 '' AS entrynumber, '' AS origin_date, '' AS expiry_date, '' AS status SET FMTONLY OFF", "СкладскойЖурнал" );// Если указан период для загрузки ВСД, то добавляем условиеУсловиеНаПериод					= "";IF ( ПУСТО( STOCKGUID ) && ПУСТО( ИМЯТАБЛИЦЫ ) ){	IF ( !ПУСТО( _НАЧАЛОПЕРИОДА ) )	{		УсловиеНаПериод				= "	<v2:searchPattern>											<v21:receiptDateInterval>												<base:beginDate>" + DTOC( _НАЧАЛОПЕРИОДА, 7, "-" ) + "T00:00:00</base:beginDate>												<base:endDate>" + DTOC( _КОНЕЦПЕРИОДА, 7, "-" ) + "T23:59:59</base:endDate>											</v21:receiptDateInterval>										</v2:searchPattern>";	}}ИДЗагрузки				= ЗАПРОС( "SELECT NEWID( )" );_ПРЕРВАТЬВЫПОЛНЕНИЕ		= false;СИСТЕМНОЕСООБЩЕНИЕ( "Запрос списка складского журнала" );СИСТЕМНОЕСООБЩЕНИЕ( "#2Соединение с сервером ГИС Меркурий" );ДОБАВИТЬКОНТЕКСТ( ЕСЛИ( !ПУСТО( ИМЯТАБЛИЦЫ ), "SELECT guid FROM " + ИМЯТАБЛИЦЫ, "SELECT '' AS guid" ), "СписокОбновляемыхСЗ" );WHILE ( !_ПРЕРВАТЬВЫПОЛНЕНИЕ && !КОНЕЦКОНТЕКСТА( "СписокОбновляемыхСЗ" ) ){	IF ( !ПУСТО( СписокОбновляемыхСЗ.guid ) )		STOCKGUID				= СписокОбновляемыхСЗ.guid;	Количество				= 0;	ТекущееСмещение			= 0;	ОбщееКоличество			= 0;	НомерПопытки			= 0;			WHILE ( Количество == 0 OR ТекущееСмещение < ОбщееКоличество )	{		НомерПопытки			= 0;		ВРаботе					= true;		НовыйЗапрос				= true;		WHILE ( ВРаботе AND НомерПопытки < 50 )		{	//									<v21:vetDocumentStatus>CONFIRMED</v21:vetDocumentStatus>" + УсловиеНаПериод + "			НомерПопытки++;			IF ( НовыйЗапрос )			{				IF ( ПУСТО( STOCKGUID ) )				{					Текст = "					<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 									  xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" 									  xmlns:app=""http://api.vetrf.ru/schema/cdm/application"">						<soapenv:Header/>						<soapenv:Body>							<ws:submitApplicationRequest>								<ws:apiKey>" + APIKey + "</ws:apiKey>								<app:application>									<app:serviceId>mercury-g2b.service:2.1</app:serviceId>									<app:issuerId>" + Предприятие + "</app:issuerId>									<app:issueDate>" + ЗАМЕНИТЬ( TTOC( ДАТАВРЕМЯ( ), 7, "-" ), " ", "T" ) + "</app:issueDate>									<app:data>										<v2:getStockEntryListRequest  xmlns:v2=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2"" 																	  xmlns:base=""http://api.vetrf.ru/schema/cdm/base"" 																	  xmlns:v21=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" 																	  xmlns:v22=""http://api.vetrf.ru/schema/cdm/dictionary/v2"">											<v2:localTransactionId>A0001</v2:localTransactionId>											<v2:initiator>												<v21:login>" + Инициатор + "</v21:login>											</v2:initiator>											<base:listOptions>												<base:count>100</base:count>												<base:offset>" + ТекущееСмещение + "</base:offset>											</base:listOptions>											<v22:enterpriseGuid>" + Адрес + "</v22:enterpriseGuid>" + УсловиеНаПериод + "										</v2:getStockEntryListRequest>									</app:data>								</app:application>							</ws:submitApplicationRequest>						</soapenv:Body>					</soapenv:Envelope>";				}				ELSE				{					Текст = "					<soapenv:Envelope xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2""						xmlns:bs=""http://api.vetrf.ru/schema/cdm/base""						xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""						xmlns:apldef=""http://api.vetrf.ru/schema/cdm/application/ws-definitions""						xmlns:apl=""http://api.vetrf.ru/schema/cdm/application""						xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" 						xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"">												<soapenv:Header/>						<soapenv:Body>								<apldef:submitApplicationRequest>  								<apldef:apiKey>" + APIKey + "</apldef:apiKey>								<apl:application>									<apl:serviceId>mercury-g2b.service:2.0</apl:serviceId>									<apl:issuerId>" + Предприятие + "</apl:issuerId>									<apl:issueDate>" + ЗАМЕНИТЬ( TTOC( ДАТАВРЕМЯ( ), 7, "-" ), " ", "T" ) + "</apl:issueDate>									<apl:data>										<merc:getStockEntryByGuidRequest>											<merc:localTransactionId>A0001</merc:localTransactionId>											<merc:initiator>												<vd:login>" + Инициатор + "</vd:login>											</merc:initiator>											<bs:guid>" + STOCKGUID + "</bs:guid>											<dt:enterpriseGuid>" + Адрес + "</dt:enterpriseGuid>										</merc:getStockEntryByGuidRequest>									</apl:data>								</apl:application>							</apldef:submitApplicationRequest>						</soapenv:Body>					</soapenv:Envelope>";				}				ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );			//	Сообщение( ОтветСервера );				ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT '' AS applicationId, '' AS status, '' AS apl_status, '' AS apl_error SET FMTONLY OFF", "Ответ" );				ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера );				ПЕРЕЙТИВНАЧАЛО( "Ответ" );				IF ( UPPER( ALLTRIM( Ответ.status ) ) <> "ACCEPTED" ) 				{					IF ( !ПУСТО( ОтветСервера ) )						СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий. " + Ответ.status );					RETURN "";				}				ИДЗаявки				= Ответ.applicationId;				УДАЛИТЬ( "ALL", "Ответ" );				Текст = "				<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" >					<soapenv:Header/>					<soapenv:Body>						<ws:receiveApplicationResultRequest>							<ws:apiKey>" + APIKey + "</ws:apiKey>							<ws:issuerId>" + Предприятие + "</ws:issuerId>							<ws:applicationId>" + ИДЗаявки + "</ws:applicationId>						</ws:receiveApplicationResultRequest>					</soapenv:Body>				</soapenv:Envelope>";			}			ОтветСервера		= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );			IF ( ПУСТО( ОтветСервера ) ) RETURN "";						ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера, "application", "", "application" );			IF ( AT( ОтветСервера, "APLM0012" ) > 0 )			{				СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий APLM0012. Попытка " + НомерПопытки );				ВРаботе			= true;				НовыйЗапрос		= true;			}			ELSE			{				IF ( UPPER( ALLTRIM( Ответ.status ) ) == "REJECTED" )				{					СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий. " + Ответ.apl_error );					RETURN "";				}				ВРаботе			= UPPER( ALLTRIM( Ответ.status ) ) == "IN_PROCESS"  OR UPPER( ALLTRIM( Ответ.apl_status ) ) == "IN_PROCESS";				НовыйЗапрос		= false;				IF ( ВРаботе )					СИСТЕМНОЕСООБЩЕНИЕ( "#2Запрос обрабатывается. Попытка " + НомерПопытки );				ELSE					СИСТЕМНОЕСООБЩЕНИЕ( "#2Получены данные. Обработка" );			}			ОБРАБОТАТЬСОБЫТИЯ( );			IF ( _ПРЕРВАТЬВЫПОЛНЕНИЕ ) BREAK;			ОЖИДАНИЕ( 500 );		}		IF ( НомерПопытки >= 50 OR _ПРЕРВАТЬВЫПОЛНЕНИЕ ) BREAK;				ЗАГРУЗИТЬ( "Данные", "XMLSTRING", ОтветСервера, "vd:stockEntryList", "", "vd:stockEntryList" );		ПЕРЕЙТИВНАЧАЛО( "Данные" );		ВЫБРАТЬКОНТЕКСТ( "" );				product					= "";		origin_date				= "";		expiry_date				= "";		currentstate			= "";		currentsubstate			= "";		АТРИБУТЫ				= "";		РАЗОБРАТЬ_XML( ОтветСервера, "МЕРКУРИЙ.МеркурийРазобратьТэгиСкладскогоЖурнала", true );				Количество			= 10;		ТекущееСмещение		= Данные.offset + Данные.count;		IF ( ОбщееКоличество == 0 )		{			ОбщееКоличество	= Данные.total;			IF ( ОбщееКоличество > 10 )				ИНДИКАТОР( "Загрузка складского журнала", ОбщееКоличество );		}		ELSE IF ( ОбщееКоличество > 10 )			ИНДИКАТОР( ТекущееСмещение, "Загружено " + STR( ТекущееСмещение ) + " из " + STR( ОбщееКоличество ) );					УДАЛИТЬ( "ALL", "Данные" );	}		ПРОПУСТИТЬ( 1, "СписокОбновляемыхСЗ" );}УДАЛИТЬКОНТЕКСТ( "СписокОбновляемыхСЗ" );ИНДИКАТОР( );IF ( _ПРЕРВАТЬВЫПОЛНЕНИЕ ) {	УДАЛИТЬКОНТЕКСТ( "Данные" );	УДАЛИТЬКОНТЕКСТ( "СкладскойЖурнал" );	RETURN "";}	ВЫБРАТЬКОНТЕКСТ( "СкладскойЖурнал" );ПЕРЕЙТИВНАЧАЛО( );WHILE ( !КОНЕЦКОНТЕКСТА( ) ){	ВЫБРАТЬКОНТЕКСТ( "СкладскойЖурнал" );	// Теперь необходимо заполнить таблицу с товарами mrc_wares	НоваяПродукция		= false;		IF ( !ПУСТО( productitem_guid ) )	{		НоваяПродукция	= ПУСТО( ЗАПРОС( "SELECT guid FROM mrc_wares WHERE guid= '" + productitem_guid + "'" ) );		wareguid		= productitem_guid;	}	ELSE	{		wareguid		= ЗАПРОС( "SELECT guid FROM mrc_wares WHERE productType= " + STR( VAL( product_type ) ) + " AND level1_guid = '" + STDF( product_guid ) + "' AND 																			level2_guid = '" + STDF( subproduct_guid ) + "' AND name = '" + STDF( productitem_name ) + "'" );		НоваяПродукция	= ПУСТО( wareguid );		IF ( НоваяПродукция )			wareguid	= ЗАПРОС( "SELECT NEWID( )" );	}	IF ( НоваяПродукция )		ЗАПРОС( "INSERT INTO mrc_wares ( productType, level1_guid, level2_guid, guid, name, producer_code, globalID, country, producer, unit, loadid )				 VALUES ( " + STR( VAL( product_type ) ) + ", '" + STDF( product_guid ) + "', '" + STDF( subproduct_guid ) + "', '" + STDF( wareguid )+ "', 						 '" + STDF( productitem_name ) + "', '" + STDF( productitem_code ) + "', '" + STDF( productitem_gtin ) + "', '" + STDF( productitem_country ) + "', 						 '" + STDF( productitem_producer ) + "', '" + STDF( productitem_unit ) + "', '" + ИДЗагрузки + "' ) " );	ELSE ЗАПРОС( "UPDATE mrc_wares 				 SET 					productType		=  " + STR( VAL( product_type ) ) + ", 					level1_guid		= '" + STDF( product_guid ) + "', 					level2_guid		= '" + STDF( subproduct_guid ) + "', 					name			= '" + STDF( productitem_name ) + "', 					producer_code	= '" + STDF( productitem_code ) + "', 					globalID		= '" + STDF( productitem_gtin ) + "', 					country			= '" + STDF( productitem_country ) + "', 					producer		= '" + STDF( productitem_producer ) + "', 					unit			= '" + STDF( productitem_unit ) + "', 					loadid			= '" + ИДЗагрузки + "' 				 WHERE guid = '" + STDF( wareguid )+ "'" );		// Записываем сам сертификат	IF ( ПУСТО( ЗАПРОС( "SELECT guid FROM mrc_stock WHERE guid = '" + guid + "'" ) ) )		ЗАПРОС( "INSERT INTO mrc_stock ( guid, uuid, createdate, updatedate, entrynumber, mrcware, product, quantity, unit, origin_date, expiry_date, status, ent )				 VALUES ( '" + STDF( guid ) + "', '" + STDF( uuid ) + "', '" + CTOD( TTOC( createDate ) ) + "', '" + CTOD( TTOC( updateDate ) ) + "', '" + STDF( entrynumber ) + "', 						  '" + STDF( wareguid ) + "', '" + STDF( product ) + "', " + STR( VAL( productitem_volume ), 20, 8 ) + ", '" + STDF( productitem_unit ) + "', 						  '" + STDF( origin_date ) + "', '" + STDF( expiry_Date ) + "', " + STR( VAL( status ) ) + ", '" + STDF( _КОДМЕРКУРИЯ ) + "' ) " );	ELSE		ЗАПРОС( "UPDATE mrc_stock				 SET					uuid					= '" + STDF( uuid ) + "',					mrcware					= '" + STDF( wareguid ) + "',					product					= '" + STDF( product ) + "', 					quantity				=  " + STR( VAL( productitem_volume ), 20, 8 ) + ",					unit 					= '" + STDF( productitem_unit ) + "',					ent						= '" + STDF( _КОДМЕРКУРИЯ ) + "',					updateDate				= '" + CTOD( TTOC( updateDate ) ) + "',					entryNumber				= '" + STDF( entryNumber ) + "',					origin_date				= '" + STDF( origin_date ) + "', 					expiry_date				= '" + STDF( expiry_date ) + "', 					status					=  " + STR( VAL( status ) ) + ",					reload					= 0				 WHERE guid = '" + STDF( guid ) + "'" );		ПРОПУСТИТЬ( 1, "СкладскойЖурнал" );}/*ФАЙЛЗАКРЫТЬ( файл );*/УДАЛИТЬКОНТЕКСТ( "СкладскойЖурнал" );УДАЛИТЬКОНТЕКСТ( "Данные" );RETURN ИДЗагрузки;
