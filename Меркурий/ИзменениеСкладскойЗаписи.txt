Меркурий.ЗагрузитьПараметры( );РабочаяТаблица			= ЕСЛИ( СПИСАНИЕ, "mrc_sertwriteoff", "mrc_sertinventory" );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT '' AS applicationId, '' AS status, '' AS apl_status, '' AS apl_error SET FMTONLY OFF", "Ответ" );ДОБАВИТЬКОНТЕКСТ( "SELECT mrc.identity_column AS ic, mrc.reason, mrc.note, mrc.issueseries, mrc.issuenumber, mrc.issuedate				   FROM " + РабочаяТаблица + " mrc				   INNER JOIN " + ИМЯТАБЛИЦЫ + " temp ON temp.ic = mrc.identity_column AND mrc.status = 0", "Документы" );IF ( КОЛИЧЕСТВОСТРОК( "Документы" ) == 0 )
{
	СООБЩЕНИЕ( "Не было отмечено ни одного документа в списке." );
	RETURN;
}

НомерПопытки			= 0;НовыйЗапрос				= true;ТЕКСТТОВАРА				= "";АТРИБУТЫ 				= "";ПРЕРВАНО				= false;СИСТЕМНОЕСООБЩЕНИЕ( "Отправка инвентаризаций в ГИС Меркурий" );СИСТЕМНОЕСООБЩЕНИЕ( "#2Соединение с сервером ГИС Меркурий" );ИНДИКАТОР( "Отправка инвентаризаций ", КОЛИЧЕСТВОСТРОК( "Документы" ) );WHILE ( !КОНЕЦКОНТЕКСТА( "Документы" ) ){	МЕРКУРИЙПРИЧИНА		= Документы.reason;	МЕРКУРИЙОПИСАНИЕ	= Документы.note;	МЕРКУРИЙСЕРИЯ		= Документы.issueseries;	МЕРКУРИЙНОМЕР		= Документы.issuenumber;	МЕРКУРИЙДАТА		= Документы.issuedate;	ДОБАВИТЬКОНТЕКСТ( "SELECT stock.guid, stock.uuid, mrc.product, mrc.quantity, mrc.identity_column, stock.entrynumber					   FROM  " + РабочаяТаблица + "_spec mrc					   INNER JOIN mrc_stock stock ON stock.guid = mrc.stock					   WHERE mrc.ic = " + Документы.ic + " AND mrc.status = 0", "Документ" );	WHILE ( !КОНЕЦКОНТЕКСТА( "Документ" ) )	{		// Если необходим перезапрос товара в Меркуриии, то отправляем такой запрос и записываем новую информацию в базу		IF ( ЗАПРОСТОВАРА )		{			// Определяем GUID товара			GUIDТОВАРА				= "";			РАЗОБРАТЬ_XML( Документ.product, "МЕРКУРИЙ.МеркурийРазобратьТэгиПараметрыТовара" );			IF ( ПУСТО( GUIDТОВАРА ) )			{				СООБЩЕНИЕ( "Ошибка определения GUID продукции." );				RETURN;			}			Ответ					= Меркурий.ЗапросТоварПОGUID( GUIDТОВАРА, КОДМЕРКУРИЯ );			// Пусто в случае ошибки			IF ( ПУСТО( Ответ ) )	RETURN;			// Разбираем ответ дял получения обновленных значений			НОВЫЙТИПТОВАРА			= "";			НОВАЯПРОДУКЦИЯGUID		= "";			НОВАЯПРОДУКЦИЯUUID		= "";			НОВАЯСУБПРОДУКЦИЯGUID	= "";			НОВАЯСУБПРОДУКЦИЯUUID	= "";			НОВОЕНАЗВАНИЕТОВАРА		= "";			GUIDТОВАРА				= "";			ТЕКСТТОВАРА				= "";			АТРИБУТЫ 				= "";			РАЗОБРАТЬ_XML( Ответ, "МЕРКУРИЙ.МеркурийРазобратьТэгиПараметрыТовара" );			IF ( ПУСТО( НОВОЕНАЗВАНИЕТОВАРА ) )			{				СООБЩЕНИЕ( "Ошибка определения нового названия продукции." );				RETURN;			}			// Формируем новый товар			ТЕКСТТОВАРА				= "";			РАЗОБРАТЬ_XML( "<?xml version=""1.0"" encoding=""Windows-1251""?>" + Документ.product, "МЕРКУРИЙ.МеркурийРазобратьТэгиОбновлениеТовара", true );			// Записываем новое определение в базу			ЗАПРОС( "UPDATE " + РабочаяТаблица + "_spec SET product = '" + STDF( ТЕКСТТОВАРА ) + "' WHERE identity_column= " + STDF( Документ.identity_column ) )			ИЗМЕНИТЬПОЛЕ( "Документ", "product", ТЕКСТТОВАРА );		}		ТЕКСТТОВАРА				= "";		НОВОЕНАЗВАНИЕКОЛИЧЕСТВА	= Документ.quantity;		ВЫЧИТАТЬИЗТЕКУЩЕГО		= СПИСАНИЕ;		ОШИБКА					= false;		РАЗОБРАТЬ_XML( "<?xml version=""1.0"" encoding=""Windows-1251""?>" + Документ.product, "МЕРКУРИЙ.МеркурийРазобратьТэгиОбновлениеТовараНовоеКоличество", true );		// Если возникла ошибка, то значит было неверное распределение		IF ( ОШИБКА )		{			СООБЩЕНИЕ( "Количество для складской записи №" + Документ.entrynumber + " стало меньше нуля." + CHR( 13 ) + "Проверьте введенные данные.", "Изменение складской записи" );			УДАЛИТЬКОНТЕКСТ( "Документ" );			УДАЛИТЬКОНТЕКСТ( "Документы" );			RETURN false;		}		ВЫБРАТЬКОНТЕКСТ( "Документ" );		НомерПопытки			= 0;		ВРаботе					= true;		WHILE ( ВРаботе AND НомерПопытки < 50 )		{			НомерПопытки++;			IF ( НовыйЗапрос )			{				Текст= "<SOAP-ENV:Envelope xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2"" 										   xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" 										   xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""										   xmlns:apldef=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" 										   xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 										   xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" 										   xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">					<SOAP-ENV:Header/>					<SOAP-ENV:Body>					<apldef:submitApplicationRequest>					<apldef:apiKey>" + APIKey + "</apldef:apiKey>					<apl:application>						<apl:serviceId>mercury-g2b.service:2.1</apl:serviceId>						<apl:issuerId>" + Предприятие + "</apl:issuerId>						<apl:issueDate>" + ЗАМЕНИТЬ( TTOC( ДАТАВРЕМЯ( ), 7, "-" ), " ", "T" ) + "</apl:issueDate>						<apl:data>							<merc:resolveDiscrepancyRequest>								<merc:localTransactionId>q1234</merc:localTransactionId>								<merc:initiator>									<vd:login>" + Инициатор + "</vd:login>								</merc:initiator>								<merc:enterprise>									<bs:guid>" + Адрес + "</bs:guid>								</merc:enterprise>								<merc:inventoryDate>" + ЗАМЕНИТЬ( TTOC( ДАТАВРЕМЯ( ), 7, "-" ), " ", "T" ) + "</merc:inventoryDate>								<merc:responsible>									<vd:login>" + Инициатор + "</vd:login>								</merc:responsible>													<merc:stockDiscrepancy id=""batch1"">									<vd:resultingList>										<vd:stockEntry>											<bs:uuid>" + Документ.uuid + "</bs:uuid>											<vd:batch>" + ТЕКСТТОВАРА + "</vd:batch>										</vd:stockEntry>									</vd:resultingList>								</merc:stockDiscrepancy>															<merc:discrepancyReport> "+									ЕСЛИ( ПУСТО( МЕРКУРИЙСЕРИЯ ), "", "<vd:issueSeries>" + ЕГАИС.ЗаменитьСимволы( МЕРКУРИЙСЕРИЯ ) + "</vd:issueSeries>" ) + "									<vd:issueNumber>" + ЕГАИС.ЗаменитьСимволы( МЕРКУРИЙНОМЕР ) + "</vd:issueNumber>									<vd:issueDate>" + DTOC( МЕРКУРИЙДАТА, 7, "-" ) + "</vd:issueDate>									<vd:reason>										<vd:name>" + ЕГАИС.ЗаменитьСимволы( МЕРКУРИЙПРИЧИНА ) + "</vd:name>									</vd:reason>  "+									ЕСЛИ( ПУСТО( МЕРКУРИЙОПИСАНИЕ ), "", "<vd:description>" + ЕГАИС.ЗаменитьСимволы( МЕРКУРИЙОПИСАНИЕ ) + "</vd:description>" ) + "								</merc:discrepancyReport>							</merc:resolveDiscrepancyRequest>						</apl:data>					</apl:application>					</apldef:submitApplicationRequest>					</SOAP-ENV:Body>				</SOAP-ENV:Envelope>";								ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );				УДАЛИТЬ( "ALL", "Ответ" );				ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера );				ПЕРЕЙТИВНАЧАЛО( "Ответ" );				IF ( UPPER( ALLTRIM( Ответ.status ) ) <> "ACCEPTED" ) 				{					IF ( !ПУСТО( ОтветСервера ) )						СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий. " + Ответ.status + " " + Ответ.apl_error );					RETURN false;				}				ИДЗаявки				= Ответ.applicationId;				Текст = "				<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" >					<soapenv:Header/>					<soapenv:Body>						<ws:receiveApplicationResultRequest>							<ws:apiKey>" + APIKey + "</ws:apiKey>							<ws:issuerId>" + Предприятие + "</ws:issuerId>							<ws:applicationId>" + ИДЗаявки + "</ws:applicationId>						</ws:receiveApplicationResultRequest>					</soapenv:Body>				</soapenv:Envelope>";			}							ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );			IF ( ПУСТО( ОтветСервера ) ) RETURN false;			IF ( AT( ОтветСервера, "resolveDiscrepancyResponse" ) == 0 ) 			{				IF ( AT( ОтветСервера, "APLM0012" ) > 0 )				{					СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий APLM0012. Попытка " + НомерПопытки );					ВРаботе			= true;					НовыйЗапрос		= true;				}				ELSE 				{					УДАЛИТЬ( "ALL", "Ответ" );					ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера ); ПЕРЕЙТИВНАЧАЛО( "Ответ" );					IF ( UPPER( ALLTRIM( Ответ.status ) ) == "REJECTED" )					{						СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий." + Ответ.status + " " + Ответ.apl_error );						УДАЛИТЬ( "ALL", "Ответ" );						RETURN false;					}					ВРаботе			= UPPER( ALLTRIM( Ответ.status ) ) == "IN_PROCESS"  OR UPPER( ALLTRIM( Ответ.apl_status ) ) == "IN_PROCESS";					НовыйЗапрос		= false;					IF ( ВРаботе )					{						СИСТЕМНОЕСООБЩЕНИЕ( "#2Запрос обрабатывается. Попытка " + НомерПопытки );						ОЖИДАНИЕ( 1000 );					}					ELSE						СИСТЕМНОЕСООБЩЕНИЕ( "#2Получены данные. Обработка" );				}			}			ELSE			{				// Необходимо разобрать ответ, получим номер в журнале				ЗАПРОС( "UPDATE " + ЕСЛИ( СПИСАНИЕ, "mrc_sertwriteoff_spec", "mrc_sertinventory_spec" ) + " SET status= 1 WHERE identity_column= " + Документ.identity_column );				Меркурий.ЗапросСпискаСкладскихЗаписей( "", _КОДМЕРКУРИЯ, Документ.guid );												СИСТЕМНОЕСООБЩЕНИЕ( "#2Получены данные. Обработка" );				ВРаботе				= false;				НовыйЗапрос			= true;			}			IF ( _ПРЕРВАТЬВЫПОЛНЕНИЕ ) 			{				ПРЕРВАНО			= true;				BREAK;			}		}		IF ( НомерПопытки >= 50 || _ПРЕРВАТЬВЫПОЛНЕНИЕ ) 		{			ПРЕРВАНО				= true;			BREAK;		}		ПРОПУСТИТЬ( 1, "Документ" );		ИНДИКАТОР( НОМЕРСТРОКИ( "Документы" ), "Отправлено " + STR( НОМЕРСТРОКИ( "Документ" ) ) + " из " + STR( КОЛИЧЕСТВОСТРОК( "Документ" ) ) );	}		УДАЛИТЬКОНТЕКСТ( "Документ" );	IF ( ПРЕРВАНО ) BREAK;		ЗАПРОС( "UPDATE " + ЕСЛИ( СПИСАНИЕ, "mrc_sertwriteoff", "mrc_sertinventory" ) + " SET status= 1 WHERE identity_column= '" + STDF( Документы.ic ) + "'" );	ПРОПУСТИТЬ( 1, "Документы" );}	ИНДИКАТОР( );УДАЛИТЬКОНТЕКСТ( "Документы" );RETURN true;
