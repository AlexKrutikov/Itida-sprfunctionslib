Меркурий.ЗагрузитьПараметры( );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT '' AS applicationId, '' AS status, '' AS apl_status, '' AS apl_error SET FMTONLY OFF", "Ответ" );ДОБАВИТЬКОНТЕКСТ( "SELECT mrc.guid, mrc.consignor, mrc.consignee, mrc.broker, mrc.product, mrc.transportinfo, mrc.transportstoragetype, mrc.waybill 				   FROM mrc_sertificate mrc				   INNER JOIN " + ИМЯТАБЛИЦЫ + " temp ON mrc.guid = temp.guid AND mrc.status = 0", "Сертификаты" );IF ( КОЛИЧЕСТВОСТРОК( "Сертификаты" ) == 0 ){	СООБЩЕНИЕ( "Не было отмечено ни одного ВСД в списке." );	RETURN;}НомерПопытки			= 0;НовыйЗапрос				= true;НОВЫЙТИПТОВАРА			= "";НОВАЯПРОДУКЦИЯGUID		= "";НОВАЯПРОДУКЦИЯUUID		= "";НОВАЯСУБПРОДУКЦИЯGUID	= "";НОВАЯСУБПРОДУКЦИЯUUID	= "";НОВОЕНАЗВАНИЕТОВАРА		= "";GUIDТОВАРА				= "";ТЕКСТТОВАРА				= "";АТРИБУТЫ 				= "";СИСТЕМНОЕСООБЩЕНИЕ( "Гашение ВСД" );СИСТЕМНОЕСООБЩЕНИЕ( "#2Соединение с сервером ГИС Меркурий" );ИНДИКАТОР( "Гашение ВСД", КОЛИЧЕСТВОСТРОК( "Сертификаты" ) );WHILE ( !КОНЕЦКОНТЕКСТА( "Сертификаты" ) ){	// Если необходим перезапрос товара в Меркуриии, то отправляем такой запрос и записываем новую информацию в базу	IF ( ЗАПРОСТОВАРА )	{		// Определяем GUID товара		GUIDТОВАРА				= "";		РАЗОБРАТЬ_XML( Сертификаты.product, "МЕРКУРИЙ.МеркурийРазобратьТэгиПараметрыТовара" );		IF ( ПУСТО( GUIDТОВАРА ) )		{			СООБЩЕНИЕ( "Ошибка определения GUID продукции." );			RETURN;		}		Ответ					= Меркурий.ЗапросТоварПОGUID( GUIDТОВАРА, КОДМЕРКУРИЯ );		// Пусто в случае ошибки		IF ( ПУСТО( Ответ ) )	RETURN;		// Разбираем ответ дял получения обновленных значений		НОВЫЙТИПТОВАРА			= "";		НОВАЯПРОДУКЦИЯGUID		= "";		НОВАЯПРОДУКЦИЯUUID		= "";		НОВАЯСУБПРОДУКЦИЯGUID	= "";		НОВАЯСУБПРОДУКЦИЯUUID	= "";		НОВОЕНАЗВАНИЕТОВАРА		= "";		GUIDТОВАРА				= "";		ТЕКСТТОВАРА				= "";		АТРИБУТЫ 				= "";		РАЗОБРАТЬ_XML( Ответ, "МЕРКУРИЙ.МеркурийРазобратьТэгиПараметрыТовара" );		IF ( ПУСТО( НОВОЕНАЗВАНИЕТОВАРА ) )		{			СООБЩЕНИЕ( "Ошибка определения нового названия продукции." );			RETURN;		}		// Формируем новый товар		ТЕКСТТОВАРА				= "";		РАЗОБРАТЬ_XML( "<?xml version=""1.0"" encoding=""Windows-1251""?>" + Сертификаты.product, "МЕРКУРИЙ.МеркурийРазобратьТэгиОбновлениеТовара", true );		// Записываем новое определение в базу		ЗАПРОС( "UPDATE mrc_sertificate SET product = '" + STDF( ТЕКСТТОВАРА ) + "' WHERE guid= '" + STDF( Сертификаты.guid ) + "'" )		ИЗМЕНИТЬПОЛЕ( "Сертификаты", "product", ТЕКСТТОВАРА );	}		ВЫБРАТЬКОНТЕКСТ( "Сертификаты" );	НомерПопытки			= 0;	ВРаботе					= true;	WHILE ( ВРаботе AND НомерПопытки < 50 )	{		НомерПопытки++;		IF ( НовыйЗапрос )		{			РазделWayBill	= Меркурий.РазделWayBillДляГашения( Сертификаты.waybill );			Текст= "<SOAP-ENV:Envelope xmlns:dt=""http://api.vetrf.ru/schema/cdm/dictionary/v2"" xmlns:bs=""http://api.vetrf.ru/schema/cdm/base"" xmlns:merc=""http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2""									   xmlns:apldef=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" xmlns:apl=""http://api.vetrf.ru/schema/cdm/application"" 									   xmlns:vd=""http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2"" xmlns:SOAP-ENV=""http://schemas.xmlsoap.org/soap/envelope/"">				<SOAP-ENV:Header/>				<SOAP-ENV:Body>				<apldef:submitApplicationRequest>				<apldef:apiKey>" + APIKey + "</apldef:apiKey>				<apl:application>					<apl:serviceId>mercury-g2b.service:2.1</apl:serviceId>					<apl:issuerId>" + Предприятие + "</apl:issuerId>					<apl:issueDate>" + ЗАМЕНИТЬ( TTOC( ДАТАВРЕМЯ( ), 7, "-" ), " ", "T" ) + "</apl:issueDate>					<apl:data>						<merc:processIncomingConsignmentRequest>							<merc:localTransactionId>q1234</merc:localTransactionId>							<merc:initiator>								<vd:login>" + Инициатор + "</vd:login>							</merc:initiator>							<merc:delivery>								<vd:deliveryDate>" + ЗАМЕНИТЬ( TTOC( ДАТАВРЕМЯ( ), 7, "-" ), " ", "T" ) + "</vd:deliveryDate>								<vd:consignor>" + Сертификаты.consignor + "</vd:consignor>								<vd:consignee>" + Сертификаты.consignee + "</vd:consignee>								<vd:consignment>" + Сертификаты.product + "</vd:consignment>								" + ЕСЛИ( !ПУСТО( Сертификаты.broker ), "<vd:broker>" + Сертификаты.broker + "</vd:broker>", "" ) + "								<vd:transportInfo>" + Сертификаты.transportInfo + "</vd:transportInfo>								<vd:transportStorageType>" + Сертификаты.transportStorageType + "</vd:transportStorageType>								<vd:accompanyingForms> " + ЕСЛИ( !ПУСТО( РазделWayBill ), "									<vd:waybill>" + Сертификаты.waybill + "</vd:waybill>", "" ) + "									<vd:vetCertificate>										<bs:uuid>" + Сертификаты.guid + "</bs:uuid>									</vd:vetCertificate>								</vd:accompanyingForms>							</merc:delivery>							<merc:deliveryFacts>								<vd:vetCertificatePresence>ELECTRONIC</vd:vetCertificatePresence>								<vd:docInspection>									<vd:responsible>									<vd:login>" + Инициатор + "</vd:login>									</vd:responsible>									<vd:result>CORRESPONDS</vd:result>								</vd:docInspection>								<vd:vetInspection>									<vd:responsible>									<vd:login>" + Инициатор + "</vd:login>									</vd:responsible>									<vd:result>CORRESPONDS</vd:result>								</vd:vetInspection>								<vd:decision>ACCEPT_ALL</vd:decision>							</merc:deliveryFacts>						</merc:processIncomingConsignmentRequest>					</apl:data>				</apl:application>				</apldef:submitApplicationRequest>				</SOAP-ENV:Body>			</SOAP-ENV:Envelope>";						ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );			УДАЛИТЬ( "ALL", "Ответ" );			ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера );			ПЕРЕЙТИВНАЧАЛО( "Ответ" );			IF ( UPPER( ALLTRIM( Ответ.status ) ) <> "ACCEPTED" ) 			{				IF ( !ПУСТО( ОтветСервера ) )					СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий. " + Ответ.status + " " + Ответ.apl_error );				RETURN 0;			}			ИДЗаявки				= Ответ.applicationId;			УДАЛИТЬ( "ALL", "Ответ" );			Текст = "			<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:ws=""http://api.vetrf.ru/schema/cdm/application/ws-definitions"" >				<soapenv:Header/>				<soapenv:Body>					<ws:receiveApplicationResultRequest>						<ws:apiKey>" + APIKey + "</ws:apiKey>						<ws:issuerId>" + Предприятие + "</ws:issuerId>						<ws:applicationId>" + ИДЗаявки + "</ws:applicationId>					</ws:receiveApplicationResultRequest>				</soapenv:Body>			</soapenv:Envelope>";		}					ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ЗАЯВКИ" );		IF ( ПУСТО( ОтветСервера ) ) RETURN -1;		IF ( AT( ОтветСервера, "processIncomingConsignmentResponse" ) == 0 ) 		{			IF ( AT( ОтветСервера, "APLM0012" ) > 0 )			{				СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий APLM0012. Попытка " + НомерПопытки );				ВРаботе			= true;				НовыйЗапрос		= true;			}			ELSE 			{				УДАЛИТЬ( "ALL", "Ответ" );				ЗАГРУЗИТЬ( "Ответ", "XMLSTRING", ОтветСервера ); ПЕРЕЙТИВНАЧАЛО( "Ответ" );				IF ( UPPER( ALLTRIM( Ответ.status ) ) == "REJECTED" )				{					СИСТЕМНОЕСООБЩЕНИЕ( "#2#ErrorОшибка ГИС Меркурий." + Ответ.status + " " + Ответ.apl_error );					УДАЛИТЬ( "ALL", "Ответ" );					RETURN -1;				}				ВРаботе			= UPPER( ALLTRIM( Ответ.status ) ) == "IN_PROCESS"  OR UPPER( ALLTRIM( Ответ.apl_status ) ) == "IN_PROCESS";				НовыйЗапрос		= false;				IF ( ВРаботе )				{					СИСТЕМНОЕСООБЩЕНИЕ( "#2Запрос обрабатывается. Попытка " + НомерПопытки );					ОЖИДАНИЕ( 1000 );				}				ELSE					СИСТЕМНОЕСООБЩЕНИЕ( "#2Получены данные. Обработка" );			}		}		ELSE		{			// Необходимо разобрать ответ, получим номер в журнале			НомерВЖурнале		= "";			ИДСертификата		= "";			currentState		= "";			РАЗОБРАТЬ_XML( ОтветСервера, "МЕРКУРИЙ.МеркурийРазобратьТэгиОтветаГашения" );			IF ( UPPER( ALLTRIM( ИДСертификата ) ) == UPPER( ALLTRIM( Сертификаты.guid ) ) )				ЗАПРОС( "UPDATE mrc_sertificate SET entryNumber= '" + STDF( НомерВЖурнале ) + "', status= 1, vetDStatus= 'UTILIZED' WHERE guid= '" + STDF( Сертификаты.guid ) + "'" );			СИСТЕМНОЕСООБЩЕНИЕ( "#2Получены данные. Обработка" );			ВРаботе				= false;			НовыйЗапрос			= true;		}		IF ( _ПРЕРВАТЬВЫПОЛНЕНИЕ ) BREAK;	}	IF ( _ПРЕРВАТЬВЫПОЛНЕНИЕ ) BREAK;		ПРОПУСТИТЬ( 1, "Сертификаты" );	ИНДИКАТОР( НОМЕРСТРОКИ( "Сертификаты" ), "Погашено " + STR( НОМЕРСТРОКИ( "Сертификаты" ) ) + " из " + STR( КОЛИЧЕСТВОСТРОК( "Сертификаты" ) ) );}	ИНДИКАТОР( );УДАЛИТЬКОНТЕКСТ( "Сертификаты" );RETURN 0;
