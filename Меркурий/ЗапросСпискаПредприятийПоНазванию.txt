ИМЯТАБЛИЦЫ		= "##" + УНИКАЛЬНОЕИМЯ( );ЗАПРОС( "CREATE TABLE " + ИМЯТАБЛИЦЫ + "( name varchar( 250 ), address varchar( 250 ) ) ");// Для запроса адресов необходимо сначала запросить getBusinessEntityByGuidRequestТекст = "<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" 				  xmlns:v2=""http://api.vetrf.ru/schema/cdm/registry/ws-definitions/v2""				  xmlns:base=""http://api.vetrf.ru/schema/cdm/base"" 				  xmlns:v21=""http://api.vetrf.ru/schema/cdm/dictionary/v2"">	<soapenv:Header/>	<soapenv:Body>		<v2:getRussianEnterpriseListRequest>			<base:listOptions>				<base:count>10</base:count>				<base:offset>0</base:offset>			</base:listOptions>			<v21:enterprise>				<v21:name>" + ЕГАИС.ЗаменитьСимволы( НАЗВАНИЕПРЕДПРИЯТИЯ ) + "</v21:name> 				<v21:officialRegistration>					<v21:businessEntity>						<v21:inn>" + ЕГАИС.ЗаменитьСимволы( ИННСУБЪЕКТА ) + "</v21:inn>					</v21:businessEntity>					<v21:kpp>" + КППСУБЪЕКТА + "</v21:kpp>					</v21:officialRegistration>			</v21:enterprise>		</v2:getRussianEnterpriseListRequest>	</soapenv:Body></soapenv:Envelope>";ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ПРЕДПРИЯТИЯ", МЕРКУРИЙЛОГИН, МЕРКУРИЙПАРОЛЬ, МЕРКУРИЙТЕСТОВЫЙКОНТУР );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT '' AS bs_guid, '' AS dt_name, '' AS dt_addressView SET FMTONLY OFF", "Адреса" );ЗАГРУЗИТЬ( "Адреса", "XMLSTRING", ОтветСервера, "dt:enterprise", "", "dt:enterprise", "dt:numberList dt:owner dt:officialRegistration dt:country dt:region dt:district dt:locality dt:subLocality dt:street" );ПЕРЕЙТИВНАЧАЛО( "Адреса" );WHILE ( !КОНЕЦКОНТЕКСТА( "Адреса" ) ){	__SQL {			INSERT INTO [[ИМЯТАБЛИЦЫ]] ( name, address ) 			VALUES ( '[[STDF( Адреса.dt_name, 250 )]]', '[[STDF( Адреса.dt_addressView, 250 )]]' );	}	ПРОПУСТИТЬ( 1, "Адреса" );}УДАЛИТЬКОНТЕКСТ( "Адреса" );RETURN ИМЯТАБЛИЦЫ;
