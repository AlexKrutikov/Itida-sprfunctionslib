// Процедура автоматически распределяет алкокоды для продаж пивной продукции в указанном документе// Выбираем строки накладной для передачи в ЕГАИСРаспределятьВсеАлкоКоды			= ЕСЛИ( ТИП( "_ЕГАИСРАСПРЕДЕЛЯТЬВСЕАЛКОКОДЫ" ) == "L", _ЕГАИСРАСПРЕДЕЛЯТЬВСЕАЛКОКОДЫ, true );РазрешитьЧастичныеДКС			= ЕСЛИ( ТИП( "_ЕГАИСРАЗРЕШИТЬЧАСТИЧНЫЕСПИСАНИЯПОДКС" ) == "L", _ЕГАИСРАЗРЕШИТЬЧАСТИЧНЫЕСПИСАНИЯПОДКС, false );НеСписыватьРазливной			= ЕСЛИ( ТИП( "_ЕГАИССПИСЫВАТЬРАЗЛИВНУЮПРОДУКЦИЮПОДКС" ) == "L", !_ЕГАИССПИСЫВАТЬРАЗЛИВНУЮПРОДУКЦИЮПОДКС, true );ПерераспределятьМаркированную	= false; //ЕСЛИ( ТИП( "_ЕГАИСПЕРЕРАСПРЕДЕЛЯТЬВСЮМАРКИРОВАННУЮ" ) == "L", _ЕГАИСПЕРЕРАСПРЕДЕЛЯТЬВСЮМАРКИРОВАННУЮ, false );СПИСЫВАТЬМАРКИРОВАННЫЙ	= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param = 'EGAIS_MARKSPS" + СКЛАД + "'" ) ) <> 0;ДатаДКС			= TTOC( ДАТАВРЕМЯ( ) ); УсловиеНаСклад	= "AND spr.sklad IN ( SELECT code FROM sprskl WHERE kpp = '' OR kpp = '" + ЗАПРОС( "SELECT kpp FROM sprskl WHERE code = ( SELECT sklad FROM spr046 WHERE identity_column = " + ИДДокумента + " ) ") + "' )";// Выбираем из спецификации распределяемые данные. Количество сразу приводим к учетной единице измерения// Если в распределении должен участвовать маркированный алкоголь, то его выбиарем только, если не указан алкокодДОБАВИТЬКОНТЕКСТ( "SELECT spec.identity_column, spec.nn, sprnn.maincode, spec.kolp * spec.koef_e AS kolp, spec.nnname				   FROM spec046 spec				   INNER JOIN spr046 spr ON spec.ic = spr.identity_column				   INNER JOIN sprnn sprnn ON sprnn.nn = spec.nn				   WHERE spec.ic = " + ИДДокумента + " AND ( dbo.fn_alcotype( sprnn.nnvid ) = 2 " + 						ЕСЛИ( СПИСЫВАТЬМАРКИРОВАННЫЙ, " OR ( dbo.fn_alcotype( sprnn.nnvid ) = 1 AND 															 EXISTS( SELECT * FROM barcodes 																	 WHERE barcodes.code = '008' AND barcodes.spec_ic = spec.identity_column AND 																		   ISNULL( (SELECT bcexists FROM egais_marks WHERE mark = barcodes.barcode ), 0 ) = 0 ) "+															 ЕСЛИ( !ПерераспределятьМаркированную, " AND spec.alcocode = '' ", "" ) + " )", "" ) + " ) AND spec.kolp > 0", "СписокСтрок" );				   // Все действия выполняем в транзакции, чтобы, если чего-то не хватит, то все целиком откатитьЗАПРОС( "BEGIN TRANSACTION" );// Предварительно, у всех обрабатываемых записей очищаем алкокод, чтобы он не мешал расчетамЗАПРОС( "UPDATE spec SET alcocode = ''		 FROM spec046 spec	     INNER JOIN sprnn sprnn ON sprnn.nn = spec.nn		 WHERE spec.ic = " + ИДДокумента + " AND ( dbo.fn_alcotype( sprnn.nnvid ) = 2 " + 			   ЕСЛИ( СПИСЫВАТЬМАРКИРОВАННЫЙ, " OR ( dbo.fn_alcotype( sprnn.nnvid ) = 1 " + ЕСЛИ( !ПерераспределятьМаркированную, " AND spec.alcocode = '' ", "" ) + " )", "" ) + " ) AND spec.kolp > 0", "СписокСтрок" );СтрокаСообщений			= "";// Необходимо все расчеты привести к учетной единице измерения.// Для этого необходимо количество умножить на записанный коэффициентВыражениеКоличество		= "spec.kolp * spec.koef_e AS kolp"; // spec.kolp / CASE WHEN NOT spec.ed IN ( '" + ЕГАИСЕДИНИЦАЛИТРЫ + "', 'дал', 'дкл' ) THEN 1 ELSE CASE WHEN sprnn.d_litr = 0 THEN 1 ELSE sprnn.d_litr / CASE WHEN spec.ed  IN ( 'дал', 'дкл' ) THEN 10 ELSE 1 END END END AS kolp";// Определяем дату последней инвентаризации по розничному регистру. Если товара в ней нет, значит количество равно 0ДатаИнвентаризации		= TTOC( ЗАПРОС( "SELECT MAX( spr.date ) 										 FROM spr045 spr										 INNER JOIN spec045 spec ON spr.identity_column = spec.ic										 INNER JOIN accountlist alist ON alist.code = '045' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'										 WHERE spr.egaisreg = 'розничный' AND spr.date <= '" + ДатаДКС + "' " + УсловиеНаСклад ) );										 WHILE ( !КОНЕЦКОНТЕКСТА( "СписокСтрок" ) ){	ВсегоАлкокодов		= 0.00;		// Если у товара только один связанный алкокод, то его и устанавливаем	КоличествоАК		= ЗАПРОС( "SELECT COUNT( * ) FROM sprres_egais WHERE code = '" + СписокСтрок.nn + "'" );	IF ( КоличествоАК == 0 )		АлкоКод			= ЗАПРОС( "SELECT alcocode FROM sprres WHERE code = '" + СписокСтрок.nn + "'" );	ELSE		АлкоКод			= ЗАПРОС( "SELECT CASE WHEN (SELECT COUNT(*) FROM sprres_egais WHERE code = '" + СписокСтрок.nn + "') > 1 THEN '' ELSE (SELECT alcocode FROM sprres_egais WHERE code = '" + СписокСтрок.nn + "' ) END" );			IF ( !ПУСТО( АлкоКод ) AND ( !РаспределятьВсеАлкоКоды OR КоличествоАК == 0 ) )	{		ЗАПРОС( "UPDATE spec046 SET alcocode= '" + STDF( АлкоКод )+ "' WHERE identity_column = " + СписокСтрок.identity_column );		ПРОПУСТИТЬ( 1, "СписокСтрок" );		CONTINUE;	}		// Очищаем поле алкокод, чтобы оно не влияло на расчет	ЗАПРОС( "UPDATE spec046 SET alcocode= '' WHERE identity_column = " + СписокСтрок.identity_column );	// Выбираем все движения по розничному регистру ЕГАИС, начиная с последней Инвентаризации ЕГАИС	ДОБАВИТЬКОНТЕКСТ( "SELECT SUM( CASE WHEN priz = '+' THEN kolp ELSE -kolp END ) AS kolp, alcocode					   FROM ( 								SELECT '+' AS priz, " + ВыражениеКоличество + ", spec.alcocode								FROM spec001 spec								INNER JOIN spr001 spr ON spec.ic = spr.identity_column								INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn								INNER JOIN accountlist alist ON alist.code = '001' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spec.alcocode <> '' AND 									  CASE WHEN spr.egaisvnpdate = '' THEN spr.date ELSE spr.egaisvnpdate END >= '" + ДатаИнвентаризации + "' AND CASE WHEN spr.egaisvnpdate = '' THEN spr.date ELSE spr.egaisvnpdate END <= '" + ДатаДКС + "' AND 									  spr.egaisvnpstatus IN ( 2, 3 ) " + УсловиеНаСклад + "								UNION ALL								SELECT '-' AS priz, " + ВыражениеКоличество + ", spec.alcocode								FROM spec003 spec								INNER JOIN spr003 spr ON spec.ic = spr.identity_column								INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn								INNER JOIN accountlist alist ON alist.code = '003' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spec.alcocode <> '' AND spr.date >= '" + ДатаИнвентаризации + "' AND spr.date <= '" + ДатаДКС + "' AND 									  spr.egaisreg = 'розничный' AND spr.egaisstatus IN ( 2, 3 ) " + УсловиеНаСклад + "								UNION ALL								SELECT '-', " + ВыражениеКоличество + ", spec.alcocode								FROM spec008 spec								INNER JOIN spr008 spr ON spec.ic = spr.identity_column								INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn								INNER JOIN accountlist alist ON alist.code = '008' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spec.alcocode <> '' AND ( ( 									   CASE WHEN spr.egaisdate = '' THEN spr.date ELSE spr.egaisdate END >= '" + ДатаИнвентаризации + "' AND CASE WHEN spr.egaisdate = '' THEN spr.date ELSE spr.egaisdate END <= '" + ДатаДКС + "' AND 									   spr.egaisstatus IN ( 2, 3 ) ) OR spr.identity_column = " + ИДДокумента + " ) " + УсловиеНаСклад + "								UNION ALL								SELECT '-',  " + ВыражениеКоличество + ", spec.alcocode								FROM spec046 spec								INNER JOIN spr046 spr ON spec.ic = spr.identity_column								INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn								INNER JOIN accountlist alist ON alist.code = '046' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spec.alcocode <> '' AND ( ( 									   CASE WHEN spr.egaisdate = '' THEN spr.date ELSE spr.egaisdate END >= '" + ДатаИнвентаризации + "' AND CASE WHEN spr.egaisdate = '' THEN spr.date ELSE spr.egaisdate END <= '" + ДатаДКС + "' AND 									   spr.egaisstatus IN ( 2, 3 ) ) OR spr.identity_column = " + ИДДокумента + " ) " + УсловиеНаСклад + "								UNION ALL								SELECT '+', " + ВыражениеКоличество + ", spec.alcocode								FROM spec043 spec								INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn								INNER JOIN spr043 spr ON spec.ic = spr.identity_column								INNER JOIN accountlist alist ON alist.code = '043' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spec.alcocode <> '' AND spr.date >= '" + ДатаИнвентаризации + "' AND spr.date <= '" + ДатаДКС + "' AND 									  spr.egaisreg = 'розничный' AND spr.egaisstatus IN ( 2, 3, 4 ) " + УсловиеНаСклад + "								UNION ALL								SELECT '+', " + ВыражениеКоличество + ", spec.alcocode								FROM spec019 spec								INNER JOIN sprnn sprnn ON sprnn.nn = spec.nn								INNER JOIN spr019 spr ON spec.ic = spr.identity_column								INNER JOIN accountlist alist ON alist.code = '019' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spr.date >= '" + ДатаИнвентаризации + "' AND spr.date <= '" + ДатаДКС + "' AND 									  spr.egaisdirection = 1 AND spr.egaisstatus IN ( 2, 3 ) " + УсловиеНаСклад + "								UNION ALL								SELECT '-', " + ВыражениеКоличество + ", spec.alcocode								FROM spec019 spec								INNER JOIN sprnn sprnn ON sprnn.nn = spec.nn								INNER JOIN spr019 spr ON spec.ic = spr.identity_column								INNER JOIN accountlist alist ON alist.code = '019' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spr.date >= '" + ДатаИнвентаризации + "' AND spr.date <= '" + ДатаДКС + "' AND 									  spr.egaisdirection = 2 AND spr.egaisstatus IN ( 2, 3 ) " + УсловиеНаСклад + "								UNION ALL								SELECT '+', " + ВыражениеКоличество + ", spec.alcocode								FROM spec045 spec								INNER JOIN spr045 spr ON spec.ic = spr.identity_column								INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn								INNER JOIN accountlist alist ON alist.code = '045' AND alist.ic = spr.identity_column AND alist.transacted = 1 AND alist.account_ = '001'								WHERE spec.nn = '" + СписокСтрок.nn + "' AND spec.alcocode <> '' AND spr.date >= '" + ДатаИнвентаризации + "' AND spr.date <= '" + ДатаДКС + "' AND 									  spr.egaisreg = 'розничный' " + УсловиеНаСклад + "							) AS alcolist						WHERE alcocode <> ''						GROUP BY alcocode						HAVING SUM( CASE WHEN priz = '+' THEN kolp ELSE -kolp END ) > 0						ORDER BY 1 DESC", "СписокАлкокодов" );		// Считаем общее количество остатка алкокодов	WHILE ( !КОНЕЦКОНТЕКСТА( "СписокАлкокодов" ) )	{		ВсегоАлкокодов	+= СписокАлкокодов.kolp;		ПРОПУСТИТЬ( 1, "СписокАлкокодов" );	}		IF ( ВсегоАлкокодов < СписокСтрок.kolp )		СтрокаСообщений	+= ЕСЛИ( !ПУСТО( СтрокаСообщений ), CHR( 13 ), "" ) + "в наличии " + STR( ВсегоАлкокодов, 16, 3 ) + " => требуется " + STR( СписокСтрок.kolp, 16, 3 ) + ", продукция:  " + СписокСтрок.maincode + " " + СписокСтрок.nnname;	IF ( ВсегоАлкокодов >= СписокСтрок.kolp OR ( ВсегоАлкокодов > 0 && РазрешитьЧастичныеДКС ) )	{		// Если остатка хватает, то распределяем его по строке документа.		// Если остатка алкокодов не хватает, то в конце добавим строку без алкокода		// Считаем распределенное количество		КоличествоБезАК		= MAX( СписокСтрок.kolp - ВсегоАлкокодов, 0 );		ВсегоКоличество		= MIN( ВсегоАлкокодов, СписокСтрок.kolp );		ПЕРЕЙТИВНАЧАЛО( "СписокАлкокодов" );		WHILE ( ВсегоКоличество > 0 )		{			// Для первой строки алкокодов заполняем поле в текущей строке ДКС			IF ( НОМЕРСТРОКИ( "СписокАлкокодов" ) == 0 )			{				Количество		= STR( СписокАлкокодов.kolp, 16, 8 );				// При записи количество сразу возвращаем в единицу измерения, указанную в ДКС				ЗАПРОС( "UPDATE spec046 SET alcocode = '" + STDF( СписокАлкокодов.alcocode ) + "' " + 						ЕСЛИ( ВсегоКоличество > СписокАлкокодов.kolp OR КоличествоБезАК > 0, ", kolp = " + Количество + " / koef_e",  "" ) + "						 WHERE identity_column = " + СписокСтрок.identity_column );			}			ELSE			{				// Для остальных - добавляем строки в ДКС				// При этом количество сразу возвращаем в единицу измерения, указанную в ДКС				Количество		= STR( MIN( ВсегоКоличество, СписокАлкокодов.kolp ), 16, 8 );				ДОБАВИТЬКОНТЕКСТ( 						"INSERT INTO spec046 ( ic, nn, s_code, ed, kolp, koef_e, koef_c, kodn, nnname, alcocode )						 SELECT ic, nn, s_code, ed, " + Количество + " / koef_e, koef_e, koef_c, kodn, nnname, '" + STDF( СписокАлкокодов.alcocode ) + "'						 FROM spec046 WHERE identity_column =" + СписокСтрок.identity_column, "НовыеСтрокиДКС" );				УДАЛИТЬКОНТЕКСТ( "НовыеСтрокиДКС" );			}			ВсегоКоличество	-= СписокАлкокодов.kolp;			ПРОПУСТИТЬ( 1, "СписокАлкокодов" );		}		// Если должен остаться остаток без АК, то добавляем его		IF ( КоличествоБезАК > 0 )		{			// Для остальных - добавляем строки в ДКС			// При этом количество сразу возвращаем в единицу измерения, указанную в ДКС			Количество		= STR( КоличествоБезАК, 16, 8 );			ДОБАВИТЬКОНТЕКСТ( 					"INSERT INTO spec046 ( ic, nn, s_code, ed, kolp, koef_e, koef_c, kodn, nnname, alcocode )					 SELECT ic, nn, s_code, ed, " + Количество + " / koef_e, koef_e, koef_c, kodn, nnname, ''					 FROM spec046 WHERE identity_column =" + СписокСтрок.identity_column, "НовыеСтрокиДКС" );			УДАЛИТЬКОНТЕКСТ( "НовыеСтрокиДКС" );		}	}	УДАЛИТЬКОНТЕКСТ( "СписокАлкокодов" );		ПРОПУСТИТЬ( 1, "СписокСтрок" );}УДАЛИТЬКОНТЕКСТ( "СписокСтрок"  );IF ( !ПУСТО( СтрокаСообщений ) ){ 	IF ( !РазрешитьЧастичныеДКС )	{		ЗАПРОС( "ROLLBACK TRANSACTION" );		СООБЩЕНИЕ( "В ВТ " + ЗАПРОС( "SELECT '№ ' + RTRIM( ndok ) + ' от ' + CONVERT( char( 10 ), date, 104 ) FROM spr046 WHERE identity_column = " + ИДДокумента ) + " для позиций " + 				   CHR( 13 ) + CHR( 13 ) + СтрокаСообщений + CHR( 13 ) + CHR( 13 ) + "недостаточно алкокодов для распределения." + CHR( 13 ) + "Документ не был отправлен в ЕГАИС.", "Распределение алкокодов", 64 );		RETURN false; 	}	ЗАПРОС( "COMMIT TRANSACTION" );	RETURN СООБЩЕНИЕ( "В ВТ " + ЗАПРОС( "SELECT '№ ' + RTRIM( ndok ) + ' от ' + CONVERT( char( 10 ), date, 104 ) FROM spr046 WHERE identity_column = " + ИДДокумента ) + " для позиций " + 			   CHR( 13 ) + CHR( 13 ) + СтрокаСообщений + CHR( 13 ) + CHR( 13 ) + "недостаточно алкокодов для распределения." + CHR( 13 ) + "Отправить документ в ЕГАИС без недостающего количества?", "Распределение алкокодов", 36 ) == 6;}ЗАПРОС( "COMMIT TRANSACTION" );RETURN true;
