// Формируем список моделей учета, в которых должен участвовать новый документ.// Список берем из раздела занчения по умолчанию для моделей учета точки зрения_ERRORCODE			= 0;ErrorMessage		= "Ошибка создания документа. " + CHR( 13 );// Определяем параметры документа по умолчаниюФИРМАДОКУМЕНТА		= ЗАПРОС( "SELECT value FROM param_ex WHERE param = 'EGAIS_FIRM" + СКЛАД + "'" );СКЛАДДОКУМЕНТА		= ЗАПРОС( "SELECT value FROM param_ex WHERE param = 'EGAIS_SKLAD" + СКЛАД + "'" );АВТОРДОКУМЕНТА		= ЗАПРОС( "SELECT SUSER_SNAME( )" );ВАЛЮТАДОКУМЕНТА		= ЗАПРОС( "SELECT value FROM param WHERE param = 'CUR'" );ТОЧКАЗРЕНИЯ			= ЗАПРОС( "SELECT dbo.fn_getdefaultviewpoint( )" );УЧЕТПОУМОЛЧАНИЮ		= ЗАПРОС( "SELECT dbo.fn_getdefaultaccount( dbo.fn_getdefaultviewpoint( ) )" );ЕГАИСКОДНАЛОГА		= ЗАПРОС( "SELECT value FROM param WHERE param = 'kodn'" );IF ( ПУСТО( ФИРМАДОКУМЕНТА ) )	ФИРМАДОКУМЕНТА	= ЗАПРОС( "SELECT value_ FROM userprop WHERE user_= SUSER_SNAME( ) AND prop_ = 'FIRMCODE'" );IF ( ПУСТО( СКЛАДДОКУМЕНТА ) )	СКЛАДДОКУМЕНТА	= ЗАПРОС( "SELECT value_ FROM userprop WHERE user_= SUSER_SNAME( ) AND prop_ = 'SKLCODE'" );ДОБАВИТЬКОНТЕКСТ( "SELECT account_ 				   FROM specviewpoints_def 				   WHERE objcode='001' and objtype='DOC' AND account_ <> '' AND code= dbo.fn_getdefaultviewpoint( )", "МоделиУчета" );СписокУчетов					= "";WHILE ( !КонецКонтекста( "МоделиУчета" ) ){	СписокУчетов				+= МоделиУчета.account_;	Пропустить( 1, "МоделиУчета" );}СписокУчетов					= ALLTRIM( СписокУчетов );ИДДокумента						= ЗАПРОС( "EXECUTE sp_insertdoc '001', '', '" + ДАТАДОКУМЕНТА + "', '', '" + ФИРМАДОКУМЕНТА + "', 																'" + АВТОРДОКУМЕНТА + "', '" + ВАЛЮТАДОКУМЕНТА + "', '', 																'" + СписокУчетов + "', '" + ТОЧКАЗРЕНИЯ + "', 0, '" + УЧЕТПОУМОЛЧАНИЮ + "'", "ident" );	IF ( _ERRORCODE < 0 ){	СООБЩЕНИЕ( ErrorMessage + _ERRORDESCRIPTION );	RETURN false;}ЕГАИСКоличествоСозданныхНакладных++;// Документ создаем в транзакцииIF ( !ЗАПРОС( "BEGIN TRANSACTION" ) ) { 	СООБЩЕНИЕ( ErrorMessage + _ERRORDESCRIPTION );	RETURN false;}try {	// Заполняем спецификацию накладной. По умолчанию, считаем документ полность не принятым. Если его надо будет принять, то проставят реальное колчество	IF ( !ДОБАВИТЬКОНТЕКСТ(		   "INSERT INTO spec001 ( ic, egais_identity, linenum, nn, alcocode, ed, kodn, kolp, realkolp, cena, summa, sumnds, sklad, nnname, koef_e, koef_c, informB, importer ) 			SELECT																												" + ИДДокумента + ", temp.wb_Identity, dbo.fn_chartoint( temp.wb_Identity ), temp.nn, temp.pref_AlcCode, '" + ЕГАИСЕДИНИЦАШТУКИ + "', 										 ISNULL( sprnn.kodn, '" + ЕГАИСКОДНАЛОГА + "' ),  temp.wb_Quantity, 0, temp.wb_Price, temp.wb_Quantity * temp.wb_Price, 										 temp.wb_Quantity * temp.wb_Price * 20 / 120, '" + СКЛАДДОКУМЕНТА + "', ISNULL( dbo.fn_fullnnname( temp.nn ), 'товар не найден' ), 										 CASE WHEN sprnn.ed = '" + ЕГАИСЕДИНИЦАШТУКИ + "' THEN 1 ELSE 											  CASE WHEN sprnn.ed = '" + ЕГАИСЕДИНИЦАЛИТРЫ + "' AND ISNULL( ( SELECT TOP 1 koef FROM sprres_ed WHERE code = sprnn.nn AND ed = '" + ЕГАИСЕДИНИЦАШТУКИ + "' ), 0 ) = 0 THEN 														CASE WHEN sprnn.d_litr = 0 THEN 1 ELSE sprnn.d_litr END												   ELSE ISNULL( ( SELECT TOP 1 koef FROM sprres_ed WHERE code = sprnn.nn AND ed = '" + ЕГАИСЕДИНИЦАШТУКИ + "' ), 1 ) END END,										 CASE WHEN sprnn.ed = '" + ЕГАИСЕДИНИЦАШТУКИ + "' THEN 1 ELSE 											  CASE WHEN sprnn.ed = '" + ЕГАИСЕДИНИЦАЛИТРЫ + "' AND ISNULL( ( SELECT TOP 1 koef FROM sprres_ed WHERE code = sprnn.nn AND ed = '" + ЕГАИСЕДИНИЦАШТУКИ + "' ), 0 ) = 0 THEN 														CASE WHEN sprnn.d_litr <> 0 THEN 1 / sprnn.d_litr ELSE 1 END												   ELSE ISNULL( ( SELECT TOP 1 koef_c FROM sprres_ed WHERE code = sprnn.nn AND ed = '" + ЕГАИСЕДИНИЦАШТУКИ + "' ), 1 ) END END,										 temp.barcode2, 										 ISNULL( CASE WHEN sprres_egais.importer = '' THEN sprres_egais.producer ELSE sprres_egais.importer END, '' )			FROM " + ЕГАИСТаблицаСтрокНакладных + " temp			LEFT OUTER JOIN sprnn sprnn ON temp.nn = sprnn.nn			LEFT OUTER JOIN sprres_egais sprres_egais ON sprres_egais.alcocode = temp.pref_AlcCode			WHERE temp.EGAISID = '" + STDF( ЕГАИСИД )+ "' AND wb_UnitType <> 'UNPACKED' AND temp.url = '" + STDF( URLДокумента ) + "'			ORDER BY temp.wb_Identity", "Спецификация" ) ) THROW 1;	УДАЛИТЬКОНТЕКСТ( "Спецификация" );	// Неупакованную продуукцию необходимо загрузить с единицей дал и указать коэффициент пересчета	IF ( !ДОБАВИТЬКОНТЕКСТ(		   "INSERT INTO spec001 ( ic, egais_identity, linenum, nn, alcocode, ed, kodn, kolp, realkolp, cena, summa, sumnds, sklad, nnname, koef_e, koef_c, informB, importer ) 			SELECT																												" + ИДДокумента + ", temp.wb_Identity, dbo.fn_chartoint( temp.wb_Identity ), temp.nn, temp.pref_AlcCode, 'дал', ISNULL( sprnn.kodn, '" + ЕГАИСКОДНАЛОГА + "' ),  temp.wb_Quantity, 0, temp.wb_Price, temp.wb_Quantity * temp.wb_Price, 										 temp.wb_Quantity * temp.wb_Price * 20 / 120, '" + СКЛАДДОКУМЕНТА + "', ISNULL( dbo.fn_fullnnname( temp.nn ), 'товар не найден' ), 										 CASE WHEN sprnn.ed = 'дал' THEN 1 ELSE CASE WHEN sprnn.ed = '" + ЕГАИСЕДИНИЦАЛИТРЫ + "' THEN 10  ELSE ISNULL( ISNULL( ( SELECT TOP 1 koef   FROM sprres_ed WHERE code = sprnn.nn AND ed = 'дал' ), ISNULL( ( SELECT CASE WHEN koef_ = 0 THEN 1 ELSE 1 / koef_ END FROM spredn_f WHERE code = 'дал' AND code_d = sprnn.ed ), 10 / CASE WHEN sprnn.d_litr <> 0 THEN sprnn.d_litr ELSE 10 END ) ), 1 ) END END,										 CASE WHEN sprnn.ed = 'дал' THEN 1 ELSE CASE WHEN sprnn.ed = '" + ЕГАИСЕДИНИЦАЛИТРЫ + "' THEN 0.1 ELSE ISNULL( ISNULL( ( SELECT TOP 1 koef_c FROM sprres_ed WHERE code = sprnn.nn AND ed = 'дал' ), ISNULL( ( SELECT CASE WHEN koef_ = 0 THEN 1 ELSE koef_     END FROM spredn_f WHERE code = 'дал' AND code_d = sprnn.ed ), CASE WHEN sprnn.d_litr <> 0 THEN sprnn.d_litr ELSE 10 END / 10 ) ), 1 ) END END,										 temp.barcode2, ISNULL( CASE WHEN sprres_egais.importer = '' THEN sprres_egais.producer ELSE sprres_egais.importer END, '' )			FROM " + ЕГАИСТаблицаСтрокНакладных + " temp			LEFT OUTER JOIN sprnn sprnn ON temp.nn = sprnn.nn			LEFT OUTER JOIN sprres_egais sprres_egais ON sprres_egais.alcocode = temp.pref_AlcCode			WHERE temp.EGAISID = '" + STDF( ЕГАИСИД )+ "' AND wb_UnitType = 'UNPACKED' AND temp.url = '" + STDF( URLДокумента ) + "'			ORDER BY temp.wb_Identity", "Спецификация" ) ) THROW 1;	УДАЛИТЬКОНТЕКСТ( "Спецификация" );		// Заполняем номера партий (справки Б)	IF ( !ДОБАВИТЬКОНТЕКСТ(		   "INSERT INTO barcodes2 ( code, ic, spec_ic, nn, barcode, date, sklad, kolp ) 			SELECT																												'001', " + ИДДокумента + ", spec.identity_column, spec.nn, spec.informB, spr.date, spec.sklad, spec.kolp			FROM spec001 spec			INNER JOIN spr001 spr ON spec.ic = spr.identity_column			WHERE spr.identity_column = " + ИДДокумента, "НомераПартий" ) ) THROW 2;	УДАЛИТЬКОНТЕКСТ( "НомераПартий" );	// Заполняем номера марок	IF ( !ДОБАВИТЬКОНТЕКСТ(		   "INSERT INTO barcodes ( code, ic, spec_ic, nn, barcode, boxnumber, date, sklad, kolp ) 			SELECT																												'001', " + ИДДокумента + ", spec.identity_column, spec.nn, RTRIM( LTRIM( SUBSTRING( temp.ce_amc, 151, 250 ) ) ), RTRIM( LTRIM( SUBSTRING( temp.ce_amc, 101, 50 ) ) ), spr.date, spec.sklad, 0			FROM " + ЕГАИСТаблицаМарок + " temp			INNER JOIN spec001 spec ON RTRIM( LTRIM( spec.egais_identity ) ) = RTRIM( LTRIM( LEFT( temp.ce_amc, 50 ) ) ) AND spec.ic = " + ИДДокумента + "			INNER JOIN spr001 spr ON spr.identity_column = " + ИДДокумента + "			WHERE temp.EGAISID = '" + STDF( ЕГАИСИД )+ "' AND temp.url = '" + STDF( URLДокумента ) + "'", "Марки" ) ) THROW 1;	УДАЛИТЬКОНТЕКСТ( "Марки" );	// Проставляем признак наличия марок у строк накладной - необходимо для автоматического перемещения продукции в розничный регистр	ЗАПРОС( "UPDATE spec SET bcexists = 1 FROM spec001 spec WHERE EXISTS( SELECT * FROM barcodes WHERE code = '001' AND ic = spec.ic AND spec_ic = spec.identity_column AND barcode <> '' ) AND ic = " + ИДДокумента );		// Если нет необходимости что-то перемещать, то сразу ставим признак, что все перемещено.	ЗАПРОС( "UPDATE spr001 SET egaisvnpstatus= 3 WHERE NOT EXISTS( SELECT * FROM spec001 WHERE ic = " + ИДДокумента + " AND bcexists = 0 ) AND identity_column = " + ИДДокумента );	СуммаДокумента			= ЗАПРОС( "SELECT SUM( summa ) FROM spec001 WHERE ic= " + ИДДокумента + " AND ftara= 0" );	ВерсияЕГАИС				= ЗАПРОС( "SELECT MAX( egaisver ) FROM " + ЕГАИСТаблицаСтрокНакладных + " WHERE EGAISID = '" + STDF( ЕГАИСИД )+ "' AND url = '" + STDF( URLДокумента ) + "'" );	//------- Достаем р/с и филиал	IF ( !ДОБАВИТЬКОНТЕКСТ(		   "SELECT ISNULL( ( SELECT rs FROM sprrsfirm  WHERE firm = '" + ФИРМАДОКУМЕНТА + "' AND fmain= 1 ), '') AS rs, 				   ISNULL( ( SELECT branch FROM sprskl WHERE code = '" + СКЛАДДОКУМЕНТА + "'), '') AS branch ", "ОрганизацияИнфо" ) ) THROW 3;				   	РасчетныйСчет 	= ОрганизацияИнфо.rs;	Филиал			= ОрганизацияИнфо.branch;	УДАЛИТЬКОНТЕКСТ( "ОрганизацияИнфо" );	// Устанваливаем обязательные поля нового документа	IF ( !ЗАПРОС( 			"UPDATE spr001 SET				firm   			= '" + ФИРМАДОКУМЕНТА + "',				rs	   			= '" + РасчетныйСчет + "',				sklad   		= '" + СКЛАДДОКУМЕНТА + "',				mol				= '',				client  		= '" + ПОСТАВЩИК + "',				contract		= '',				branch  		= '" + Филиал + "',				cur     		= '" + ВАЛЮТАДОКУМЕНТА + "',				cur_rate		= 1,				proc_   		= 0,				nknum			= '" + LEFT( НОМЕРДОКУМЕНТАПОСТАВЩИКА, 20 ) + "',				nkdate			= '" + DTOC( ДАТАДОКУМЕНТА ) + "',				egaisid			= '" + STDF( ЕГАИСИД ) + "',				summa			=  " + STR( СуммаДокумента, 16, 2 ) + ",				intype			= 'Закупка',				egaisact		= " + СтатусАкта + ",				egaisstatus		= " + СтатусОтправкиАкта + ",				egaisvnpstatus	= CASE WHEN egaisvnpstatus = 0 THEN " + СтатусОтправкиВНП + " ELSE egaisvnpstatus END,				egaisactnote	= '" + STDF( ТекстКомментария ) + "',				egaisurl		= '" + STDF( URLДокумента ) + "',				egaisver		= '" + STDF( ВерсияЕГАИС ) + "',				egaischangeowner=  " + ЕСЛИ( UPPER( ALLTRIM( СменаВладельца ) ) == "ISCHANGE", "1", "0" ) + ",				taccess			= '',				caccess			= '',				note			= 'Создан во время загрузки данных из ЕГАИС'			 WHERE identity_column = " + ИДДокумента ) ) THROW 4;				// Добавляем исходныые файлы в приложения документа	IF ( !ДОБАВИТЬКОНТЕКСТ(		   "INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 			SELECT																												'001', " + ИДДокумента + ", 0, RTRIM( temp.url ) + '.txt', CONVERT( varbinary( max ), temp.url_text )			FROM " + ЕГАИСТаблицаФайлов + " temp			WHERE EGAISID = '" + STDF( ЕГАИСИД )+ "'			ORDER BY identity_column", "ПриложенияКДокументу" ) ) THROW 5;	УДАЛИТЬКОНТЕКСТ( "ПриложенияКДокументу" );	ЕГАИС.ВыполнитьСкриптПроверкиПередЗаписью( "001", ИДДокумента );}catch ( НомерЗапроса ){	ЗАПРОС( "IF @@TRANCOUNT > 0 ROLLBACK TRANSACTION" );	СООБЩЕНИЕ( ErrorMessage + _ERRORDESCRIPTION );	RETURN false;}ЗАПРОС( "COMMIT TRANSACTION" );IF ( VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param = 'EGAIS_DELETEFILES" + СКЛАД + "'" ) ) != 0 ){	ДОБАВИТЬКОНТЕКСТ( "SELECT url FROM " + ЕГАИСТаблицаФайлов + " temp	WHERE EGAISID = '" + STDF( ЕГАИСИД )+ "'", "УдаляемыеФайлы" );	WHILE ( !КОНЕЦКОНТЕКСТА( "УдаляемыеФайлы" ) )	{		// Выполняем команду DELETE с нужным URL		_РЕЗУЛЬТАТУДАЛЕНИЯ	= _РЕЗУЛЬТАТУДАЛЕНИЯ AND ЕГАИС.HTTPCommand( "DELETE", УдаляемыеФайлы.url );		ПРОПУСТИТЬ( 1, "УдаляемыеФайлы" );	}	УДАЛИТЬКОНТЕКСТ( "УдаляемыеФайлы" );}RETURN true;
