ФУНКЦИЯ ЛОКАЛЬНАЯ ЛокальныеМарки_РазобратьТэги( Родитель, ТипТэга, Имя, Значение, ФлагЗакрытия ){	IF ( ТипТэга == "ТЭГ" )	{		IF ( UPPER( ALLTRIM( Имя ) ) == "WB:POSITION" )		{			IF ( ФлагЗакрытия )			{				ПЕРЕЙТИВНАЧАЛО( "ЛокальныеМарки" );				WHILE ( !КОНЕЦКОНТЕКСТА( "ЛокальныеМарки" ) )				{					REPLACE( "ЛокальныеМарки", "ce_amc", PADR( Идентификатор, 50 ) + PADR( СправкаБ, 50 ) + ЛокальныеМарки.ce_amc );					ПРОПУСТИТЬ( 1, "ЛокальныеМарки" );				}				ВЫГРУЗИТЬ( ЕГАИСТаблицаМарок, "", "", "ЛокальныеМарки" );				УДАЛИТЬ( "ALL", "ЛокальныеМарки" );				}			СправкаБ		= ""; 			Идентификатор	= "";			НомерКоробки	= "";			WBPOSITION		= !ФлагЗакрытия;		}		IF ( WBPOSITION AND ФлагЗакрытия )		{			IF ( UPPER( ALLTRIM( Имя ) ) == "CE:BOXPOS" )			{				ПЕРЕЙТИВНАЧАЛО( "ЛокальныеМарки" );				WHILE ( !КОНЕЦКОНТЕКСТА( "ЛокальныеМарки" ) )				{					IF ( ПУСТО( ЛокальныеМарки.wb_header_Identity ) )					{						REPLACE( "ЛокальныеМарки", "ce_amc", PADR( НомерКоробки, 50 ) + ЛокальныеМарки.ce_amc );						REPLACE( "ЛокальныеМарки", "ce_boxnumber", НомерКоробки );					}					ПРОПУСТИТЬ( 1, "ЛокальныеМарки" );				}				REPLACE( "ЛокальныеМарки", "wb_NUMBER", ЛокальныеНакладные.wb_NUMBER, 'ALL' );				REPLACE( "ЛокальныеМарки", "wb_Date", ЛокальныеНакладные.wb_Date, 'ALL' );				REPLACE( "ЛокальныеМарки", "wb_header_Identity", ЛокальныеНакладные.wb_Identity, 'ALL' );				REPLACE( "ЛокальныеМарки", "oref_ClientRegId", ЛокальныеНакладные.oref_ClientRegId, 'ALL' );				REPLACE( "ЛокальныеМарки", "url", СписокДокументов.url, 'ALL' );				REPLACE( "ЛокальныеМарки", "ce_f2regid", СправкаБ, 'ALL' );				REPLACE( "ЛокальныеМарки", "wb_identity", Идентификатор, 'ALL' );				НомерКоробки	= "";			}			ELSE IF ( UPPER( ALLTRIM( Имя ) ) == "CE:F2REGID" )				СправкаБ		= Значение; 			ELSE IF ( UPPER( ALLTRIM( Имя ) ) == "WB:IDENTITY" )				Идентификатор	= Значение; 			ELSE IF ( UPPER( ALLTRIM( Имя ) ) == "CE:BOXNUMBER" )				НомерКоробки	= Значение; 			ELSE IF ( UPPER( ALLTRIM( Имя ) ) == "CE:AMC" )			{				ДОБАВИТЬСТРОКИ( 1, "ЛокальныеМарки" );				REPLACE( "ЛокальныеМарки", "ce_amc", Значение );			}			}					}}// Выполняем команду GET с нужным URLОтветСервера	= "";IF ( !ЕГАИС.HTTPCommand( "GET", СписокДокументов.url, "", @ОтветСервера ) ) RETURN false;// Проверяем необходимость загрузки файла. Если скрипт проверки вернет ЛОЖЬ, то не нужно загружать документIF ( !ПУСТО( ТекстСкриптаПроверкиДокумента ) )	IF ( !ВЫЧИСЛИТЬ( ТекстСкриптаПроверкиДокумента, "L" ) ) RETURN true;УдалитьОбработанныйФайл	= false;// В зависимости от типа загружаемого заполняем разные таблицы// Если ПУСТО( СписокДокументов.replyid ), то это значит, что загружаем входящий документ. Если не пусто, то это ответ на наш выгруженный документIF ( ATC( СписокДокументов.url, "WayBill" ) > 0 AND ATC( СписокДокументов.url, "WayBillAct" ) == 0 AND ПУСТО( СписокДокументов.replyid ) )	{	//IF ( ATC( ОтветСервера,  'wb:NUMBER' ) == 0 OR ATC( ОтветСервера, 'oref:ClientRegId' ) == 0 OR ATC( ОтветСервера, 'pref:AlcCode' ) == 0 ) 	IF ( !ЕГАИС.ПроверитьXML( ОтветСервера ) )		ОтветСервера	= ЕГАИС.ПересобратьXML( ОтветСервера );	ЗАГРУЗИТЬ( "ЛокальныеКонтрагенты", "XMLSTRING", ОтветСервера, "", "ЕСЛИ( ВСПИСКЕ(LOWER(ИМЯПОЛЯ),'oref_fl','oref_ul','oref_ts','oref_fo'), 1, ЗНАЧЕНИЕПОЛЯ)", "wb:Shipper wb:Supplier pref:Producer pref:Importer", "wb:Consignee" );	// wb:Consignee - фирма получатель	ЗАГРУЗИТЬ( "ЛокальныеТовары", "XMLSTRING", ОтветСервера, "", "", "wb:Product", "pref:Importer" );	ЗАГРУЗИТЬ( "ЛокальныеИмпортеры", "XMLSTRING", ОтветСервера, "", "", "wb:Product", "pref:Producer" );	ЗАГРУЗИТЬ( "ЛокальныеНакладные", "XMLSTRING", ОтветСервера, "", "ЕСЛИ(LOWER(ИМЯПОЛЯ)=='wb_date', CTOD(ЗНАЧЕНИЕПОЛЯ,7), ЗНАЧЕНИЕПОЛЯ)", "ns:WayBill ns:WayBill_v2 ns:WayBill_v3 ns:WayBill_v4", "wb:Content wb:Consignee wb:Supplier" );	ЗАГРУЗИТЬ( "ЛокальныеСтроки", "XMLSTRING", ОтветСервера, "wb:Position", "", "wb:Content", "" );	ЗАГРУЗИТЬ( "ЛокальныеФайлы", "XMLSTRING", ОтветСервера, "", "ЕСЛИ(LOWER(ИМЯПОЛЯ)=='wb_date', CTOD(ЗНАЧЕНИЕПОЛЯ,7), ЗНАЧЕНИЕПОЛЯ)", "wb:Header", "wb:Consignee wb:Supplier" );	REPLACE( "ЛокальныеФайлы", "url", СписокДокументов.url );	REPLACE( "ЛокальныеФайлы", "url_text", ОтветСервера );		// В строки накладных необходимо перенести данные из заголовка накладной	REPLACE( "ЛокальныеСтроки", "wb_NUMBER", ЛокальныеНакладные.wb_NUMBER, 'ALL' );	REPLACE( "ЛокальныеСтроки", "wb_Date", ЛокальныеНакладные.wb_Date, 'ALL' );	REPLACE( "ЛокальныеСтроки", "wb_header_Identity", ЛокальныеНакладные.wb_Identity, 'ALL' );	REPLACE( "ЛокальныеСтроки", "oref_ClientRegId", ЛокальныеНакладные.oref_ClientRegId, 'ALL' );	REPLACE( "ЛокальныеСтроки", "wb_UnitType", ЛокальныеНакладные.wb_UnitType, 'ALL' );	REPLACE( "ЛокальныеСтроки", "wb_ChangeOwnership", ЛокальныеНакладные.wb_ChangeOwnership, 'ALL' );	REPLACE( "ЛокальныеСтроки", "url", СписокДокументов.url, 'ALL' );				IF ( ATC( ОтветСервера,  'WayBill_v2' ) != 0 ) 		REPLACE( "ЛокальныеСтроки", "egaisver", "WayBill_v2", "ALL" );	IF ( ATC( ОтветСервера,  'WayBill_v3' ) != 0 || ATC( ОтветСервера,  'WayBill_v4' ) != 0 ) 	{		IF ( ATC( ОтветСервера,  'WayBill_v3' ) != 0 ) 			REPLACE( "ЛокальныеСтроки", "egaisver", "WayBill_v3", "ALL" );		ELSE			REPLACE( "ЛокальныеСтроки", "egaisver", "WayBill_v4", "ALL" );		// Если в марках, по какой-то причине, оказались данные этой накладной, то удаляем их (пришла копия от поставщика?)		ЗАПРОС( "DELETE FROM " + ЕГАИСТаблицаМарок + " 				 WHERE wb_NUMBER= '" + STDF( ЛокальныеНакладные.wb_NUMBER ) + "' AND 					   wb_Date = '" + DTOC( ЛокальныеНакладные.wb_Date ) + "' AND wb_header_Identity = '" + STDF( ЛокальныеНакладные.wb_Identity ) + "' AND oref_ClientRegId = '" + STDF( ЛокальныеНакладные.oref_ClientRegId ) + "'"  );		СправкаБ		= ""; 		Идентификатор	= "";		НомерКоробки	= "";		WBPOSITION		= false;		РАЗОБРАТЬ_XML( ОтветСервера, "ЛокальныеМарки_РазобратьТэги" );/*		ЗАГРУЗИТЬ( "ЛокальныеМарки", "XMLSTRING", ОтветСервера, "ce:amc", "IF ( LOWER(ИМЯПОЛЯ)=='ce_f2regid' ) { СправкаБ = ЗНАЧЕНИЕПОЛЯ; ЗНАЧЕНИЕПОЛЯ; } 																		   ELSE IF ( LOWER(ИМЯПОЛЯ)=='wb_identity' ) { Идентификатор = ЗНАЧЕНИЕПОЛЯ; ЗНАЧЕНИЕПОЛЯ; } 																		   ELSE IF ( LOWER(ИМЯПОЛЯ)=='ce_markinfo' ) { НомерКоробки = ''; ЗНАЧЕНИЕПОЛЯ; } 																		   ELSE IF ( LOWER(ИМЯПОЛЯ)=='ce_boxnumber' ) { НомерКоробки = ЗНАЧЕНИЕПОЛЯ; ЗНАЧЕНИЕПОЛЯ; } 																		   ELSE IF ( LOWER(ИМЯПОЛЯ)=='ce_amc' ) PADR( Идентификатор, 50 ) + PADR( СправкаБ, 50 ) + PADR( НомерКоробки, 50 ) + ЗНАЧЕНИЕПОЛЯ; ELSE ЗНАЧЕНИЕПОЛЯ;", "wb:Position", "" );		REPLACE( "ЛокальныеМарки", "wb_NUMBER", ЛокальныеНакладные.wb_NUMBER, 'ALL' );		REPLACE( "ЛокальныеМарки", "wb_Date", ЛокальныеНакладные.wb_Date, 'ALL' );		REPLACE( "ЛокальныеМарки", "wb_header_Identity", ЛокальныеНакладные.wb_Identity, 'ALL' );		REPLACE( "ЛокальныеМарки", "oref_ClientRegId", ЛокальныеНакладные.oref_ClientRegId, 'ALL' );		REPLACE( "ЛокальныеМарки", "url", СписокДокументов.url, 'ALL' );		*/	}		ВЫГРУЗИТЬ( ЕГАИСТаблицаКонтрагентов, "", "", "ЛокальныеКонтрагенты" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаТоваров, "", "identity_column", "ЛокальныеТовары" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаИмпортеров, "", "identity_column", "ЛокальныеИмпортеры" );		// Если в строках накладных уже есть накладная с таким номером и датой от этого же поставщика, то удаляем ее	ЗАПРОС( "DELETE FROM " + ЕГАИСТаблицаСтрокНакладных + " 			 WHERE wb_NUMBER= '" + STDF( ЛокальныеНакладные.wb_NUMBER ) + "' AND 				   wb_Date = '" + DTOC( ЛокальныеНакладные.wb_Date ) + "' AND wb_header_Identity = '" + STDF( ЛокальныеНакладные.wb_Identity ) + "' AND oref_ClientRegId = '" + STDF( ЛокальныеНакладные.oref_ClientRegId ) + "'"  );	/*	ЗАПРОС( "DELETE FROM " + ЕГАИСТаблицаМарок + " 			 WHERE wb_NUMBER= '" + STDF( ЛокальныеНакладные.wb_NUMBER ) + "' AND 				   wb_Date = '" + DTOC( ЛокальныеНакладные.wb_Date ) + "' AND wb_header_Identity = '" + STDF( ЛокальныеНакладные.wb_Identity ) + "' AND oref_ClientRegId = '" + STDF( ЛокальныеНакладные.oref_ClientRegId ) + "'"  );*/	ВЫГРУЗИТЬ( ЕГАИСТаблицаСтрокНакладных, "", "", "ЛокальныеСтроки" );//	ВЫГРУЗИТЬ( ЕГАИСТаблицаМарок, "", "", "ЛокальныеМарки" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаФайлов, "", "identity_column", "ЛокальныеФайлы" );		// Переносим загруженные марки в специальную таблицу марок/алкокодов	// Если марки уже были ранее, то удаляем их/*	ЗАПРОС( "DELETE FROM egais_marks WHERE mark IN ( SELECT RTRIM( LTRIM( SUBSTRING( ce_amc, 151, 250 ) ) ) FROM " + ЕГАИСТаблицаМарок + " )" );	ЗАПРОС( "INSERT INTO egais_marks ( mark, alcocode, informb, bcexists ) 			 SELECT RTRIM( LTRIM( SUBSTRING( marks.ce_amc, 151, 250 ) ) ), lines.pref_AlcCode, marks.ce_f2regid, CASE WHEN LEN( RTRIM( LTRIM( SUBSTRING( marks.ce_amc, 151, 250 ) ) ) ) = 150 THEN 1 ELSE 0 END			 FROM " + ЕГАИСТаблицаСтрокНакладных + " lines			 INNER JOIN " + ЕГАИСТаблицаМарок + " marks ON lines.wb_Identity = RTRIM( LTRIM( SUBSTRING( marks.ce_amc, 1, 50 ) ) ) AND 						lines.wb_NUMBER= marks.wb_NUMBER AND lines.wb_Date = marks.wb_Date AND lines.wb_header_Identity = marks.wb_header_Identity AND lines.oref_ClientRegId = marks.oref_ClientRegId " );*/	}ELSE IF ( ( ATC( СписокДокументов.url, "FORMBREGINFO" ) > 0 OR ATC( СписокДокументов.url,"FORM2REGINFO" ) > 0 ) AND ПУСТО( СписокДокументов.replyid ) ){	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЗАГРУЗИТЬ( "ЛокальныеСправки", "XMLSTRING", ОтветСервера, "", "ЕСЛИ(LOWER(ИМЯПОЛЯ)=='wbr_wbdate', CTOD(ЗНАЧЕНИЕПОЛЯ,7), ЗНАЧЕНИЕПОЛЯ)", "wbr:Header", "wbr:Consignee wbr:Supplier" );	ЗАГРУЗИТЬ( "ЛокальныеСтрокСправки", "XMLSTRING", ОтветСервера, "wbr:Position", "", "wbr:Content", "wbr:Consignee wbr:Supplier" );	ЗАГРУЗИТЬ( "ЛокальныеФайлы", "XMLSTRING", ОтветСервера, "", "", "wbr:Header", "wbr:Consignee wbr:Supplier" );	REPLACE( "ЛокальныеФайлы", "url", СписокДокументов.url );	REPLACE( "ЛокальныеФайлы", "url_text", ОтветСервера );	// В строки справок необходимо перенести данные из заголовка справки	REPLACE( "ЛокальныеСтрокСправки", "wbr_WBNumber", ЛокальныеСправки.wbr_WBNumber, 'ALL' );	REPLACE( "ЛокальныеСтрокСправки", "wbr_WBDate", ЛокальныеСправки.wbr_WBDate, 'ALL' );	REPLACE( "ЛокальныеСтрокСправки", "wbr_header_Identity", ЛокальныеСправки.wbr_Identity, 'ALL' );	REPLACE( "ЛокальныеСтрокСправки", "oref_ClientRegId", ЛокальныеСправки.oref_ClientRegId, 'ALL' ); 	REPLACE( "ЛокальныеСтрокСправки", "wbr_WBRegId", ЛокальныеСправки.wbr_WBRegId, 'ALL' );  	// Если в строках справок уже есть накладная с таким номером и датой от этого же поставщика, то удаляем ее	ЗАПРОС( "DELETE FROM " + ЕГАИСТаблицаСтрокСправокБ + " 			 WHERE wbr_WBNumber= '" + STDF( ЛокальныеСправки.wbr_WBNumber ) + "' AND 				   wbr_WBDate = '" + DTOC( ЛокальныеСправки.wbr_WBDate ) + "' AND wbr_header_Identity = '" + STDF( ЛокальныеСправки.wbr_Identity ) + "' AND oref_ClientRegId = '" + STDF( ЛокальныеСправки.oref_ClientRegId ) + "'"  );		// К накладным дописываем URL справки	ЗАПРОС( "UPDATE " + ЕГАИСТаблицаСтрокНакладных + " 			 SET url	= LEFT( ISNULL( LTRIM( RTRIM( url ) ), '' ) + ';" + СписокДокументов.url + "', 250 )			 WHERE wb_NUMBER= '" + STDF( ЛокальныеСправки.wbr_WBNumber ) + "' AND 				   wb_Date = '" + DTOC( ЛокальныеСправки.wbr_WBDate ) + "' AND oref_ClientRegId = '" + STDF( ЛокальныеСправки.oref_ClientRegId ) + "'"  );	ЗАПРОС( "UPDATE " + ЕГАИСТаблицаМарок + " 			 SET url	= LEFT( ISNULL( LTRIM( RTRIM( url ) ), '' ) + ';" + СписокДокументов.url + "', 250 )			 WHERE wb_NUMBER= '" + STDF( ЛокальныеСправки.wbr_WBNumber ) + "' AND 				   wb_Date = '" + DTOC( ЛокальныеСправки.wbr_WBDate ) + "' AND oref_ClientRegId = '" + STDF( ЛокальныеСправки.oref_ClientRegId ) + "'"  );	ВЫГРУЗИТЬ( ЕГАИСТаблицаСтрокСправокБ, "", "", "ЛокальныеСтрокСправки" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаФайлов, "", "identity_column", "ЛокальныеФайлы" );	ЗАПРОС( "UPDATE egais_unconfirmedttn SET confirmed = 1 WHERE egaisid = '" + ЛокальныеСправки.wbr_WBRegId + "'" );}ELSE IF ( ( ATC( СписокДокументов.url, "FORMBREGINFO" ) > 0 OR ATC( СписокДокументов.url,"FORM2REGINFO" ) > 0 ) AND !ПУСТО( СписокДокументов.replyid ) ){	// Получена справка Б на отправленную наклданую	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ИДДокумента		= ЗАПРОС( "SELECT identity_column FROM spr002 WHERE egaisreplyid = '" + STDF( СписокДокументов.replyid ) + "'" );	IF ( !ПУСТО( ИДДокумента ) )	{		ЗАГРУЗИТЬ( "ЛокальныеИДРасходныхНакладных", "XMLSTRING", ОтветСервера, "", "", "wbr:Header", "" );		IF ( !ПУСТО( ЛокальныеИДРасходныхНакладных.wbr_WBRegId ) )			ЗАПРОС( "UPDATE spr002 					 SET egaisid		= '" + STDF( ЛокальныеИДРасходныхНакладных.wbr_WBRegId ) + "', 						 egaisstatus	= CASE WHEN egaisstatus < 3 THEN 3 ELSE egaisstatus END,						 egaisFN		= '" + STDF( ЛокальныеИДРасходныхНакладных.wbr_EGAISFixNumber ) + "', 						 egaisFD		= '" + CTOD( ЛокальныеИДРасходныхНакладных.wbr_EGAISFixDate, 7 ) + "'					 WHERE identity_column= " + ИДДокумента  );		// Добавляем исходныые файлы в приложения документа		ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 				VALUES ( '002', " + ИДДокумента + ", 0, 'СправкаБ.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );		УДАЛИТЬ( "ALL", "ЛокальныеИДРасходныхНакладных" );		УдалитьОбработанныйФайл		= true;	}}ELSE IF ( ATC( СписокДокументов.url, "Ticket" ) > 0 AND !ПУСТО( СписокДокументов.replyid ) ){	// Получена информация с ЕГАИС ИД на отправленную наклданую	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	// Определяем тип документа, которому пришел ответ	ДОБАВИТЬКОНТЕКСТ( "SELECT code, ic FROM egais_requestslist WHERE request_id='" + STDF( СписокДокументов.replyid ) + "'", "ReplyInfo" );	КодДокумента	= ReplyInfo.code;	ИДДокумента		= ReplyInfo.ic;	IF ( КодДокумента == "002" )	{		IF ( ПУСТО( ИДДокумента ) )			ИДДокумента		= ЗАПРОС( "SELECT identity_column FROM spr002 WHERE egaisreplyid = '" + STDF( СписокДокументов.replyid ) + "'" );					IF ( !ПУСТО( ИДДокумента ) )		{			ЗАГРУЗИТЬ( "ЛокальныеИДРасходныхНакладных", "XMLSTRING", ОтветСервера, "", "", "ns:Ticket", "" );			IF ( !ПУСТО( ЛокальныеИДРасходныхНакладных.tc_RegID ) )				ЗАПРОС( "UPDATE spr002 SET egaisid= '" + STDF( ЛокальныеИДРасходныхНакладных.tc_RegID ) + "' WHERE identity_column= " + ИДДокумента  );			// Добавляем исходныые файлы в приложения документа			ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 					VALUES ( '002', " + ИДДокумента + ", 0, 'ПодтверждениеОтправки.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );			УДАЛИТЬ( "ALL", "ЛокальныеИДРасходныхНакладных" );			ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON; SELECT SPACE( 250 ) AS tc_RegID, SPACE( 250 ) AS tc_OperationResult, SPACE( 250 ) AS tc_OperationComment, SPACE( 250 ) AS tc_Comments; SET FMTONLY OFF", "LocalTicketInfo" );			ЗАГРУЗИТЬ( "LocalTicketInfo", "XMLSTRING", ОтветСервера, "", "", "ns:Ticket", "" );			// Интересуют только тикеты с отказом проведения документа			IF ( AT( ОтветСервера, " <tc:Conclusion>Rejected" ) > 0 )				ЗАПРОС( "UPDATE spr" + КодДокумента + " 						 SET egaisstatus	= 6,							 egaiscomment 	= '" + STDF( LocalTicketInfo.tc_Comments, 250 ) + "'						 WHERE identity_column= " + ИДДокумента );						УдалитьОбработанныйФайл		= true;			ЕГАИСКоличествоИзвещений++;		}	}	ELSE IF ( ВСПИСКЕ( КодДокумента, "043", "003", "019", "008", "046" ) )	{		// Для ДКС и ВТ может быть два запроса. Поэтому определяем точнее, для какого акта пришел ответ		В3Суффикс			= "";		IF ( ВСПИСКЕ( КодДокумента, "008", "046" ) )		{			ИДДокумента		= ЗАПРОС( "SELECT identity_column FROM spr" + КодДокумента + " WHERE egaisreplyid = '" + STDF( СписокДокументов.replyid ) + "'" );			IF ( ПУСТО( ИДДокумента ) )			{				ИДДокумента	= ЗАПРОС( "SELECT identity_column FROM spr" + КодДокумента + " WHERE egaisreplyid_v3 = '" + STDF( СписокДокументов.replyid ) + "'" );				В3Суффикс	= "_v3";			}		}		ELSE			IF ( ПУСТО( ИДДокумента ) )				ИДДокумента	= ЗАПРОС( "SELECT identity_column FROM spr" + КодДокумента + " WHERE egaisreplyid = '" + STDF( СписокДокументов.replyid ) + "'" );		IF ( !ПУСТО( ИДДокумента ) )		{			ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON; SELECT SPACE( 250 ) AS tc_RegID, SPACE( 250 ) AS tc_OperationResult, SPACE( 250 ) AS tc_OperationComment, SPACE( 250 ) AS tc_Comments, CONVERT( datetime, '' ) AS tc_OperationDate; SET FMTONLY OFF", "LocalTicketInfo" );			ЗАГРУЗИТЬ( "LocalTicketInfo", "XMLSTRING", ОтветСервера, "", "", "ns:Ticket", "" );			IF ( ВСПИСКЕ( КодДокумента, "043", "003", "008", "046" ) AND !ПУСТО( LocalTicketInfo.tc_RegID ) )				ЗАПРОС( "UPDATE spr" + КодДокумента + " SET egaisid" + В3Суффикс + "= '" + STDF( LocalTicketInfo.tc_RegID ) + "' WHERE identity_column= " + ИДДокумента  );							// Добавляем исходныые файлы в приложения документа			ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 					VALUES ( '" + КодДокумента + "', " + ИДДокумента + ", 0, 'ПодтверждениеОтправки.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );							// Интересуют только тикеты с результатами проведения документа			IF ( AT( ОтветСервера, "<tc:OperationResult>" ) > 0 )			{				ЗАПРОС( "UPDATE spr" + КодДокумента + " 						 SET egaisstatus" + В3Суффикс + "	= " + ЕСЛИ( AT( ОтветСервера, "<tc:OperationResult>Accept" ) > 0, ЕСЛИ( КодДокумента == "043", "CASE WHEN egaisreg = 'розничный' OR doctype IN ( '002', '003' ) THEN 4 ELSE 3 END", "3" ), ЕСЛИ( КодДокумента == "043", "5", "4" ) ) + ",							 egaiscomment" + В3Суффикс + " 	= '" + STDF( LocalTicketInfo.tc_OperationComment, 250 ) + "'						 WHERE identity_column= " + ИДДокумента );						 				// Проставляем дату операции, для того, чтобы можно было ее проанализировать в распределении алкокодов				IF ( ВСПИСКЕ( КодДокумента, "008", "046" ) AND !ПУСТО( LocalTicketInfo.tc_RegID ) )					ЗАПРОС( "UPDATE spr" + КодДокумента + " SET egaisdate" + В3Суффикс + "= '" + TTOC( LocalTicketInfo.tc_OperationDate ) + "' WHERE identity_column= " + ИДДокумента  );			}			ELSE IF ( AT( ОтветСервера, " <tc:Conclusion>Rejected" ) > 0 )				ЗАПРОС( "UPDATE spr" + КодДокумента + " 						 SET egaisstatus" + В3Суффикс + "	= " + ЕСЛИ( КодДокумента == "043", "5", "4" ) + ",							 egaiscomment" + В3Суффикс + " 	= '" + STDF( LocalTicketInfo.tc_Comments, 250 ) + "'						 WHERE identity_column= " + ИДДокумента );			УДАЛИТЬКОНТЕКСТ( "LocalTicketInfo" );						УдалитьОбработанныйФайл		= true;			ЕГАИСКоличествоИзвещений++;		}	}	ELSE IF ( КодДокумента == "001" )	{		// По приходной накладной может быть извещение о перемещении на/из розничный(ого) склад(а), или об ответном акте		ИДДокумента		= ЗАПРОС( "SELECT identity_column FROM spr" + КодДокумента + " WHERE egaisreplyid = '" + STDF( СписокДокументов.replyid ) + "'" );		IF ( ПУСТО( ИДДокумента ) )		{			ИДДокумента		= ЗАПРОС( "SELECT identity_column FROM spr" + КодДокумента + " WHERE egaisvnpreplyid = '" + STDF( СписокДокументов.replyid ) + "'" );			IF ( !ПУСТО( ИДДокумента ) )			{				ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON; SELECT SPACE( 250 ) AS tc_RegID, SPACE( 250 ) AS tc_OperationResult, SPACE( 250 ) AS tc_OperationComment, 														  SPACE( 250 ) AS tc_Comments, CONVERT( datetime, '' ) AS tc_OperationDate, SPACE( 250 ) AS tc_DocType ; SET FMTONLY OFF", "LocalTicketInfo" );				ЗАГРУЗИТЬ( "LocalTicketInfo", "XMLSTRING", ОтветСервера, "", "", "ns:Ticket", "" );				// Добавляем исходныые файлы в приложения документа				ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 						VALUES ( '" + КодДокумента + "', " + ИДДокумента + ", 0, 'ПодтверждениеОтправкиВНП.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );									// Интересуют только тикеты с результатами проведения документа				IF ( AT( ОтветСервера, "<tc:OperationResult>" ) > 0 )				{					ЗАПРОС( "UPDATE spr" + КодДокумента + " 							 SET egaisvnpstatus	= " + ЕСЛИ( AT( ОтветСервера, "<tc:OperationResult>Accept" ) > 0, ЕСЛИ( UPPER( ALLTRIM( LocalTicketInfo.tc_DocType ) ) == "TRANSFERTOSHOP", "3", "0" ), "4" ) + ",								 egaisvnpcomment 	= '" + STDF( LocalTicketInfo.tc_OperationComment, 250 ) + "'							 WHERE identity_column= " + ИДДокумента );							 					IF ( !ПУСТО( LocalTicketInfo.tc_RegID ) )						ЗАПРОС( "UPDATE spr" + КодДокумента + " SET egaisvnpid= '" + STDF( LocalTicketInfo.tc_RegID ) + "', 																	egaisvnpdate= CASE WHEN date > '" + TTOC( LocalTicketInfo.tc_OperationDate ) + "' THEN date ELSE '" + TTOC( LocalTicketInfo.tc_OperationDate ) + "' END WHERE identity_column= " + ИДДокумента  );				}				ELSE IF ( AT( ОтветСервера, "<tc:Conclusion>Rejected" ) > 0 )					ЗАПРОС( "UPDATE spr" + КодДокумента + " 							 SET egaisvnpstatus		= 4,								 egaisvnpcomment 	= '" + STDF( LocalTicketInfo.tc_Comments, 250 ) + "'							 WHERE identity_column= " + ИДДокумента );				УДАЛИТЬКОНТЕКСТ( "LocalTicketInfo" );								УдалитьОбработанныйФайл		= true;				ЕГАИСКоличествоИзвещений++;			}		}		ELSE // т.е. !ПУСТО( ИДДокумента ) 		{			ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON; SELECT SPACE( 250 ) AS tc_DocType, SPACE( 250 ) AS tc_Conclusion, SPACE( 250 ) AS tc_OperationResult, SPACE( 250 ) AS tc_Comments, SPACE( 250 ) AS tc_OperationComment; SET FMTONLY OFF", "LocalTicketInfo" );			ЗАГРУЗИТЬ( "LocalTicketInfo", "XMLSTRING", ОтветСервера, "", "", "ns:Ticket", "" );			ПЕРЕЙТИВНАЧАЛО( "LocalTicketInfo" );			// Если пришло подтверждение на отправленный акт, то проставляем ответ в поле накладной			IF ( AT( UPPER( ALLTRIM( LocalTicketInfo.tc_DocType ) ), "WAYBILLACT" ) > 0 )			{				ЗАПРОС( "UPDATE spr001 SET egaisact_reply= '" + STDF( LocalTicketInfo.tc_Conclusion + " " + LocalTicketInfo.tc_Comments, 250 ) + "' WHERE identity_column = " + ИДДокумента );				// Добавляем исходныые файлы в приложения документа				ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 						VALUES ( '001', " + ИДДокумента + ", 0, 'ПодтверждениеПриемаАкта.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );			}			ELSE IF ( AT( UPPER( ALLTRIM( LocalTicketInfo.tc_DocType ) ), "WAYBILL" ) > 0 )			{				Результат	= ЕСЛИ( AT( ОтветСервера, "<tc:OperationResult>Accept" ) > 0, "Принято", "Отказано" ) + " " + LocalTicketInfo.tc_OperationComment;				ЗАПРОС( "UPDATE spr001 SET egaisact_confirm= '" + STDF( Результат, 250 ) + "' WHERE identity_column = " + ИДДокумента );				// Добавляем исходныые файлы в приложения документа				ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 						VALUES ( '001', " + ИДДокумента + ", 0, 'ПодтверждениеОтправкиАкта.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );			}			// Интересуют только тикеты с результатами проведения документа			IF ( AT( ОтветСервера, "<tc:OperationResult>" ) > 0 )				ЗАПРОС( "UPDATE spr" + КодДокумента + " 						 SET egaisstatus	= " + ЕСЛИ( AT( ОтветСервера, "<tc:OperationResult>Accept" ) > 0, "3", "4" ) + "						 WHERE identity_column= " + ИДДокумента );			ELSE IF ( AT( ОтветСервера, "<tc:Conclusion>Rejected" ) > 0 )				ЗАПРОС( "UPDATE spr" + КодДокумента + " 						 SET egaisstatus		= " + ЕСЛИ( ATC( LocalTicketInfo.tc_Comments, "Вами уже высылался акт на данную ТТН" ) >= 0, "egaisstatus", "4" ) + "						 WHERE identity_column= " + ИДДокумента );			УДАЛИТЬКОНТЕКСТ( "LocalTicketInfo" );			УдалитьОбработанныйФайл		= true;			ЕГАИСКоличествоИзвещений++;		}	}	ELSE //IF ( КОЛИЧЕСТВОСТРОК( "ReplyInfo" ) > 0 )	{		// Ответы на все остальные запросы не интересуют. поэтому, удаляем их		УдалитьОбработанныйФайл		= true;		ЕГАИСКоличествоИзвещений++;	}			УДАЛИТЬКОНТЕКСТ( "ReplyInfo" );}ELSE IF ( ATC( СписокДокументов.url, "WayBillAct" ) > 0 ){	// Получен акт на отправленную наклданую	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЗАГРУЗИТЬ( "ЛокальныеИДРасходныхНакладных", "XMLSTRING", ОтветСервера, "", "", "wa:Header", "" );	IF ( !ПУСТО( ЛокальныеИДРасходныхНакладных.wa_WBRegId ) )	{		ИДДокумента		= ЗАПРОС( "SELECT identity_column FROM spr002 WHERE egaisid = '" + STDF( ЛокальныеИДРасходныхНакладных.wa_WBRegId ) + "'" );		IF ( !ПУСТО( ИДДокумента ) )		{			ТипАкта		= 0;			IF ( UPPER( ALLTRIM( ЛокальныеИДРасходныхНакладных.wa_IsAccept ) ) == "REJECTED" )				ТипАкта	= 3;			ELSE IF ( UPPER( ALLTRIM( ЛокальныеИДРасходныхНакладных.wa_IsAccept ) ) == "DIFFERENCES" )				ТипАкта	= 2;			ELSE IF ( UPPER( ALLTRIM( ЛокальныеИДРасходныхНакладных.wa_IsAccept ) ) == "ACCEPTED")				ТипАкта	= 1;							ЗАПРОС( "UPDATE spr002 SET egaisstatus = " + ЕСЛИ( ТипАкта == 1, "4", "7" ) + ", egaisact= " + ТипАкта + " WHERE identity_column= " + ИДДокумента  );			// Добавляем исходныые файлы в приложения документа			ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 					VALUES ( '002', " + ИДДокумента + ", 0, 'ОтветныйАкт.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );			УдалитьОбработанныйФайл		= true;			ЕГАИСКоличествоИзвещений++;		}	}	УДАЛИТЬ( "ALL", "ЛокальныеИДРасходныхНакладных" );}ELSE IF ( ATC( СписокДокументов.url, "ReplyPartner" ) > 0 OR ATC( СписокДокументов.url, "ReplyClient" ) > 0 ){	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЗАГРУЗИТЬ( "ЛокальныеКонтрагенты", "XMLSTRING", ОтветСервера, "", "ЕСЛИ( ВСПИСКЕ(LOWER(ИМЯПОЛЯ),'oref_fl','oref_ul','oref_ts','oref_fo'), 1, ЗНАЧЕНИЕПОЛЯ)", "rc:Client", "" );	// wb:Consignee - фирма получатель	ВЫГРУЗИТЬ( ЕГАИСТаблицаКонтрагентов, "", "", "ЛокальныеКонтрагенты" );}ELSE IF ( ATC( СписокДокументов.url, "ReplyAP" ) > 0 ){	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЗАГРУЗИТЬ( "ЛокальныеКонтрагенты", "XMLSTRING", ОтветСервера, "", "ЕСЛИ( ВСПИСКЕ(LOWER(ИМЯПОЛЯ),'oref_fl','oref_ul','oref_ts','oref_fo'), 1, ЗНАЧЕНИЕПОЛЯ)", "pref:Producer pref:Importer", "" );	// wb:Consignee - фирма получатель	ЗАГРУЗИТЬ( "ЛокальныеТовары", "XMLSTRING", ОтветСервера, "", "", "rap:Product", "pref:Importer" );	ЗАГРУЗИТЬ( "ЛокальныеИмпортеры", "XMLSTRING", ОтветСервера, "", "", "rap:Product", "pref:Producer" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаТоваров, "", "identity_column", "ЛокальныеТовары" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаИмпортеров, "", "identity_column", "ЛокальныеИмпортеры" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаКонтрагентов, "", "", "ЛокальныеКонтрагенты" );}ELSE IF ( ATC( СписокДокументов.url, "WayBillTicket" ) > 0 ){	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЗАГРУЗИТЬ( "ЛокальныеОтветы", "XMLSTRING", ОтветСервера, "", "", "", "" );	ЗАГРУЗИТЬ( "ЛокальныеФайлы", "XMLSTRING", ОтветСервера, "", "", "", "" );	REPLACE( "ЛокальныеФайлы", "url", СписокДокументов.url );	REPLACE( "ЛокальныеФайлы", "url_text", ОтветСервера );	ВЫГРУЗИТЬ( ЕГАИСТаблицаОтветов, "", "", "ЛокальныеОтветы" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаФайлов, "", "identity_column", "ЛокальныеФайлы" );	ЕГАИСКоличествоИзвещений++;}ELSE IF ( ATC( СписокДокументов.url, "ReplyRests" ) > 0 )	{	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЗАГРУЗИТЬ( "ЛокальныеКонтрагенты", "XMLSTRING", ОтветСервера, "", "ЕСЛИ( ВСПИСКЕ(LOWER(ИМЯПОЛЯ),'oref_fl','oref_ul','oref_ts','oref_fo'), 1, ЗНАЧЕНИЕПОЛЯ)", "pref:Producer pref:Importer", "" );		ЗАГРУЗИТЬ( "ЛокальныеТовары", "XMLSTRING", ОтветСервера, "", "", "rst:Product", "pref:Importer" );	ЗАГРУЗИТЬ( "ЛокальныеИмпортеры", "XMLSTRING", ОтветСервера, "", "", "rst:Product", "pref:Producer" );	ЗАГРУЗИТЬ( "ЛокальныеИнвентаризации", "XMLSTRING", ОтветСервера, "", "ЕСЛИ( LOWER(ИМЯПОЛЯ)=='ns_replyrestsshop_v2', 1, ЗНАЧЕНИЕПОЛЯ )", "", "pref:Producer pref:Importer" );	IF ( ATC( ОтветСервера, "rst:StockPosition" ) > 0 )		ЗАГРУЗИТЬ( "ЛокальныеСтрокиИнвентаризаций", "XMLSTRING", ОтветСервера, "rst:StockPosition", "", "", "" );	ELSE		ЗАГРУЗИТЬ( "ЛокальныеСтрокиИнвентаризаций", "XMLSTRING", ОтветСервера, "rst:ShopPosition", "", "", "" );			ЗАГРУЗИТЬ( "ЛокальныеФайлы", "XMLSTRING", ОтветСервера, "", "", "", "" );	REPLACE( "ЛокальныеИнвентаризации", "replyid", СписокДокументов.replyid );	REPLACE( "ЛокальныеСтрокиИнвентаризаций", "replyid", СписокДокументов.replyid, "ALL" );	REPLACE( "ЛокальныеФайлы", "url", СписокДокументов.url );	REPLACE( "ЛокальныеФайлы", "url_text", ОтветСервера );	REPLACE( "ЛокальныеФайлы", "replyid", СписокДокументов.replyid );		ВЫГРУЗИТЬ( ЕГАИСТаблицаКонтрагентов, "", "", "ЛокальныеКонтрагенты" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаТоваров, "", "identity_column", "ЛокальныеТовары" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаИмпортеров, "", "identity_column", "ЛокальныеИмпортеры" );		ВЫГРУЗИТЬ( ЕГАИСТаблицаИнвентаризаций, "", "", "ЛокальныеИнвентаризации" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаСтрокИнвентаризаций, "", "identity_column", "ЛокальныеСтрокиИнвентаризаций" );	ВЫГРУЗИТЬ( ЕГАИСТаблицаФайлов, "", "identity_column", "ЛокальныеФайлы" );}ELSE IF ( ATC( СписокДокументов.url, "INVENTORYREGINFO" ) > 0 AND !ПУСТО( СписокДокументов.replyid ) ){	// Получены справки А и Б на отправленный акт поставновки на баланс	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЧитатьИДСтроки	= true;	// Мз-за того, что тэг aint:Identity встречается как для позиции, так и для ИД справки Б, приходится анализировать, в каком месте текста находимся	ЗАГРУЗИТЬ( "ЛокальныеИДСправокАБ", "XMLSTRING", ОтветСервера, "aint:Position", "ЗНАЧЕНИЕПОЛЯ= ЕСЛИ( LOWER( ИМЯПОЛЯ ) == 'aint_identity' AND !ЧитатьИДСтроки, ЛокальныеИДСправокАБ.aint_identity, ЗНАЧЕНИЕПОЛЯ );																					IF ( LOWER( ИМЯПОЛЯ ) == 'aint_identity' ) ЧитатьИДСтроки= false; IF ( LOWER( ИМЯПОЛЯ ) == 'aint_position' ) ЧитатьИДСтроки= true; 																					ЗНАЧЕНИЕПОЛЯ", "", "" );	ПЕРЕЙТИВНАЧАЛО( "ЛокальныеИДСправокАБ" );	IF ( КОЛИЧЕСТВОСТРОК( "ЛокальныеИДСправокАБ" ) > 0 )	{		ИДДокумента		= ЗАПРОС( "SELECT identity_column FROM spr043 WHERE egaisreplyid = '" + STDF( СписокДокументов.replyid ) + "'" );		IF ( !ПУСТО( ИДДокумента ) )		{			// Если производится повторная загрузка файла, то надо предварительно удалить ранее загруженные номера, чтобы они не задвоились.			ЗАПРОС( "DELETE FROM barcodes2 WHERE code = '043' AND ic= " + ИДДокумента );			WHILE ( !КОНЕЦКОНТЕКСТА( "ЛокальныеИДСправокАБ" ) )			{				НомераМарок		= ЛокальныеИДСправокАБ.aint_InformARegId + "/" + ЛокальныеИДСправокАБ.aint_BRegId;  				ДОБАВИТЬКОНТЕКСТ( "INSERT INTO barcodes2 ( code, ic, spec_ic, nn, barcode, date, sklad, kolp )									 SELECT '043', spr.identity_column, spec.identity_column, spec.nn, '" + STDF( НомераМарок ) + "', spr.date, spr.sklad, spec.kolp									 FROM spec043 spec									 INNER JOIN spr043 spr ON spec.ic = spr.identity_column									 WHERE spr.identity_column = " + ИДДокумента + " AND spec.npp= '" + STDF( ЛокальныеИДСправокАБ.aint_Identity ) + "'", "НовыеСправки" );				УДАЛИТЬКОНТЕКСТ( "НовыеСправки" );				ПРОПУСТИТЬ( 1, "ЛокальныеИДСправокАБ" );			}							ЗАПРОС( "UPDATE spr043 SET egaisstatus = 4 WHERE identity_column= " + ИДДокумента  );			// Добавляем исходные файлы в приложения документа			ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 					VALUES ( '043', " + ИДДокумента + ", 0, 'НомераСправокАБ.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );			УдалитьОбработанныйФайл		= true;		}	}	УДАЛИТЬ( "ALL", "ЛокальныеИДСправокАБ" );}ELSE IF ( ATC( СписокДокументов.url, "REPLYFORM1" ) > 0 ){	// Получены ответ на запрос информации о справке А	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ЗАГРУЗИТЬ( "ЛокальныеКонтрагенты", "XMLSTRING", ОтветСервера, "", "ЕСЛИ( ВСПИСКЕ(LOWER(ИМЯПОЛЯ),'oref_fl','oref_ul','oref_ts','oref_fo'), 1, ЗНАЧЕНИЕПОЛЯ)", "rfa:OriginalClient", "" );	// Интересует только один тэг oref:ClientRegId из группы rfa:OriginalClient и тэг rfa:InformF1RegId	ДобавитьКонтекст( "SET FMTONLY ON SELECT SPACE( 50 ) AS oref_ClientRegId, SPACE( 50 ) AS rfa_InformF1RegId, SPACE( 50 ) AS rfa_BottlingDate, SPACE( 50 ) AS pref_AlcCode; SET FMTONLY OFF", "СправкаАИнфо" );	ДОБАВИТЬКОНТЕКСТ( "LOCAL: pref_AlcCode char", "СправкаААлкокод" );	ЗАГРУЗИТЬ( "СправкаАИнфо", "XMLSTRING", ОтветСервера, "", "", "ns:ReplyForm1", "rfa:Product" );	ЗАГРУЗИТЬ( "СправкаААлкокод", "XMLSTRING", ОтветСервера, "", "", "rfa:Product", "" );	ПЕРЕЙТИВНАЧАЛО( "СправкаАИнфо" );	IF ( КОЛИЧЕСТВОСТРОК( "СправкаАИнфо" ) > 0 )	{		СправкаА		= СправкаАИнфо.rfa_InformF1RegId;		Импортер		= ЗАПРОС( "SELECT code FROM sprclient WHERE egaisid= '" + СправкаАИнфо.oref_ClientRegId + "'" );		ДатаРозлива		= CTOD( СправкаАИнфо.rfa_BottlingDate, 7 );		IF ( ПУСТО( Импортер ) )		{			ВЫГРУЗИТЬ( ЕГАИСТаблицаКонтрагентов, "", "", "ЛокальныеКонтрагенты" );			ЕГАИС.СформироватьКонтрагентов( СправкаАИнфо.oref_ClientRegId );			Импортер	= ЗАПРОС( "SELECT code FROM sprclient WHERE egaisid= '" + СправкаАИнфо.oref_ClientRegId + "'" );		}		IF ( !ПУСТО( Импортер ) AND !ПУСТО( СправкаА ) )		{			// В спецификации документа проставляем импортера для строк с такой справкой А			ЗАПРОС( "UPDATE spec001 SET importer = '" + Импортер + "' 					 FROM spec001 spec001					 INNER JOIN spr001 spr001 ON spec001.ic = spr001.identity_column					 INNER JOIN accountlist alist ON alist.code = '001' AND alist.ic = spr001.identity_column 					 WHERE LEFT( informb, " + ДЛИНА( СправкаА ) + " ) = '" + STDF( СправкаА ) + "'" );			// В информации из ЕГАИС проставляем данные об импортере			ЗАПРОС( "UPDATE sprres_egais SET importer = '" + Импортер + "' 					 FROM sprres_egais sprres_egais					 WHERE alcocode = '" + STDF( СправкаАИнфо.pref_AlcCode ) + "'" );			IF ( !EMPTY( СправкаААлкокод.pref_AlcCode ) )			{				// В карточке товара проставляем данные об импортере				ЗАПРОС( "UPDATE sprres SET importer = '" + Импортер + "' 						 FROM sprres sprres						 WHERE alcocode = '" + STDF( СправкаААлкокод.pref_AlcCode ) + "' AND alcocode <> ''" );			}		}		IF ( !ПУСТО( ДатаРозлива ) AND !ПУСТО( СправкаА ) )		{			// В спецификации документа проставляем импортера для строк с такой справкой А			ЗАПРОС( "UPDATE spec001 SET date_ex = '" + DTOC( ДатаРозлива ) + "' 					 FROM spec001 spec001					 INNER JOIN spr001 spr001 ON spec001.ic = spr001.identity_column					 INNER JOIN accountlist alist ON alist.code = '001' AND alist.ic = spr001.identity_column 					 WHERE LEFT( informb, " + ДЛИНА( СправкаА ) + " ) = '" + STDF( СправкаА ) + "' AND date_ex = ''" );		}		ЕГАИСКоличествоИзвещений++;	}	УДАЛИТЬКОНТЕКСТ( "СправкаАИнфо" );	УДАЛИТЬКОНТЕКСТ( "СправкаААлкокод" );}ELSE IF ( ATC( СписокДокументов.url, "REPLYNATTN" ) > 0 ){	// Получены ответ на запрос информации о справке А	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	// Интересует только один тэг ttn:NoAnswer	ДобавитьКонтекст( "SET FMTONLY ON SELECT SPACE( 50 ) AS ttn_WbRegID; SET FMTONLY OFF", "СписокПовторовТТН" );	ЗАГРУЗИТЬ( "СписокПовторовТТН", "XMLSTRING", ОтветСервера, "ttn:NoAnswer", "", "", "" );	ПЕРЕЙТИВНАЧАЛО( "СписокПовторовТТН" );	ИНДИКАТОР( "Отправка запросов ТТН в ЕГАИС", КОЛИЧЕСТВОСТРОК( "СписокПовторовТТН" ) );	WHILE ( !КОНЕЦКОНТЕКСТА( "СписокПовторовТТН" ) )	{		ИНДИКАТОР( НОМЕРСТРОКИ( "СписокПовторовТТН" ) + 1, "Отправлено " + СТРОКА( НОМЕРСТРОКИ( "СписокПовторовТТН" ) + 1 ) + " запросов в ЕГАИС" );		// Запрашиваем только первую ТТН, т.к. ЕГАИС не дает запрашивать больше		IF ( НОМЕРСТРОКИ( "СписокПовторовТТН" ) == 0 )		{			ЕГАИС.ЗапроситьТТН( СписокПовторовТТН.ttn_WbRegID, true );			ЗАПРОС( "INSERT INTO egais_unconfirmedttn ( utm, egaisid, requested ) VALUES ( '" + СКЛАД + "', '" + СписокПовторовТТН.ttn_WbRegID + "', 1 )" );		}		ELSE		{			ЗАПРОС( "DELETE FROM egais_unconfirmedttn WHERE egaisid = '" + СписокПовторовТТН.ttn_WbRegID + "'" );			ЗАПРОС( "INSERT INTO egais_unconfirmedttn ( utm, egaisid ) VALUES ( '" + СКЛАД + "', '" + СписокПовторовТТН.ttn_WbRegID + "' )" );		}		ПРОПУСТИТЬ( 1, "СписокПовторовТТН" );		ЕГАИСКоличествоОтправленныхЗапросов++;	}	УДАЛИТЬКОНТЕКСТ( "СписокПовторовТТН" );	ИНДИКАТОР( );}ELSE IF ( ATC( СписокДокументов.url, "REPLYRESTBCODE" ) > 0 ) //AND !ПУСТО( СписокДокументов.replyid ) ){	// Получены справки А и Б на отправленный акт поставновки на баланс	IF ( LEFT( ОтветСервера, 5 ) != "<?xml" )		ОтветСервера	= "<?xml version=""1.0"" encoding=""utf-8""?>" + ОтветСервера;	ФОРМАБ				= "";	Алкокод				= "";	ИДСтроки			= 0;	НайденоМарок		= 0;	// Если пришел отказ, то необходимо снять признак отправки со строки	IF ( ATC( ОтветСервера, "ns:ReplyRestBCode"  ) == 0 )	{		IF ( !ПУСТО( СписокДокументов.replyid ) )		{			// Достаем из запроса справку для определения строки документа			ЗапросМРК		= ЗАПРОС( "SELECT request FROM egais_requestslist WHERE request_id= '" + STDF( СписокДокументов.replyid ) + "'" );			КодДокумента	= ЗАПРОС( "SELECT code FROM egais_requestslist WHERE request_id= '" + STDF( СписокДокументов.replyid ) + "'" );			ИДДокумента		= ЗАПРОС( "SELECT ic FROM egais_requestslist WHERE request_id= '" + STDF( СписокДокументов.replyid ) + "'" );			ФормаБ			= ПОДСТРОКА( ЗапросМРК, ATC( ЗапросМРК, "<qp:Value>" ) + 10, 18 );			IF ( !ПУСТО( КодДокумента ) AND !ПУСТО( ИДДокумента ) AND !ПУСТО( ФормаБ ) )			{				// Проставляем признак у справки документа, о том, что марки не были приняты				ЗАПРОС( "UPDATE barcodes2 SET fauto = 0 WHERE code = '" + КодДокумента + "' AND ic = " + ИДДокумента + " AND barcode LIKE '%" + STDF( ФОРМАБ ) + "'" );			}		}	}	ELSE	{		// Кроме загрузки марок необходимо запомнить номер справки		ЗАГРУЗИТЬ( "ЛокальныеМарки", "XMLSTRING", ОтветСервера, "ce:amc", "IF ( LOWER( ИМЯПОЛЯ ) == 'rst_inform2regid' ) ФОРМАБ= ЗНАЧЕНИЕПОЛЯ; ЗНАЧЕНИЕПОЛЯ", "", "" );		ПЕРЕЙТИВНАЧАЛО( "ЛокальныеМарки" );		IF ( КОЛИЧЕСТВОСТРОК( "ЛокальныеМарки" ) > 0 )		{			КодДокумента	= ЗАПРОС( "SELECT code FROM egais_requestslist WHERE request_id= '" + STDF( СписокДокументов.replyid ) + "'" );			ИДДокумента		= ЗАПРОС( "SELECT ic FROM egais_requestslist WHERE request_id= '" + STDF( СписокДокументов.replyid ) + "'" );			// Еслио запрос был отправлен не из документа, то пытаемся найти последнюю не проведенную инвентаризацию ЕГАИС с такой справкой			IF ( ПУСТО( КодДокумента ) )			{				ДОБАВИТЬКОНТЕКСТ( "SELECT TOP 1 '045' AS code, identity_column AS ic 								   FROM spr045								   WHERE (SELECT f_deleted FROM spr000 WHERE code = '045' AND ic = spr045.identity_column ) = 0 AND spr045.egaisreg = 'оптовый' AND 										 NOT EXISTS( SELECT * FROM accountlist WHERE code= '045' AND ic = spr045.identity_column AND transacted = 1 ) AND										 EXISTS( SELECT spec_ic FROM barcodes2 WHERE code = '045' AND ic = spr045.identity_column AND barcode LIKE '%" + STDF( ФОРМАБ ) + "' )								   ORDER BY date DESC", "ИнвентаризацияЕГАИС" );				КодДокумента	= ИнвентаризацияЕГАИС.code;				ИДДокумента		= ИнвентаризацияЕГАИС.ic;				УДАЛИТЬКОНТЕКСТ( "ИнвентаризацияЕГАИС" );							}			IF ( !ПУСТО( КодДокумента ) )			{				ИДСтроки		= ЗАПРОС( "SELECT spec_ic FROM barcodes2 WHERE code = '" + КодДокумента + "' AND ic = " + ИДДокумента + " AND barcode LIKE '%" + STDF( ФОРМАБ ) + "'" );				Алкокод			= ЗАПРОС( "SELECT alcocode FROM spec000 WHERE code = '" + КодДокумента + "' AND ic = " + ИДДокумента + " AND identity_column= " + ИДСтроки );			}			WHILE ( !КОНЕЦКОНТЕКСТА( "ЛокальныеМарки" ) )			{				IF ( ПУСТО( ЛокальныеМарки.ce_amc ) )				{					ПРОПУСТИТЬ( 1, "ЛокальныеМарки" );					CONTINUE;				}				НайденоМарок++;				// Записываем марки/справки в таблицу марок/справок				__sql( ) {					DECLARE @alcocode varchar( 50 );					SELECT @alcocode = '[[ Алкокод ]]';					IF @alcocode = '' SELECT @alcocode = dbo.fn_alcocodeformark( '[[ STDF( ЛокальныеМарки.ce_amc ) ]]' );										IF EXISTS( SELECT * FROM egais_marks WHERE mark = '[[ STDF( ЛокальныеМарки.ce_amc ) ]]' )						UPDATE egais_marks 						SET informb 	= CASE WHEN NOT informb LIKE '%[[ STDF( ФОРМАБ ) ]]' THEN '[[ STDF( ФОРМАБ ) ]]' ELSE informb END,							bcexists	= 1,							date		= GETDATE( )						WHERE mark = '[[ STDF( ЛокальныеМарки.ce_amc ) ]]';					ELSE						INSERT INTO egais_marks ( mark, alcocode, informb, bcexists, date ) 						VALUES ( '[[ STDF( ЛокальныеМарки.ce_amc ) ]]', @alcocode, '[[ STDF( ФОРМАБ ) ]]', 1, GETDATE( ) );				}				IF ( !ПУСТО( КодДокумента ) AND !ПУСТО( ИДДокумента ) AND !ПУСТО( ИДСтроки ) )				{					ДОБАВИТЬКОНТЕКСТ( "IF NOT EXISTS( SELECT * FROM barcodes WHERE code = '" + КодДокумента + "' AND ic = " + ИДДокумента + " AND spec_ic = " + ИДСтроки + " AND barcode = '" + STDF( ЛокальныеМарки.ce_amc )+ "' )										 INSERT INTO barcodes ( code, ic, spec_ic, nn, barcode, date, sklad, kolp, f_auto )										 SELECT '" + КодДокумента + "', spr.identity_column, spec.identity_column, spec.nn, '" + STDF( ЛокальныеМарки.ce_amc ) + "', spr.date, spr.sklad, 0, 1										 FROM spec" + КодДокумента + " spec										 INNER JOIN spr" + КодДокумента + " spr ON spec.ic = spr.identity_column										 WHERE spr.identity_column = " + ИДДокумента + " AND spec.identity_column= " + ИДСтроки + " 									   ELSE										 UPDATE barcodes SET f_auto = 1 WHERE code = '" + КодДокумента + "' AND ic = " + ИДДокумента + " AND spec_ic = " + ИДСтроки + " AND barcode = '" + STDF( ЛокальныеМарки.ce_amc ) + "'", "НовыеМарки" );					УДАЛИТЬКОНТЕКСТ( "НовыеМарки" );					// У строки проставляем признак наличия марок					ЗАПРОС( "UPDATE spec045 SET bcexists= 1 WHERE identity_column = " + ИДСтроки );				}				ПРОПУСТИТЬ( 1, "ЛокальныеМарки" );			}							IF ( !ПУСТО( КодДокумента ) AND !ПУСТО( ИДДокумента ) AND !ПУСТО( ИДСтроки ) )			{				// Добавляем исходные файлы в приложения документа				ЗАПРОС("INSERT INTO spec000_img ( code, ic, pnum, filename, doc_image ) 						VALUES ( '" + КодДокумента + "', " + ИДДокумента + ", 0, 'Марки.txt', CONVERT( varbinary( max ), '" + STDF( ОтветСервера ) + "' ) ) " );										// Проставляем признак у справки документа, о том, что марки приняты				ЗАПРОС( "UPDATE barcodes2 SET fauto = 1 WHERE code = '" + КодДокумента + "' AND ic = " + ИДДокумента + " AND spec_ic= " + ИДСтроки + " AND barcode LIKE '%" + STDF( ФОРМАБ ) + "'" );			}			// Если по факту марки не были найдены, то снимаем признак помарочного учета со старых марок			IF ( НайденоМарок == 0 )				ЗАПРОС( "UPDATE egais_marks SET bcexists= 0 WHERE LEN( mark ) = 68 AND informb LIKE '%" + STDF( ФОРМАБ ) + "'" );		}		ELSE		{			ЗапросМРК		= ЗАПРОС( "SELECT request FROM egais_requestslist WHERE request_id= '" + STDF( СписокДокументов.replyid ) + "'" );			ФормаБ			= ПОДСТРОКА( ЗапросМРК, ATC( ЗапросМРК, "<qp:Value>" ) + 10, 18 );			// Для старых марок снимаем признак помарочного учета			ЗАПРОС( "UPDATE egais_marks SET bcexists= 0 WHERE LEN( mark ) = 68 AND informb LIKE '%" + STDF( ФОРМАБ ) + "'" );		}	}	ЕГАИСКоличествоИзвещений++;}// Если это ответ на какой либо запрос, то отмечаем это в таблице запросовIF ( !ПУСТО( СписокДокументов.replyid ) ) 	ЕГАИС.ЗакрытьЗапрос( СписокДокументов.replyid, СписокДокументов.url, ОтветСервера );	УДАЛИТЬ( "ALL", "ЛокальныеКонтрагенты" );УДАЛИТЬ( "ALL", "ЛокальныеТовары" );УДАЛИТЬ( "ALL", "ЛокальныеНакладные" );УДАЛИТЬ( "ALL", "ЛокальныеСтроки" );УДАЛИТЬ( "ALL", "ЛокальныеСправки" );УДАЛИТЬ( "ALL", "ЛокальныеМарки" );УДАЛИТЬ( "ALL", "ЛокальныеСтрокСправки" );УДАЛИТЬ( "ALL", "ЛокальныеОтветы" );УДАЛИТЬ( "ALL", "ЛокальныеФайлы" );УДАЛИТЬ( "ALL", "ЛокальныеИДСправокАБ" );УДАЛИТЬ( "ALL", "ЛокальныеИмпортеры" );УДАЛИТЬ( "ALL", "ЛокальныеИнвентаризации" );УДАЛИТЬ( "ALL", "ЛокальныеСтрокиИнвентаризаций" );// Если файл уже обработан и более не нужен, то удаляем егоIF ( УдалитьОбработанныйФайл AND VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param = 'EGAIS_DELETEFILES" + СКЛАД + "'" ) ) != 0 ){	// Выполняем команду DELETE с нужным URL	_РЕЗУЛЬТАТУДАЛЕНИЯ	= _РЕЗУЛЬТАТУДАЛЕНИЯ AND ЕГАИС.HTTPCommand( "DELETE", СписокДокументов.url );}// Если это был ответ на запрос, то удаляем связанный запросIF ( УдалитьОбработанныйФайл AND !ПУСТО( СписокДокументов.replyid ) AND НАЙТИ( "СписокИсходящихДокументов", "replyid", СписокДокументов.replyid ) )	ЕГАИС.HTTPCommand( "DELETE", СписокИсходящихДокументов.url );RETURN true;
