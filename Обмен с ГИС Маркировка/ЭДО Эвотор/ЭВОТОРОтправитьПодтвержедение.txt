

СЕРТИФИКАТ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );
ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;
ПОДПИСАНТИМЯ			= ДАННЫЕ_JSON( "first", ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_EDIFIRSTNAME" + ПРЕДПРИЯТИЕ + "'" ) );
ПОДПИСАНТФАМИЛИЯ		= ДАННЫЕ_JSON( "last", ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_EDISURNAME" + ПРЕДПРИЯТИЕ + "'" ) );
ПОДПИСАНТОТЧЕСТВО		= ДАННЫЕ_JSON( "middle", ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_EDIMIDDLENAME" + ПРЕДПРИЯТИЕ + "'" ) );
ПОДПИСАНТДОЛЖНОСТЬ		= ДАННЫЕ_JSON( "position", ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_EDIPOSITION" + ПРЕДПРИЯТИЕ + "'" ) );
ПОДПИСЬТП				= ПЕРЕКОДИРОВАТЬ( "{""name"":{" + ПОДПИСАНТИМЯ + "," + ПОДПИСАНТФАМИЛИЯ + ", " + ПОДПИСАНТОТЧЕСТВО + "}, " + ПОДПИСАНТДОЛЖНОСТЬ + "}", "ANSI", "UTF-8" );
ПОДПИСЬУОУ				= ПЕРЕКОДИРОВАТЬ( "{""person"":{" + ПОДПИСАНТИМЯ + "," + ПОДПИСАНТФАМИЛИЯ + ", " + ПОДПИСАНТОТЧЕСТВО + "}, " + ПОДПИСАНТДОЛЖНОСТЬ + "}", "ANSI", "UTF-8" );

ЭВОТОРТОКЕН				= Маркировка.ЭВОТОРАвторизация( ПРЕДПРИЯТИЕ, СЕРТИФИКАТ );
IF ( ПУСТО( ЭВОТОРТОКЕН ) ) RETURN false;

АдресСервера 			= ЕСЛИ( ТЕСТОВЫЙКОНТУР, "https://edo-v2.platformaofd.ru", "https://edo.platformaofd.ru" );
Заголовки[ 0 ]			= "Authorization: Bearer " + ЭВОТОРТОКЕН;
Заголовки[ 1 ]			= "Content-Type: application/json;charset=UTF-8";
Соединение 				= -1;
НАЙДЕНТИТУЛ				= false;

// Проходим по дням периода и запрашиваем документы из Платформа ЭДО
try
{
	// Для начала проверяем/отправляем квитанции документа
	IF ( !МАРКИРОВКА.ЭВОТОРОтправитьКвитанцию( ПРЕДПРИЯТИЕ, ИДДокумента, true, @НАЙДЕНТИТУЛ ) ) THROW( "" );
	// Если титул уже был отправлен, то проставляем статус документа и выходим
	IF ( НАЙДЕНТИТУЛ )
	{
		// Если все прошло без ошибок, то ставим статус отправки
		ЗАПРОС( "UPDATE mark_in SET status = 2 WHERE guid= '" + STDF( ИДДокумента ) + "'" );
		RETURN true;
	}

	// В зависимости от параметра документа создаем либо титул покупателя, либо УоУ
	IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT ndok, date, acttype, actnote FROM mark_in WHERE guid= '" + STDF( ИДДокумента ) + "'", "Документ" ) ) THROW( _ERRORDESCRIPTION );
	IF ( Документ.acttype == "001" ) /* Подтверждение документа */
	{
		Текст			= "{""acceptanceDate"": """ + DTOC( ДАТА( ), 7, "-" ) + """,""signerDetails"": {" + ПОДПИСЬТП + "}";
		ApiФункция		= "customer-title";
	}
	ELSE IF ( Документ.acttype == "003" ) /* Отказ от документа */
	{
		Причина			= ПЕРЕКОДИРОВАТЬ( ДАННЫЕ_JSON( "reason", Документ.actnote ), "ANSI", "UTF-8" );;
		Текст			= "{" + Причина + "," + ПОДПИСЬУОУ + "}";
		ApiФункция		= "rejection";
	}
	ELSE THROW( "У документа № " + Документ.ndok + " от " + DTOC( Документ.date ) + " не выбран тип ответного акта." ); /* Ошибка */

	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );
	Соединение 			= HTTPCONNECT( АдресСервера, "", true, Маркировка.ФАЙЛЖУРНАЛА( ) );
	Ответ				= HTTPPUT( Соединение, "api/v2/documents/" + ИДДокумента + "/" + ApiФункция, Текст, "Заголовки" );
	IF ( !МАРКИРОВКА.ЭВОТОРПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );
	HTTPCLOSE( Соединение );
	Соединение 			= -1;

	// Записываем связанный документ в базу
	Маркировка.ЭВОТОРЗаписатьСвязанныйДокумент( ПРЕДПРИЯТИЕ, ИДДокумента, Ответ );
	
	// Из полученного ответа извлекаем ИД докуменнта и прикрепляем к нему подпись
	ДокументОтвета		= ПОЛЕ_JSON( Ответ, "id", "" );
	IF ( ПУСТО( ДокументОтвета ) ) THROW ( "Сервер вернул ошибочный ответ: " + CHR( 13 ) + Ответ );
	IF ( !Маркировка.ЭВОТОРПрикрепитьПодпись( ПРЕДПРИЯТИЕ, ДокументОтвета ) ) THROW( "" );
	
	// Если все прошло без ошибок, то ставим статус отправки
	ЗАПРОС( "UPDATE mark_in SET status = 2 WHERE guid= '" + STDF( ИДДокумента ) + "'" );
}
catch ( ТекстСообщения )
{
	IF ( Соединение >= 0 ) HTTPCLOSE( Соединение );
	IF ( !ПУСТО( ТекстСообщения ) ) СООБЩЕНИЕ( ТекстСообщения );
	RETURN false;
}

RETURN true;
