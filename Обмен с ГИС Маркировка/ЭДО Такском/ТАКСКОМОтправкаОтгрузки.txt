
СЕРТИФИКАТ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );
ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;
Фирма					= ЗАПРОС( "SELECT code FROM sprfirm WHERE code IN ( SELECT CONVERT( varchar( 10 ), value ) FROM param_ex WHERE param= 'MARK_FIRM" + ПРЕДПРИЯТИЕ + "')" );

// Фирма в документе должна совпадать с фирмой в настройках
ИДДокумента				= ЗАПРОС( "SELECT ic FROM mark_out WHERE guid = '" + GUIDДокумента + "'" );
IF ( Фирма != ЗАПРОС( "SELECT firm FROM spr002 WHERE identity_column = " + ИДДокумента ) )
{
	НазваниеДокумента	= ЗАПРОС( "SELECT '№ ' + RTRIM( ndok ) + ' от ' + CONVERT( varchar( 20 ), date, 104 ) FROM spr002 WHERE identity_column = " + ИДДокумента );
	СООБЩЕНИЕ( "Фирма в документе Расходная накладная " + НазваниеДокумента + CHR( 13 ) + 
			   "не совпадает с фирмой в настройках модуля Маркировка." + CHR( 13 ) + 
			   "Документ не был отправлен в систему ЭДО." );
	RETURN false;
}

// Формируем XML файл для отправки в ЭДО
ИмяФайла				= Маркировка.СоздатьXMLИзДокумента( ПРЕДПРИЯТИЕ, GUIDДокумента );
IF ( ПУСТО( ИмяФайла ) || !МАРКИРОВКА.ПрочитатьУПД( GUIDДокумента ) ) RETURN false;
// Читаем сформированное содержимое и удаляем файл
ДокументXML				= ФАЙЛПРОЧИТАТЬ( ИмяФайла, "S", -1 );
ФАЙЛУДАЛИТЬ( ИмяФайла );
ИмяФайла				= ПОДСТРОКА( ИмяФайла, RAT( ИмяФайла, "\" ) + 1 );

ТАКСКОМТОКЕН			= Маркировка.ТАКСКОМАвторизация( ПРЕДПРИЯТИЕ );
IF ( ПУСТО( ТАКСКОМТОКЕН ) ) RETURN false;

АдресСервера 			= Маркировка.ТАКСКОМАдресСервера( ТЕСТОВЫЙКОНТУР );;
Заголовки[ 0 ]			= "Content-Type: application/x-www-form-urlencoded";
Заголовки[ 1 ]			= "Integrator-Id: " + МАРКИРОВКА.ТАКСКОМИнтегратор( );
Заголовки[ 2 ]			= "Assistant-Key: " + ТАКСКОМТОКЕН;
Соединение 				= -1;
Результат				= true;
СообщениеОбОшибке		= "";
try
{
	ИМЯТАБЛИЦЫ			= Маркировка.ТАКСКОМТаблицаКонтейнера( );
	IF ( ПУСТО( ИМЯТАБЛИЦЫ ) ) THROW( _ERRORDESCRIPTION );
	
	IF ( !ЗАПРОС( "INSERT INTO " + ИМЯТАБЛИЦЫ + " ( filename, content, type, signname, signcontent ) VALUES 
				   ( '" + ИмяФайла + "', " + МАССИВИЗСТРОКИ( ДокументXML ) + ", 'Invoice', '', 0x0 ) " ) ) THROW( _ERRORDESCRIPTION );
	
	Карта				= МАРКИРОВКА.ТАКСКОМCard( ПРЕДПРИЯТИЕ, "ExpInvoiceAndPrimaryAccountingDocumentVendor", Документ.firm, Документ.client, "", Документ.ndok, Документ.date, Документ.summa );
	if ( ПУСТО( Карта ) ) THROW( "Ошибка создания card.xml" + CHR( 13 ) + _ERRORDESCRIPTION );
	IF ( !ЗАПРОС( "INSERT INTO " + ИМЯТАБЛИЦЫ + " ( filename, content, type, signname, signcontent ) VALUES 
				   ( 'card.xml', " + МАССИВИЗСТРОКИ( Карта ) + ", 'Invoice', '', 0x0 ) " ) ) THROW( _ERRORDESCRIPTION );
	
	Контейнер			= МАРКИРОВКА.ТАКСКОМКонтейнер( ИМЯТАБЛИЦЫ, СЕРТИФИКАТ, GUIDДокумента );
	
	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );
	Соединение 			= HTTPCONNECT( АдресСервера, "", true, Маркировка.ФАЙЛЖУРНАЛА( ) );

	Ответ				= HTTPPOST( Соединение, "v1.3/API/SendMessage/Outbox.zip", Контейнер, "Заголовки" );
	IF ( !МАРКИРОВКА.ТАКСКОМПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );
	
	// Запишем отправленные файлы
	МАРКИРОВКА.ТАКСКОМЗАПИСАТЬСВЯЗАННЫЙДОКУМЕНТ( ПРЕДПРИЯТИЕ, GUIDДокумента, GUIDДокумента, ДокументXML, "Invoice" );
}
catch ( ТекстСообщения )
{
	СообщениеОбОшибке	= ТекстСообщения;
	Результат			= false;
}
IF ( Соединение >= 0 ) HTTPCLOSE( Соединение );
СИСТЕМНОЕСООБЩЕНИЕ( );
IF ( !Результат )
	СООБЩЕНИЕ( ЕСЛИ( ПУСТО( СообщениеОбОшибке ), _ERRORDESCRIPTION, ТекстСообщения ) );

// Проверяем и обрабатываем служебные этапы, если такие появились
МАРКИРОВКА.ТАКСКОМОбработкаСлужебныхЭтапов( Предприятие );
МАРКИРОВКА.ТАКСКОМПроверкаСтатусаОтгрузок( ПРЕДПРИЯТИЕ );
МАРКИРОВКА.ТАКСКОМПроверкаСтатусаПриходов( ПРЕДПРИЯТИЕ );

RETURN Результат;
