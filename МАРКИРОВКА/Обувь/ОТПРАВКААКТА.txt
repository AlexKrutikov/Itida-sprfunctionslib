СЕРТИФИКАТ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;ГРУППАМАРКИРОВКИ		= LOWER( ALLTRIM( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_GROUP" + ПРЕДПРИЯТИЕ + "'" ) ) );ИННФИРМЫ				= ЗАПРОС( "SELECT inn FROM sprfirm WHERE code IN ( SELECT CONVERT( varchar( 10 ), value ) FROM param_ex WHERE param= 'MARK_FIRM" + ПРЕДПРИЯТИЕ + "')" );НАЗВАНИЕФИРМЫ			= ЗАПРОС( "SELECT name FROM sprfirm WHERE code IN ( SELECT CONVERT( varchar( 10 ), value ) FROM param_ex WHERE param= 'MARK_FIRM" + ПРЕДПРИЯТИЕ + "')" );GUIDПрихода				= ЗАПРОС( "SELECT guid FROM mark_in WHERE identity_column = " + ИДДОКУМЕНТА );ДатаДокумента			= ЗАПРОС( "SELECT date FROM mark_in WHERE identity_column = " + ИДДОКУМЕНТА );НомерДокумента			= ЗАПРОС( "SELECT ndok FROM mark_in WHERE identity_column = " + ИДДОКУМЕНТА );Причина					= ЗАПРОС( "SELECT reason FROM mark_in WHERE identity_column = " + ИДДОКУМЕНТА );ТипСписания				= ЗАПРОС( "SELECT type_ FROM mark_in WHERE identity_column = " + ИДДОКУМЕНТА );КОДКЛИЕНТА				= ЗАПРОС( "SELECT client FROM mark_in WHERE identity_column = " + ИДДОКУМЕНТА );ИННКЛИЕНТА				= ЗАПРОС( "SELECT inn FROM sprclient WHERE code = '" + КОДКЛИЕНТА + "'" );НАЗВАНИЕКЛИЕНТА			= ЗАПРОС( "SELECT name FROM sprclient WHERE code = '" + КОДКЛИЕНТА + "'" );ПринятьВсе				= ЗАПРОС( "SELECT COUNT( * ) FROM mark_in_spec mrk WHERE status = 0 AND mrk.ic = " + ИДДОКУМЕНТА ) == 0;ТекстЗапроса			= "{	""release_order_number"": """ + GUIDПрихода + """,	""document_number"": """ + ПЕРЕКОДИРОВАТЬ( ЗАМЕНИТЬ( НомерДокумента, """", "\""" ), "ANSI", "UTF-8" ) + """,	""document_date"": """ + DTOC( ДатаДокумента, 7, "-" ) + "T00:00:00Z"",	""transfer_date"": """ + DTOC( ДатаДокумента, 7, "-" ) + "T00:00:00Z"",	""acceptance_date"": """ + DTOC( ДАТА( ), 7, "-" ) + "T00:00:00Z"",	""trade_sender_inn"": """ + ИННКЛИЕНТА + """,	""trade_sender_name"": """ + ПЕРЕКОДИРОВАТЬ( ЗАМЕНИТЬ( НАЗВАНИЕКЛИЕНТА, """", "\""" ), "ANSI", "UTF-8" ) + """,	""trade_owner_inn"": """ + ИННФИРМЫ + """,	""trade_owner_name"": """ + ПЕРЕКОДИРОВАТЬ( ЗАМЕНИТЬ( НАЗВАНИЕФИРМЫ, """", "\""" ), "ANSI", "UTF-8" ) + """,	""trade_recipient_inn"": """ + ИННФИРМЫ + """,	""request_type"": ""ACCEPTANCE"",	""turnover_type"": """ + ТипСписания + """,	""withdrawal_type"": """ + Причина + """," + 	ЕСЛИ( ПринятьВсе, """accept_all"":true", """products"": [" );IF ( !ПринятьВсе ){	ДОБАВИТЬКОНТЕКСТ( "SELECT CASE WHEN LEN( mrk.mark ) >= 27 THEN mrk.mark ELSE '' END AS mark, 							  CASE WHEN LEN( mrk.mark ) < 27 THEN mrk.mark ELSE '' END AS uitu, 							  mrk.status, mrk.cena, ISNULL( spr.name, '' ) AS name, mrk.tax					   FROM mark_in_spec mrk					   LEFT OUTER JOIN sprres spr ON mrk.nn=spr.code					   WHERE mrk.ic = " + ИДДОКУМЕНТА, "СписокСтрок" );	WHILE ( !КОНЕЦКОНТЕКСТА( "СписокСтрок" ) )	{		ТекстЗапроса		+= ЕСЛИ( НОМЕРСТРОКИ( ) == 0, "", "," ) + "			{				""accepted"":" + ЕСЛИ( СписокСтрок.status != 0, "true", "false" ) + ",				""uitu_code"":" + ЕСЛИ( ПУСТО( СписокСтрок.uitu ), "null", """" + ЗАМЕНИТЬ( СЖАТЬПРОБЕЛЫ( СписокСтрок.uitu ), """", "\""" ) + """" ) + ",				""uit_code"":" + ЕСЛИ( ПУСТО( СписокСтрок.mark ), "null", """" + ЗАМЕНИТЬ( СЖАТЬПРОБЕЛЫ( СписокСтрок.mark ), """", "\""" ) + """" ) + "			}";				ПРОПУСТИТЬ( 1, "СписокСтрок" );	}	УДАЛИТЬКОНТЕКСТ( "СписокСтрок" );	ТекстЗапроса			+= "		]";}ТекстЗапроса			+= "}";//сообщение( ТекстЗапроса );Ответ					= "";GUIDДокумента			= "";// Отправляем запрос в МАРКИРОВКУ// АвторизуемсяМАРКИРОВКАТОКЕН			=  Маркировка.Авторизация( ПРЕДПРИЯТИЕ, СЕРТИФИКАТ, ТЕСТОВЫЙКОНТУР );IF ( ПУСТО( МАРКИРОВКАТОКЕН ) ) RETURN false;АдресСервера 			= ЕСЛИ( ТестовыйКонтур, "https://demo.lp.crpt.tech", "https://ismp.crpt.ru" );try{	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );	Соединение 			= HTTPCONNECT( АдресСервера, "", true, МАРКИРОВКА.ФАЙЛЖУРНАЛА( ) );	IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );		Подпись				= ПЕРЕКОДИРОВАТЬ( ШИФРОВАНИЕ( СЕРТИФИКАТ, ТекстЗапроса, 1, true, false, _МАРКИРОВКА_ХРАНИЛИЩЕСЕРТИФИКАТОВ ), "", "BASE64" );	Документ		 	= "{""product_document"":""" + ПЕРЕКОДИРОВАТЬ( ТекстЗапроса, "", "BASE64" ) + """,						  ""document_format"": ""MANUAL"", ""type"": ""LP_ACCEPT_GOODS"", ""signature"":""" + Подпись + """}";	Заголовки[ 0 ]		= "Content-Type: application/json";	Заголовки[ 1 ]		= "Authorization: Bearer " + МАРКИРОВКАТОКЕН;		Ответ				= HTTPPOST( Соединение, "/api/v3/lk/documents/create?pg=" + ГРУППАМАРКИРОВКИ, Документ, "Заголовки" );	IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );	GUIDДокумента		= СЖАТЬПРОБЕЛЫ( Ответ );	// Запрашиваем статус документа	Документ			= МАРКИРОВКА.ЗАПРОСДОКУМЕНТАСПРОВЕРКОЙСТАТУСА( ПРЕДПРИЯТИЕ, СЕРТИФИКАТ, ТЕСТОВЫЙКОНТУР, ОТВЕТ );	IF ( ПУСТО( Документ ) ) RETURN "";		// Если документ был принят без ошибок, то ставим статус 1.	IF ( ПРОПИСНЫЕ( СЖАТЬПРОБЕЛЫ( ЗНАЧЕНИЕПОЛЯ( "Документ", "status", "" ) ) ) == "CHECKED_OK" )		ЗАПРОС( "UPDATE mark_in SET actguid = '" + STDF( Ответ ) + "', status = 2, reply= 'нет ошибок' WHERE identity_column = " + ИДДОКУМЕНТА );	ELSE IF ( ПРОПИСНЫЕ( СЖАТЬПРОБЕЛЫ( ЗНАЧЕНИЕПОЛЯ( "Документ", "status", "" ) ) ) == "IN_PROGRESS" )		THROW( "Сервер ГИС МТ не успел обработать документ за отведенное для этого время." + CHR( 13 ) + "Проверьте статус отправки позже запросив обновления докмуентов" );	ELSE	{		// Иначе, выводим сообщение об ошибке и статус 2		ЗАГРУЗИТЬJSON( "Ошибка", ЗНАЧЕНИЕПОЛЯ( "Документ", "errors", "" ), "error_message" );		ТекстОшибки		= ПЕРЕКОДИРОВАТЬ( ЗНАЧЕНИЕПОЛЯ( "Ошибка", "error_message", "" ), "UTF-8", "ANSI" );		ЗАПРОС( "UPDATE mark_in SET guid = '" + STDF( Ответ ) + "', status = 3, reply= '" + ЛЕВСИМВ( STDF( ТекстОшибки ), 250 ) + "' WHERE identity_column = " + ИДДОКУМЕНТА );		THROW( ТекстОшибки );	}}catch ( ТекстСообщения ){	HTTPCLOSE( Соединение );	УДАЛИТЬКОНТЕКСТ( "Документ" );	УДАЛИТЬКОНТЕКСТ( "Ошибка" );	СООБЩЕНИЕ( ТекстСообщения );			RETURN "";}HTTPCLOSE( Соединение );УДАЛИТЬКОНТЕКСТ( "Документ" );RETURN GUIDДокумента;
