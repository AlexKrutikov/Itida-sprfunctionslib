СУЗИД					= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_SUZID" + ПРЕДПРИЯТИЕ + "'" );try{	ФАЙЛ					= ФАЙЛОТКРЫТЬ( ИМЯФАЙЛА );	IF ( ФАЙЛ < 0 ) THROW( "Не удалось открыть файл" );	IF ( LOWER( ПРАВСИМВ( ИМЯФАЙЛА, 3 ) ) == "csv" )	{		ФАЙЛЗАКРЫТЬ( ФАЙЛ ); ОЖИДАНИЕ( 100 );		ДОБАВИТЬКОНТЕКСТ( "LOCAL: mark char", "СписокКМ" );		ЗАГРУЗИТЬ( "СписокКМ", "CSV", ИМЯФАЙЛА );		ИМЯВРЕМЕННОЙТАБЛИЦЫ		= "#" + УНИКАЛЬНОЕИМЯ( );		ЗАПРОС( "CREATE TABLE " + ИМЯВРЕМЕННОЙТАБЛИЦЫ + " ( mark varchar( 250 ) )" );		ВЫГРУЗИТЬ( ИМЯВРЕМЕННОЙТАБЛИЦЫ, "", "", "СписокКМ" );		ДОБАВИТЬКОНТЕКСТ( "SELECT mark FROM " + ИМЯВРЕМЕННОЙТАБЛИЦЫ + " ORDER BY mark", "СписокКМ" );		ЗАПРОС( "DROP TABLE " + ИМЯВРЕМЕННОЙТАБЛИЦЫ );	}	ELSE	{		Содержимое				= ФАЙЛПРОЧИТАТЬ( ФАЙЛ, "S", ФАЙЛРАЗМЕР( ФАЙЛ ) );		ФАЙЛЗАКРЫТЬ( ФАЙЛ );					ЗАГРУЗИТЬJSON( "Статус", Содержимое );		IF ( ТИПЗНАЧЕНИЯПОЛЯ( "Статус", "omsId" ) != "C" ) THROW( "Файл не содержит данных для загрузки" );		IF ( ПРОПИСНЫЕ( СЖАТЬПРОБЕЛЫ( Статус.omsId ) ) != ПРОПИСНЫЕ( СЖАТЬПРОБЕЛЫ( СУЗИД ) ) ) THROW( "Файл не содержит данных для выбранной СУЗ." );				ЗАГРУЗИТЬJSON( "СписокКМ", ЗНАЧЕНИЕПОЛЯ( "Статус", "codes", "" ), "mark" );	}			WHILE ( !КОНЕЦКОНТЕКСТА( "СписокКМ" ) )	{		mGTIN						= ПОДСТРОКА( СписокКМ.mark, 3, 14 );		// Проходим по полченному списку кодов маркировки и записываем в строки документа		IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT identity_column, kolp FROM mark_stock_spec WHERE ic = " + ИДДОКУМЕНТА + " AND gtin = '" + STDF( mGTIN ) + "'", "СписокСтрок" ) ) THROW( _ERRORDESCRIPTION );		ПОКА ( !КОНЕЦКОНТЕКСТА( "СписокСтрок" ) && !КОНЕЦКОНТЕКСТА( "СписокКМ" ) ) 		{			ТекущееКоличество		= СписокСтрок.kolp;			WHILE ( !КОНЕЦКОНТЕКСТА( "СписокКМ" ) && ТекущееКоличество > 0 && mGTIN	== ПОДСТРОКА( СписокКМ.mark, 3, 14 ) )			{				IF ( !ЗАПРОС( "IF NOT EXISTS( SELECT * FROM mark_stock_marks WHERE ic=" + ИДДОКУМЕНТА + " AND spec_ic= " + СписокСтрок.identity_column + " AND mark= '" + STDF( СписокКМ.mark ) + "' ) 							   INSERT INTO mark_stock_marks ( ic, spec_ic, mark ) VALUES ( " + ИДДОКУМЕНТА + ", " + СписокСтрок.identity_column + ", '" + STDF( СписокКМ.mark ) + "' )" ) ) THROW( _ERRORDESCRIPTION );				ПРОПУСТИТЬ( 1, "СписокКМ" ); 				ТекущееКоличество	-= 1;			}			КоличествоМарокВСтроке	= ЗАПРОС( "SELECT COUNT( * ) FROM mark_stock_marks WHERE spec_ic= "  + СписокСтрок.identity_column );			IF ( !ЗАПРОС( "UPDATE mark_stock_spec 						   SET status = CASE WHEN kolp <= " + КоличествоМарокВСтроке + " THEN 2 ELSE status END, 							   description = CASE WHEN kolp <= " + КоличествоМарокВСтроке + " THEN 'Коды маркировки получены успешно' ELSE 'Коды маркировки получены частично'  END 						   WHERE identity_column = "  + СписокСтрок.identity_column ) ) THROW( _ERRORDESCRIPTION );			ПРОПУСТИТЬ( 1, "СписокСтрок" );		}		УДАЛИТЬКОНТЕКСТ( "СписокСтрок" );					IF ( !КОНЕЦКОНТЕКСТА( "СписокКМ" ) ) 		{			THROW( "Не удалось распределить все полученные коды маркировки." + CHR( 13 ) + 				   "Заказ № " + ЗАПРОС( "SELECT RTRIM( ndok ) + ' от ' + CONVERT( char( 10 ), date, 4 ) FROM mark_stock WHERE identity_column = " + ИДДОКУМЕНТА ) + CHR( 13 ) +				   "Было получено: " + STR( КОЛИЧЕСТВОСТРОК( "СписокКМ" ) ) + CHR( 13 ) + 				   "Удалось распределить: " + STR( НОМЕРСТРОКИ( "СписокКМ" ) ) );		}		   	}	// Если полчены все коды маркировки, то ставим следующий статус у документа	IF ( !ЗАПРОС( "UPDATE mark_stock				   SET status = CASE WHEN EXISTS( SELECT * FROM mark_stock_spec WHERE ic= "  + ИДДОКУМЕНТА + " AND status IN ( 3, 4 ) ) THEN 4 ELSE 								CASE WHEN EXISTS( SELECT * FROM mark_stock_spec WHERE ic= "  + ИДДОКУМЕНТА + " AND status IN ( 1, 0 ) ) THEN 1 ELSE 2 END END				   WHERE identity_column = "  + ИДДОКУМЕНТА ) ) THROW( _ERRORDESCRIPTION );	УДАЛИТЬКОНТЕКСТ( "СписокКМ" );	УДАЛИТЬКОНТЕКСТ( "СписокСтрок" );}catch ( ТекстСообщения ){		СИСТЕМНОЕСООБЩЕНИЕ( );	УДАЛИТЬКОНТЕКСТ( "СписокКМ" );	УДАЛИТЬКОНТЕКСТ( "СписокСтрок" );		IF ( !ПУСТО( ТекстСообщения ) ) СООБЩЕНИЕ( ТекстСообщения );	RETURN false;}СИСТЕМНОЕСООБЩЕНИЕ( );RETURN true;
