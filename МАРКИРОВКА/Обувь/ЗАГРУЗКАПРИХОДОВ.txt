ФУНКЦИЯ ЗАГРУЗИТЬТОВАР( ТекстТовара, Уровень, ИДПрихода, ПРЕДПРИЯТИЕ  ){	Контекст	 			= "Товары_" + СТРОКА( Уровень );	ЗАГРУЗИТЬJSON( Контекст, ТекстТовара, "Товар" );	// Товары могут быть как в самой строке, так и агрегированы 	ПОКА ( !КОНЕЦКОНТЕКСТА( Контекст ) )	{		IF ( ЗНАЧЕНИЕПОЛЯ( Контекст, "count_children", 0 ) > 0 )		{			Потомки			= Контекст + "_children";			ЗАГРУЗИТЬJSON( Потомки, ЗНАЧЕНИЕПОЛЯ( Контекст, "children", "" ), "Товар" );			ПОКА ( !КОНЕЦКОНТЕКСТА( Потомки ) )			{				ЗАГРУЗИТЬТОВАР( ЗНАЧЕНИЕПОЛЯ( Потомки, "Товар", "" ), Уровень + 1, ИДПрихода, ПРЕДПРИЯТИЕ );				ПРОПУСТИТЬ( 1, Потомки );			}			УДАЛИТЬКОНТЕКСТ( Потомки );		}		ELSE		{			Упаковка		= ЗНАЧЕНИЕПОЛЯ( Контекст, "uitu_code", "" );			Марка			= ЗНАЧЕНИЕПОЛЯ( Контекст, "uit_code", "" );			Название		= ЗНАЧЕНИЕПОЛЯ( Контекст, "product_description", "" );			IF ( ПУСТО( Марка ) || LOWER( Марка ) == "null" )			{				Марка		= Упаковка;				Название	= ЕСЛИ( ПУСТО( Название	), "<упаковка>", Название );			}				Цена			= STR( VAL( ЗНАЧЕНИЕПОЛЯ( Контекст, "product_cost", "" ) ) / 100.00, 16, 6 );			Налог			= STR( VAL( ЗНАЧЕНИЕПОЛЯ( Контекст, "product_tax", "" ) ) / 100.00, 16, 6 );			gtin			= ПОДСТРОКА( Марка, 3, 14 );						IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO mark_in_spec ( ic, ent, nn, name, gtin, mark, cena, tax )								 VALUES (  " + ИДПрихода + ", '" + ПРЕДПРИЯТИЕ + "', dbo.fn_getwarebygtin( '" + STDF( gtin ) + "' ), 										   '" + STDF( Название, 250 ) + "', '" + STDF( gtin, 14 ) + "', '" + STDF( Марка, 150 ) + "', " + Цена + ", " + Налог + " )", "НоваяСтрока" ) ) THROW( _ERRORDESCRIPTION );			УДАЛИТЬКОНТЕКСТ( "НоваяСтрока" );		}				ПРОПУСТИТЬ( 1, Контекст );	}	УДАЛИТЬКОНТЕКСТ( Контекст );/*	ЗАГРУЗИТЬJSON( "Строка", ЗНАЧЕНИЕПОЛЯ( "Строки", "products", "" ) );	// Товары могут быть как в самой строке, так и агрегированы 	IF ( ЗНАЧЕНИЕПОЛЯ( "Строка", "count_children", 0 ) > 0 )	{		ЗАГРУЗИТЬJSON( "Товары", ЗНАЧЕНИЕПОЛЯ( "Строка", "children", "" ), "Товар" );		ПОКА ( !КОНЕЦКОНТЕКСТА( "Товары" ) )		{			Товар			= ЗНАЧЕНИЕПОЛЯ( "Товары", "Товар", "" );			Марка			= ПОЛЕ_JSON( Товар, "uit_code", "" );			Название		= ПОЛЕ_JSON( Товар, "product_description", "" );			Цена			= STR( VAL( ПОЛЕ_JSON( Товар, "product_cost", "" ) ) / 100.00, 16, 6 );			Налог			= STR( VAL( ПОЛЕ_JSON( Товар, "product_tax", "" ) ) / 100.00, 16, 6 );			gtin			= ПОДСТРОКА( Марка, 3, 14 );						IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO mark_in_spec ( ic, ent, nn, name, gtin, mark, cena, tax )								 VALUES (  " + ИДПрихода + ", '" + ПРЕДПРИЯТИЕ + "', dbo.fn_getwarebygtin( '" + STDF( gtin ) + "' ), 										   '" + STDF( Название, 250 ) + "', '" + STDF( gtin, 14 ) + "', '" + STDF( Марка, 150 ) + "', " + Цена + ", " + Налог + " )", "НоваяСтрока" ) ) THROW( _ERRORDESCRIPTION );			УДАЛИТЬКОНТЕКСТ( "НоваяСтрока" );			УДАЛИТЬКОНТЕКСТ( "Строка" );			ПРОПУСТИТЬ( 1, "Товары" );		}		УДАЛИТЬКОНТЕКСТ( "Товары" );			}					ELSE	{		Упаковка		= ЗНАЧЕНИЕПОЛЯ( "Строка", "uitu_code", "" );		Марка			= ЗНАЧЕНИЕПОЛЯ( "Строка", "uit_code", "" );		Название		= ЗНАЧЕНИЕПОЛЯ( "Строка", "product_description", "" );		IF ( ПУСТО( Марка ) || LOWER( Марка ) == "null" )		{			Марка		= Упаковка;			Название	= ЕСЛИ( ПУСТО( Название	), "<упаковка>", Название );		}			Цена			= STR( VAL( ЗНАЧЕНИЕПОЛЯ( "Строка", "product_cost", "" ) ) / 100.00, 16, 6 );		Налог			= STR( VAL( ЗНАЧЕНИЕПОЛЯ( "Строка", "product_tax", "" ) ) / 100.00, 16, 6 );		gtin			= ПОДСТРОКА( Марка, 3, 14 );				IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO mark_in_spec ( ic, ent, nn, name, gtin, mark, cena, tax )							 VALUES (  " + ИДПрихода + ", '" + ПРЕДПРИЯТИЕ + "', dbo.fn_getwarebygtin( '" + STDF( gtin ) + "' ), 									   '" + STDF( Название, 250 ) + "', '" + STDF( gtin, 14 ) + "', '" + STDF( Марка, 150 ) + "', " + Цена + ", " + Налог + " )", "НоваяСтрока" ) ) THROW( _ERRORDESCRIPTION );		УДАЛИТЬКОНТЕКСТ( "НоваяСтрока" );		УДАЛИТЬКОНТЕКСТ( "Строка" );	}				*/}// Может потребоваться создание контрагентов, поэтому. определяем папку, в которой будем их создаватьИДПАПКИКОНТРАГЕНТОВ			= ЗАПРОС( "SELECT CONVERT( varchar( 50 ), value ) FROM param_ex WHERE param= 'MARK_CLIENTFOLDER" + ПРЕДПРИЯТИЕ + "'" );IF ( !ПУСТО( ИДПАПКИКОНТРАГЕНТОВ ) )	ПАПКАКОНТРАГЕНТОВ		= ЗАПРОС( "SELECT identity_column FROM spectree WHERE uniqueid= '" + ИДПАПКИКОНТРАГЕНТОВ + "'" );ELSE	ПАПКАКОНТРАГЕНТОВ		= ЗАПРОС( "SELECT identity_column FROM spectree WHERE code= dbo.fn_getsuitabletree( '', '_MN', 'SPR','S01') AND folder = 1 AND parent = 0" );// Запрашиваем список приходов ИМЯТАБЛИЦЫ				= "##" + УНИКАЛЬНОЕИМЯ( );ЗАПРОС( "CREATE TABLE " + ИмяТаблицы + "( document varchar( max ) ) " );IF ( !МАРКИРОВКА.ЗАГРУЗКАСПИСКАПРИХОДОВ( ПРЕДПРИЯТИЕ, ИМЯТАБЛИЦЫ, false ) ) RETURN false;IF ( !МАРКИРОВКА.ЗАГРУЗКАСПИСКАПРИХОДОВ( ПРЕДПРИЯТИЕ, ИМЯТАБЛИЦЫ, true ) ) RETURN false;IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT document FROM " + ИМЯТАБЛИЦЫ, "Документы" ) ) {	СООБЩЕНИЕ( _ERRORDESCRIPTION );	RETURN false;}НайденныеДокументы		= "";КоличествоДокументов	= 0;ПОКА ( !КОНЕЦКОНТЕКСТА( "Документы" ) ){	try	{		ЗАГРУЗИТЬJSON( "ИДДокумента", ПЕРЕКОДИРОВАТЬ( Документы.document, "UTF-8", "ANSI" ) );		ИД				= ЗНАЧЕНИЕПОЛЯ( "ИДДокумента", "number", "" );		IF ( ПУСТО( ИД ) ) THROW( "" );	//////////////////////////////////////////////////////////////////////// УБРАТЬ КОММЕНТАРИИ		Документ		= МАРКИРОВКА.ЗАПРОСДОКУМЕНТА( ПРЕДПРИЯТИЕ, "", false, ИД );		IF ( ПУСТО( Документ ) ) THROW;//////////////////////////////////////////////////////////////////////		//////////////////////////////////////////////////////////////////////// УДАЛИТЬ//		ФАЙЛ			= ФАЙЛОТКРЫТЬ( "D:\shipment.json" );//		Документ		= ФАЙЛПРОЧИТАТЬ( ФАЙЛ, "S", 170000 );//		ФАЙЛЗАКРЫТЬ( ФАЙЛ );//////////////////////////////////////////////////////////////////////				ЗАГРУЗИТЬJSON( "Документ", ПЕРЕКОДИРОВАТЬ( Документ, "UTF-8", "ANSI" ) );		IF ( ПУСТО( ЗНАЧЕНИЕПОЛЯ( "Документ", "number", "" ) ) ) THROW( "" );				// Читаем общие параметры принятого документа		НазваниеПоставщика		= ЗНАЧЕНИЕПОЛЯ( "Документ", "senderName", "" ); 		ЗАГРУЗИТЬJSON( "ДокументИнфо", ЗНАЧЕНИЕПОЛЯ( "Документ", "body", "" ) );		ИННПоставщика			= ЗНАЧЕНИЕПОЛЯ( "ДокументИнфо", "sender_inn", "" );		НомерДокумента			= ЗНАЧЕНИЕПОЛЯ( "ДокументИнфо", "document_num", "" );		ДатаДокумента			= CTOD( ЗНАЧЕНИЕПОЛЯ( "ДокументИнфо", "document_date", "" ), 7 );		ТипОборота				= ЗНАЧЕНИЕПОЛЯ( "ДокументИнфо", "turnover_type", "" );		ПричинаВыбытия			= ЗНАЧЕНИЕПОЛЯ( "ДокументИнфо", "withdrawal_type", "" );		УДАЛИТЬКОНТЕКСТ( "ДокументИнфо" );				//ЗАГРУЗИТЬJSON( "Документ", ЗНАЧЕНИЕПОЛЯ( "Документ", "body", "" ) );		IF ( ПРАВСИМВ( ЗНАЧЕНИЕПОЛЯ( "Документ", "type", "" ), 4 ) == "_CSV" )		{			ДОБАВИТЬКОНТЕКСТ( "LOCAL: sender_inn char, inn_r char, inn_o char, date char, number char", "ЛокальныеДанные" );			ДОБАВИТЬКОНТЕКСТ( "LOCAL: products char", "Строки" );			ИмяФайлаCSV			= ВРЕМЕННЫЙКАТАЛОГ( ) + "\" + УНИКАЛЬНОЕИМЯ( ) + ".csv";			ФАЙЛ				= ФАЙЛСОЗДАТЬ( ИмяФайлаCSV, 0 );			ФАЙЛЗАПИСАТЬ( ФАЙЛ, ЗАМЕНИТЬ( ЗНАЧЕНИЕПОЛЯ( "Документ", "content", "" ), CHR( 10 ), CHR( 13 ) + CHR( 10 ) ) );			ФАЙЛЗАКРЫТЬ( ФАЙЛ ); ОЖИДАНИЕ( 500 ); 			ЗАГРУЗИТЬ( "ЛокальныеДанные", "csv", ИмяФайлаCSV, "," );			ОЖИДАНИЕ( 500 ); ФАЙЛУДАЛИТЬ( ИмяФайлаCSV );			ПЕРЕЙТИВНАЧАЛО( "ЛокальныеДанные" ); ПРОПУСТИТЬ( 1, "ЛокальныеДанные" );						ПРОПУСТИТЬ( 1, "ЛокальныеДанные" ); ПРОПУСТИТЬ( 1, "ЛокальныеДанные" ); ПРОПУСТИТЬ( 1, "ЛокальныеДанные" );			WHILE( !КОНЕЦКОНТЕКСТА( "ЛокальныеДанные" ) )			{				ДОБАВИТЬСТРОКИ( 1, "Строки" );				Текст			= "{""uitu_code"": """ + ЗАМЕНИТЬ( ЛокальныеДанные.inn_r, """", """" ) + """,""uit_code"": """ + ЗАМЕНИТЬ( ЛокальныеДанные.sender_inn, """", "\""" ) + """,""product_cost"": " + STR( VAL( ЛокальныеДанные.inn_o ) * 100 ) + ",""product_tax"": " + STR( VAL( ЛокальныеДанные.date ) * 100 ) + "}";				ИЗМЕНИТЬПОЛЕ( "Строки", 0, Текст );				ПРОПУСТИТЬ( 1, "ЛокальныеДанные" );			}			ПЕРЕЙТИВНАЧАЛО( "Строки" );			УДАЛИТЬКОНТЕКСТ( "ЛокальныеДанные" );		}		ELSE IF ( ПРАВСИМВ( ЗНАЧЕНИЕПОЛЯ( "Документ", "type", "" ), 4 ) == "_XML" )		{			Содержимое			= ЗНАЧЕНИЕПОЛЯ( "Документ", "content", "" );			ДОБАВИТЬКОНТЕКСТ( "LOCAL: products char", "Строки" );			ДОБАВИТЬКОНТЕКСТ( "LOCAL: trade_participant_inn_sender char, inn_r char, inn_o char, move_document_date char, move_document_number char", "ЛокальныеДанные" );			ДОБАВИТЬКОНТЕКСТ( "LOCAL: kit char, ki char, kitu char, cost float char, vat_value float", "СтрокиДокумента" );			ЗАГРУЗИТЬ( "ЛокальныеДанные", "XMLSTRING", Содержимое, "", "", "", "products_list" );			ЗАГРУЗИТЬ( "СтрокиДокумента", "XMLSTRING", Содержимое, "product", "", "products_list", "" );						ПЕРЕЙТИВНАЧАЛО( "ЛокальныеДанные" ); 			ПЕРЕЙТИВНАЧАЛО( "СтрокиДокумента" ); 			WHILE( !КОНЕЦКОНТЕКСТА( "СтрокиДокумента" ) )			{				mKit			= ЗАМЕНИТЬ( ЕСЛИ( ПУСТО( СтрокиДокумента.ki ), СтрокиДокумента.kit, СтрокиДокумента.ki ), """", "\""" );				mKitu			= ЗАМЕНИТЬ( СтрокиДокумента.kitu, """", "\""" );				mCost			= STR( VAL( СтрокиДокумента.cost ) );				mTax			= STR( VAL( СтрокиДокумента.vat_value ) );				ДОБАВИТЬСТРОКИ( 1, "Строки" );								Текст			= "{""uitu_code"": """ + mKitu + """,""uit_code"": """ + mKit + """,""product_cost"": " + mCost + ",""product_tax"": " + mTax + "}";				ИЗМЕНИТЬПОЛЕ( "Строки", 0, Текст );				ПРОПУСТИТЬ( 1, "СтрокиДокумента" );			}			ПЕРЕЙТИВНАЧАЛО( "Строки" );			УДАЛИТЬКОНТЕКСТ( "ЛокальныеДанные" );			УДАЛИТЬКОНТЕКСТ( "СтрокиДокумента" );		}		ELSE		{//			IF ( ПУСТО( ЗНАЧЕНИЕПОЛЯ( "Документ", "content", "" ) ) )				ЗАГРУЗИТЬJSON( "Документ", ЗНАЧЕНИЕПОЛЯ( "Документ", "body", "" ) );//			ELSE //				ЗАГРУЗИТЬJSON( "Документ", ЗНАЧЕНИЕПОЛЯ( "Документ", "content", "" ) );			ЗАГРУЗИТЬJSON( "Строки", ЗНАЧЕНИЕПОЛЯ( "Документ", "products", "" ), "products" );			// Если название поставщика не указано в шапке документа, то ищем его здесь			IF ( ПУСТО( НазваниеПоставщика ) )				НазваниеПоставщика	= ЗНАЧЕНИЕПОЛЯ( "Документ", "sender", "" );		}				// Если такой документ уже есть, то пропускаем его		IF ( !ПУСТО( ЗАПРОС( "SELECT guid FROM mark_in WHERE guid = '" + ИД + "'" ) ) ) THROW( ИД );	}	catch( Текст )	{		IF ( !ПУСТО( Текст ) )			НайденныеДокументы	+= Текст + CHR( 13 );					ПРОПУСТИТЬ( 1, "Документы" );		CONTINUE;	}		// Создаем новый документ 	try {		IF ( !ЗАПРОС( "BEGIN TRANSACTION" ) ) THROW( _ERRORDESCRIPTION );				// Если нет поставщика, то создаем нового в папке для поставщиков		КодКонтрагента		= "";		IF ( !ПУСТО( ИННПоставщика ) AND !ПУСТО( НазваниеПоставщика ) )		{			КодКонтрагента		= ЗАПРОС( "SELECT code FROM sprclient WHERE inn= '" + STDF( ИННПоставщика ) + "'" );			IF ( ПУСТО( КодКонтрагента ) )			{				// Добвляем нового контрагента в нужную папку				IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO sprclient ( inn, name, shortname, parent, fsettlement, priz )										 VALUES ( '" + STDF( ИННПоставщика, 12 ) + "', '" + STDF( НазваниеПоставщика, 250 ) + "', '" + STDF( НазваниеПоставщика, 250 ) + "', " + ПАПКАКОНТРАГЕНТОВ + ", 1, 1 )", "НовыйКонтрагент" ) ) THROW( _ERRORDESCRIPTION );				КодКонтрагента		= ЗАПРОС( "SELECT code FROM sprclient WHERE identity_column = " + НовыйКонтрагент.ident );			}		}					IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO mark_in ( guid, ent, ndok, date, vendorname, vendorinn, client, reason, type_, reply )								 VALUES ( '" + ИД + "', '" + ПРЕДПРИЯТИЕ + "', '" + STDF( НомерДокумента, 20 ) + "', '" + TTOC( ДатаДокумента ) + "', 										  '" + STDF( НазваниеПоставщика, 250 ) + "', '" + STDF( ИННПоставщика, 12 ) + "', '" + КодКонтрагента + "', 										  '" + STDF( ПричинаВыбытия, 20 ) + "', '" + STDF( ТипОборота, 20 ) + "', '<ошибок нет>' )", "НовыйДокумент" ) ) THROW( _ERRORDESCRIPTION );		ИДПрихода			= НовыйДокумент.ident;				// Добавляем строки документа		ВЫБРАТЬКОНТЕКСТ( "Строки" );		ПОКА ( !КОНЕЦКОНТЕКСТА( "Строки" ) )		{			ЗАГРУЗИТЬТОВАР( ЗНАЧЕНИЕПОЛЯ( "Строки", "products", "" ), 0, ИДПрихода, ПРЕДПРИЯТИЕ );			ПРОПУСТИТЬ( 1, "Строки" );		}		УДАЛИТЬКОНТЕКСТ( "НовыйДокумент" );		УДАЛИТЬКОНТЕКСТ( "Строки" );				IF ( !ЗАПРОС( "COMMIT TRANSACTION" ) ) THROW( _ERRORDESCRIPTION );			}	catch ( ТекстОшибки )	{		СООБЩЕНИЕ( ТекстОшибки );		УДАЛИТЬКОНТЕКСТ( "Документ" );		УДАЛИТЬКОНТЕКСТ( "ИДДокумента" );		УДАЛИТЬКОНТЕКСТ( "Документы" );		УДАЛИТЬКОНТЕКСТ( "НовыйДокумент" );		УДАЛИТЬКОНТЕКСТ( "Строки" );		ЗАПРОС( "IF @@TRANCOUNT > 0 ROLLBACK" );		RETURN false;	}		ПРОПУСТИТЬ( 1, "Документы" );}УДАЛИТЬКОНТЕКСТ( "Документ" );УДАЛИТЬКОНТЕКСТ( "ИДДокумента" );УДАЛИТЬКОНТЕКСТ( "Документы" );RETURN true;
