СЕРТИФИКАТ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;ГРУППАМАРКИРОВКИ		= LOWER( ALLTRIM( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_GROUP" + ПРЕДПРИЯТИЕ + "'" ) ) );// АвторизуемсяМАРКИРОВКАТОКЕН			=  "";//////////////////////////////////////////////////////////////////////// УБРАТЬ КОММЕНТАРИИМАРКИРОВКАТОКЕН			=  Маркировка.Авторизация( ПРЕДПРИЯТИЕ, СЕРТИФИКАТ, ТЕСТОВЫЙКОНТУР );IF ( ПУСТО( МАРКИРОВКАТОКЕН ) ) RETURN false;//////////////////////////////////////////////////////////////////////ИМЯТАБЛИЦЫ				= "##" + УНИКАЛЬНОЕИМЯ( );Ответ					= "";ЗАПРОС( "CREATE TABLE " + ИмяТаблицы + "( document varchar( max ) ) " );								IF ( !ДОБАВИТЬКОНТЕКСТ( "LOCAL: document char", "СписокДОКС" ) ) RETURN "";АдресСервера 			= ЕСЛИ( ТестовыйКонтур, "https://demo.lp.crpt.tech", "https://ismp.crpt.ru" );try{	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );	Соединение 			= HTTPCONNECT( АдресСервера, "", true, МАРКИРОВКА.ФАЙЛЖУРНАЛА( ) );	IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );		Заголовки[ 0 ]		= "Content-Type: application/json";	Заголовки[ 1 ]		= "Authorization: Bearer " + МАРКИРОВКАТОКЕН;	НомерСтраницы		= 0;	НомерДокумента		= "";	ДатаДокумента		= "";	ПОКА ( НомерСтраницы == 0 OR !ПУСТО( НомерДокумента ) )	{		ПолученоДо			= КОЛИЧЕСТВОСТРОК( "СписокДОКС" );//		Параметры			= "?limit=100&order=DESC&orderColumn=docDate&documentStatus=WAIT_ACCEPTANCE&pageDir=NEXT&documentType=LP_SHIP_GOODS,LP_SHIP_RECEIPT,LP_SHIP_GOODS_CROSSBORDER";		Параметры			= "?pg=" + ГРУППАМАРКИРОВКИ+"&limit=100&order=DESC&orderColumn=docDate&documentStatus=WAIT_ACCEPTANCE&pageDir=NEXT&inputFormat=true";		IF ( !ПУСТО( НомерДокумента ) )			Параметры		+= "&did=" + НомерДокумента + "&orderedColumnValue=" + ДатаДокумента;			//////////////////////////////////////////////////////////////////////// УБРАТЬ КОММЕНТАРИИ		Ответ				= HTTPGET( Соединение, "/api/v3/facade/doc/listV2" + Параметры, "Заголовки" );		IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// УДАЛИТЬ//		ФАЙЛ				= ФАЙЛОТКРЫТЬ( "D:\shiplist.json" );//		Ответ				= ФАЙЛПРОЧИТАТЬ( ФАЙЛ, "S", 100000 );//		ФАЙЛЗАКРЫТЬ( ФАЙЛ );//////////////////////////////////////////////////////////////////////		ЗАГРУЗИТЬJSON( "ОтветДОКС", ПЕРЕКОДИРОВАТЬ( Ответ, "UTF-8", "ANSI" ) );			ЗАГРУЗИТЬJSON( "СписокДОКС", ЗНАЧЕНИЕПОЛЯ( "ОтветДОКС", "results", "" ), "document" );		IF ( !ВЫГРУЗИТЬ( ИмяТаблицы, "", "","СписокДОКС" ) ) THROW( _ERRORDESCRIPTION );		НомерСтраницы++;						НомерДокумента		= "";		ДатаДокумента		= "";		ПЕРЕЙТИВКОНЕЦ( "СписокДОКС" );		IF ( !ПУСТО( СписокДОКС.document ) )		{			ЗАГРУЗИТЬJSON( "ДокументИнфо", СписокДОКС.document );			IF ( ТИПЗНАЧЕНИЯПОЛЯ( "ДокументИнфо", "number" ) == "C" )				НомерДокумента		= ДокументИнфо.number;			IF ( ТИПЗНАЧЕНИЯПОЛЯ( "ДокументИнфо", "docdate" ) == "C" )				ДатаДокумента		= ДокументИнфо.docdate;		}//////////////////////////////////////////////////////////////////////// УДАЛИТЬ//		НомерДокумента		= "";//////////////////////////////////////////////////////////////////////	}}catch ( ТекстСообщения ){	HTTPCLOSE( Соединение );	СООБЩЕНИЕ( ТекстСообщения );	УДАЛИТЬКОНТЕКСТ( "СписокДОКС" );	УДАЛИТЬКОНТЕКСТ( "ОтветДОКС" );		RETURN "";}HTTPCLOSE( Соединение );УДАЛИТЬКОНТЕКСТ( "СписокДОКС" );УДАЛИТЬКОНТЕКСТ( "ОтветДОКС" );RETURN ИмяТаблицы;
