СЕРТИФИКАТ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;ГРУППАМАРКИРОВКИ		= LOWER( ALLTRIM( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_GROUP" + ПРЕДПРИЯТИЕ + "'" ) ) );НОМЕРДОГОВОРА			= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CONTRACTNUM" + ПРЕДПРИЯТИЕ + "'" );ДАТАДОГОВОРА			= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CONTRACTDATE" + ПРЕДПРИЯТИЕ + "'" );ИННФИРМЫ				= ЗАПРОС( "SELECT inn FROM sprfirm WHERE code IN ( SELECT CONVERT( varchar( 10 ), value ) FROM param_ex WHERE param= 'MARK_FIRM" + ПРЕДПРИЯТИЕ + "')" );order_id				= ЗАПРОС( "SELECT order_id, releasemethod, date FROM mark_stock WHERE identity_column = " + ИДДОКУМЕНТА, "order_id" );МетодВводаВОборот		= ЗАПРОС( "", "releasemethod" );ДатаВводаВОборот		= ЗАПРОС( "", "date" );// В зависимости от вида товаров нужно отправлять разную длину КМДлинаКода				= ЕСЛИ( ГРУППАМАРКИРОВКИ == "shoes", 31, ЕСЛИ( ГРУППАМАРКИРОВКИ == "lp", 31, ЕСЛИ( ГРУППАМАРКИРОВКИ == "perfumery", 31, 						  ЕСЛИ( ГРУППАМАРКИРОВКИ == "electronics", 38, ЕСЛИ( ГРУППАМАРКИРОВКИ == "tires", 31, "" ) ) ) ) );ДОБАВИТЬКОНТЕКСТ( "SELECT mark FROM mark_stock_marks WHERE ic = " + ИДДОКУМЕНТА, "СписокСтрок" );ТИПДОКУМЕНТА			= "LP_INTRODUCE_OST";IF ( МетодВводаВОборот == "REMAINS" ){	ДОБАВИТЬКОНТЕКСТ( "SELECT mark FROM mark_stock_marks WHERE ic = " + ИДДОКУМЕНТА, "СписокСтрок" );	ТекстЗапроса			= "{""trade_participant_inn"": """ + ИННФИРМЫ + """, ""products_list"": [";	WHILE ( !КОНЕЦКОНТЕКСТА( "СписокСтрок" ) )	{		ТекстЗапроса		+= ЕСЛИ( НОМЕРСТРОКИ( ) == 0, "", "," ) + "{""ki"": """ + ЗАМЕНИТЬ( ЛЕВСИМВ( СписокСтрок.mark, ДлинаКода ), """", "\""" ) + """, ""kitu"": """"}";		ПРОПУСТИТЬ( 1, "СписокСтрок" );	}}ELSE{	ДОБАВИТЬКОНТЕКСТ( "SELECT mark.mark, sprnn.okdp 					   FROM mark_stock_marks mark					   INNER JOIN mark_stock_spec spec ON mark.spec_ic = spec.identity_column					   INNER JOIN sprnn sprnn ON spec.nn = sprnn.nn					   WHERE spec.ic = " + ИДДОКУМЕНТА, "СписокСтрок" );	ТекстЗапроса			= "{ ""participant_inn"": """ + ИННФИРМЫ + """, ""producer_inn"": """ + ИННФИРМЫ + """, ""owner_inn"": """ + ИННФИРМЫ + """, "+							  """production_type"": ""OWN_PRODUCTION"", ""products"": [ ";	WHILE ( !КОНЕЦКОНТЕКСТА( "СписокСтрок" ) )	{		ТекстЗапроса		+= ЕСЛИ( НОМЕРСТРОКИ( ) == 0, "", "," ) + "{""uit_code"": """ + ЗАМЕНИТЬ( ЛЕВСИМВ( СписокСтрок.mark, ДлинаКода ), """", "\""" ) + """, ""uitu_code"": """","+								"""production_date"": """ + DTOC( ДатаВводаВОборот, 7, "-" ) + """, ""tnved_code"":""" + СписокСтрок.okdp + """}";		ПРОПУСТИТЬ( 1, "СписокСтрок" );	}		ТИПДОКУМЕНТА			= "LP_INTRODUCE_GOODS";}УДАЛИТЬКОНТЕКСТ( "СписокСтрок" );ТекстЗапроса			+= "] }";Ответ					= "";GUIDДокумента			= "";// Отправляем запрос в МАРКИРОВКУ// АвторизуемсяМАРКИРОВКАТОКЕН			=  Маркировка.Авторизация( ПРЕДПРИЯТИЕ, СЕРТИФИКАТ, ТЕСТОВЫЙКОНТУР );IF ( ПУСТО( МАРКИРОВКАТОКЕН ) ) RETURN false;АдресСервера 			= ЕСЛИ( ТестовыйКонтур, "https://demo.lp.crpt.tech", "https://ismp.crpt.ru" );try{	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );	Соединение 			= HTTPCONNECT( АдресСервера, "", true, МАРКИРОВКА.ФАЙЛЖУРНАЛА( ) );	IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );		Подпись				= ПЕРЕКОДИРОВАТЬ( ШИФРОВАНИЕ( СЕРТИФИКАТ, ТекстЗапроса, 1, true, false, _МАРКИРОВКА_ХРАНИЛИЩЕСЕРТИФИКАТОВ ), "", "BASE64" );	Документ		 	= "{""product_document"":""" + ПЕРЕКОДИРОВАТЬ( ТекстЗапроса, "", "BASE64" ) + """,						  ""document_format"": ""MANUAL"", ""type"": """ + ТИПДОКУМЕНТА + """, ""signature"":""" + Подпись + """}";	Заголовки[ 0 ]		= "Content-Type: application/json";	Заголовки[ 1 ]		= "Authorization: Bearer " + МАРКИРОВКАТОКЕН;	Ответ				= HTTPPOST( Соединение, "/api/v3/lk/documents/create?pg=" + ГРУППАМАРКИРОВКИ, Документ, "Заголовки" );	IF ( !МАРКИРОВКА.ПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );	GUIDДокумента		= СЖАТЬПРОБЕЛЫ( Ответ );		// Запрашиваем статус документа	Документ			= МАРКИРОВКА.ЗАПРОСДОКУМЕНТАСПРОВЕРКОЙСТАТУСА( ПРЕДПРИЯТИЕ, СЕРТИФИКАТ, ТЕСТОВЫЙКОНТУР, ОТВЕТ );	IF ( ПУСТО( Документ ) ) RETURN "";		ЗАГРУЗИТЬJSON( "Документ", Документ );	// Если документ был принят без ошибок, то ставим статус 1.	IF ( ПРОПИСНЫЕ( СЖАТЬПРОБЕЛЫ( ЗНАЧЕНИЕПОЛЯ( "Документ", "status", "" ) ) ) == "CHECKED_OK" )		ЗАПРОС( "UPDATE mark_stock SET pic = '" + STDF( GUIDДокумента ) + "', status = 3 WHERE identity_column = " + ИДДОКУМЕНТА );	ELSE IF ( ПРОПИСНЫЕ( СЖАТЬПРОБЕЛЫ( ЗНАЧЕНИЕПОЛЯ( "Документ", "status", "" ) ) ) == "IN_PROGRESS" )		THROW( "Сервер ГИС МТ не успел обработать документ за отведенное для этого время." + CHR( 13 ) + "Проверьте статус отправки позже запросив обновления документов" );	ELSE	{		// Иначе, выводим сообщение об ошибке и статус 2		ЗАГРУЗИТЬJSON( "Ошибка", ЗНАЧЕНИЕПОЛЯ( "Документ", "errors", "" ), "error_message" );		ТекстОшибки		= ПЕРЕКОДИРОВАТЬ( ЗНАЧЕНИЕПОЛЯ( "Ошибка", "error_message", "" ), "UTF-8", "ANSI" );		ЗАПРОС( "UPDATE mark_stock SET pic = '" + STDF( GUIDДокумента ) + "', status = 2, reply= '" + ЛЕВСИМВ( STDF( ТекстОшибки ), 250 ) + "' WHERE identity_column = " + ИДДОКУМЕНТА );		THROW( ТекстОшибки );	}}catch ( ТекстСообщения ){	HTTPCLOSE( Соединение );	СООБЩЕНИЕ( ТекстСообщения );			RETURN "";}HTTPCLOSE( Соединение );RETURN GUIDДокумента
