
// Очищаем массив заголовков, чтобы заголовки из других отправок не мешали
Заголовки[ 0 ]			= "";
Заголовки[ 1 ]			= "";
Заголовки[ 2 ]			= "";
Заголовки[ 3 ]			= "";
Заголовки[ 4 ]			= "";

IF ( ПУСТО( СЕРТИФИКАТ ) )
	СЕРТИФИКАТ			= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );
ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'MARK_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;

// Токены авторизации храним в контексте мз трех полей Предприятие, Токен, ВремяАвторизации
IF ( !ВЫБРАТЬКОНТЕКСТ( "ТокеныЭвотор" ) )
	IF ( !ДОБАВИТЬКОНТЕКСТ( "LOCAL: Предприятие char, Токен char, ВремяАвторизации int", "ТокеныЭвотор" ) ) RETURN "";
	
ВЫБРАТЬКОНТЕКСТ( "" );
НАШЛИ			= false;
ПРЕДПРИЯТИЕ		= UPPER( ALLTRIM( ПРЕДПРИЯТИЕ ) );
_ERRORCODE		= 0;

ПЕРЕЙТИВНАЧАЛО( "ТокеныЭвотор" );
WHILE ( !КОНЕЦКОНТЕКСТА( "ТокеныЭвотор" ) && !НАШЛИ )
{
	Нашли		= UPPER( ALLTRIM( ТокеныЭвотор.Предприятие ) ) == ПРЕДПРИЯТИЕ;
	IF ( !НАШЛИ ) ПРОПУСТИТЬ( 1, "ТокеныЭвотор" );
}
IF ( !НАШЛИ )
{
	ДОБАВИТЬСТРОКИ( 1, "ТокеныЭвотор" );
	ИЗМЕНИТЬПОЛЕ( "ТокеныЭвотор", "Предприятие", ПРЕДПРИЯТИЕ );
}
ELSE IF ( ( TICKCOUNT( ) - ТокеныЭвотор.ВремяАвторизации ) < 100000 && !ПУСТО( ТокеныЭвотор.Токен ) ) RETURN ТокеныЭвотор.Токен;

// Авторизуемся
ЭВОТОРТОКЕН			= "";
АдресСервера 		= ЕСЛИ( ТЕСТОВЫЙКОНТУР, "https://edo-v2.platformaofd.ru", "https://edo.platformaofd.ru" );
Заголовки[ 0 ]		= "Content-Type: application/x-www-form-urlencoded";
Заголовки[ 1 ]		= "";

try
{
	NonceGUID			= ЗАПРОС( "SELECT NEWID( )" );
	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );
	Соединение 			= HTTPCONNECT( АдресСервера, "", true, Маркировка.ФАЙЛЖУРНАЛА( ) );
	Текст				= "{""ts"" : " + STR( ДАТАВРЕМЯ( 1 ) ) + ", ""nonce"" : """ + NonceGUID + """}";
	ШифрованныеДанные	= ШИФРОВАНИЕ( СЕРТИФИКАТ, Текст, 1, false, false, _МАРКИРОВКА_ХРАНИЛИЩЕСЕРТИФИКАТОВ );
	ШифрованныеДанные	= МАРКИРОВКА.URLENCODING( ПЕРЕКОДИРОВАТЬ( ШифрованныеДанные, "", "BASE64" ) );


	Ответ				= _ERRORDESCRIPTION;
	IF ( ПУСТО( ШифрованныеДанные ) ) THROW( Ответ );

	Ответ				= HTTPPOST( Соединение, "api/v2/oauth/token", "grant_type=signature&signature=" + ШифрованныеДанные, "Заголовки" );
	IF ( !МАРКИРОВКА.ЭВОТОРПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );
	ЗАГРУЗИТЬJSON( "Авторизация", Ответ );
	if ( ТИП( "Авторизация.access_token" ) != "C" ) THROW( ТекстОшибки + Ответ );
	ЭВОТОРТОКЕН			= ЗНАЧЕНИЕПОЛЯ( "Авторизация", "access_token" );
}
catch ( ТекстСообщения )
{
	HTTPCLOSE( Соединение );
	СООБЩЕНИЕ( ТекстСообщения );
	ИЗМЕНИТЬПОЛЕ( "ТокеныЭвотор", "Токен", "" );
	RETURN "";
}
HTTPCLOSE( Соединение );

ИЗМЕНИТЬПОЛЕ( "ТокеныЭвотор", "Токен", ЭВОТОРТОКЕН );
ИЗМЕНИТЬПОЛЕ( "ТокеныЭвотор", "ВремяАвторизации", TICKCOUNT( ) );
RETURN ЭВОТОРТОКЕН;
