
// Запрос информации об ЭДО ИД
ЭДО.ЭДОИНФОРМАЦИЯ( ПРЕДПРИЯТИЕ );

СЕРТИФИКАТ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );
ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;
ПОДПИСАНТИМЯ			= Сервис.XMLЗаменитьСимволы( ЗАМЕНИТЬ( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIFIRSTNAME" + ПРЕДПРИЯТИЕ + "'" ), " ", "_" ) );
ПОДПИСАНТФАМИЛИЯ		= Сервис.XMLЗаменитьСимволы( ЗАМЕНИТЬ( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDISURNAME" + ПРЕДПРИЯТИЕ + "'" ), " ", "_" ) );
ПОДПИСАНТОТЧЕСТВО		= Сервис.XMLЗаменитьСимволы( ЗАМЕНИТЬ( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIMIDDLENAME" + ПРЕДПРИЯТИЕ + "'" ), " ", "_" ) );
ПОДПИСАНТДОЛЖНОСТЬ		= Сервис.XMLЗаменитьСимволы( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIPOSITION" + ПРЕДПРИЯТИЕ + "'" ) );
Фирма					= ЗАПРОС( "SELECT CONVERT( varchar( 10 ), value ) FROM param_ex WHERE param= 'EDI_FIRM" + ПРЕДПРИЯТИЕ + "'" );
ФирмаНаименование		= Сервис.XMLЗаменитьСимволы( ЗАПРОС( "SELECT name, inn, kpp, ogrn FROM sprfirm WHERE code = '" + Фирма + "'", "name" ) );
ФирмаИНН				= Сервис.XMLЗаменитьСимволы( ЗАПРОС( "", "inn" ) );
ФирмаКПП				= Сервис.XMLЗаменитьСимволы( ЗАПРОС( "", "kpp" ) );
ФирмаОГРН				= Сервис.XMLЗаменитьСимволы( ЗАПРОС( "", "ogrn" ) );
ФирмаЭДОИД				= Сервис.XMLЗаменитьСимволы( ЭДОИНФО_ИДФирмы );
ЭДООперИД				= ЛЕВСИМВ( ФирмаЭДОИД, 3 );

// Фирма в документе должна совпадать с фирмой в настройках
ИмяТаблицыЭДО			= ЕСЛИ( ВходящийДокумент, "ediincome", "edioutcome" );
ЭДОИДКлиента			= ЗАПРОС( "SELECT cediid, guid, client, annnote FROM " + ИмяТаблицыЭДО + " WHERE rid = '" + РИДДокумента + "'", "cediid" );
ИДДокумента				= ЗАПРОС( "", "guid" );
КодКлиента				= ЗАПРОС( "", "client" );
Причина					= ЗАПРОС( "", "annnote" );
//сообщение( "SELECT cediid, guid, client, annnote FROM " + ИмяТаблицыЭДО + " WHERE rid = '" + РИДДокумента + "'" );
IF ( ПУСТО( ЭДОИДКлиента ) )
	ЭДОИДКлиента		= ЗАПРОС( "SELECT CASE WHEN ediid = '' THEN ediid2 ELSE ediid END FROM sprclient WHERE code = '" + КодКлиента + "'" );

ТАКСКОМТОКЕН			= ЭДО.ТАКСКОМАвторизация( ПРЕДПРИЯТИЕ );
IF ( ПУСТО( ТАКСКОМТОКЕН ) ) RETURN false;

АдресСервера 			= ЭДО.ТАКСКОМАдресСервера( ТЕСТОВЫЙКОНТУР );
Заголовки[ 0 ]			= ЭДО.ТАКСКОМИнтегратор( );
Заголовки[ 1 ]			= "Assistant-Key: " + ТАКСКОМТОКЕН;
Заголовки[ 2 ]			= "Content-Type: application/x-www-form-urlencoded";
Результат				= true;
СообщениеОбОшибке		= "";
Соединение				= -1;
ИМЯПЕРЕМЕННОЙ			= "";

try
{
	IF ( ПУСТО( Причина ) ) THROW( "Не указана причина предложения об аннулировании документа." );
	
	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );
	Соединение 			= HTTPCONNECT( АдресСервера, "", true, ЭДО.ФАЙЛЖУРНАЛА( ) );

	ИМЯТАБЛИЦЫ			= ЭДО.ТАКСКОМТаблицаКонтейнера( );
	IF ( ПУСТО( ИМЯТАБЛИЦЫ ) ) THROW( _ERRORDESCRIPTION );

	// Читаем докмуент с из edi_notification
	//сообщение( "SELECT filename, xml, direction FROM edi_notifications WHERE parentguid= '" + STDF( ИДДокумента ) + "' AND f_main = 1" );
	Ответ				= ЗАПРОС( "SELECT filename, xml, direction, reglament FROM edi_notifications WHERE parentguid= '" + STDF( ИДДокумента ) + "' AND f_main = 1", "xml" );
	ГлавныйФайл			= ЗАПРОС( "", "filename" );
	КодРегламента		= ЗАПРОС( "", "reglament" );
	Входящий			= ЗАПРОС( "", "direction" ) == 1;
	АннулированиеНайдено= ЗАПРОС( "SELECT 1 AS flag FROM edi_notifications WHERE parentguid= '" + STDF( ИДДокумента ) + "' AND type= 'CancellationOffer' AND direction = 0" );
/*
			ФАЙЛ			= ФАЙЛСОЗДАТЬ( "d:\входящийконтейнер.zip" );
			ФАЙЛЗАПИСАТЬ( Файл, Ответ );
			ФАЙЛЗАКРЫТЬ( Файл );
*/
	IF ( ПУСТО( ГлавныйФайл ) ) THROW( "Документ для аннулирования не найден." );

	// Все вложения загружаем в память, для того, чтобы потом прикрепить к документу
	ФайлПрихода			= Ответ;

	// Прикрепляем к документу вложения
	// Извлекаем данные отправителя из файла card.xml
	РАЗОБРАТЬ_XML( ФайлПрихода, "ЭДО.DocFlowINVars_РазобратьТэги" );
	IF ( Входящий )
		ЭДОИДПоставщика	= ПЕРЕМЕННАЯ( "Файл_СвУчДокОбор_ИдОтпр", "" );
	ELSE
		ЭДОИДПоставщика	= ПЕРЕМЕННАЯ( "Файл_СвУчДокОбор_ИдПол", "" );
	// Теперь необходимо отправить контейнер с файлами о предложении об аннулировании документа.
	// Но только, если ещё не отправляли ранее
	IF ( !АннулированиеНайдено )
	{
		УУИДИзвещения		= UUID( );
		ИмяАнФайла			= "DP_PRANNUL_" + ЭДОИДПоставщика + "_" + ФирмаЭДОИД + "_" + DTOC( ДАТА( ), 7, "" ) + "_" + УУИДИзвещения;
		ПодписьФайла		= ПЕРЕКОДИРОВАТЬ( ШИФРОВАНИЕ( СЕРТИФИКАТ, ФайлПрихода, 1, false, false, _ЭДО_ХРАНИЛИЩЕСЕРТИФИКАТОВ ), "", "BASE64" );
		ТекстАннулирования	= ЭДО.ТАКСКОМDP_PRANNUL( ПРЕДПРИЯТИЕ, ЭДОИДПоставщика, ГлавныйФайл, Причина, ИмяАнФайла, ПодписьФайла );

		IF ( !ЗАПРОС( "INSERT INTO " + ИМЯТАБЛИЦЫ + " ( filename, content, reglament, transactioncode, signname, signcontent ) VALUES 
					   ( '" + ИмяАнФайла + ".xml" + "', " + МАССИВИЗСТРОКИ( ТекстАннулирования ) + ", 
						 '" + КодРегламента + "', 'CancellationOffer', '', 0x0 ) " ) ) THROW( _ERRORDESCRIPTION );
					   
		Карта				= ЭДО.ТАКСКОМCard( ПРЕДПРИЯТИЕ, "CancellationOffer", Фирма, КодКлиента, ЭДОИДКлиента, "", ДАТАВРЕМЯ( ), 0 );
		if ( ПУСТО( Карта ) ) THROW( "Ошибка создания card.xml" + CHR( 13 ) + _ERRORDESCRIPTION );
		IF ( !ЗАПРОС( "INSERT INTO " + ИМЯТАБЛИЦЫ + " ( filename, content, reglament, transactioncode, signname, signcontent ) VALUES 
					   ( 'card.xml', " + МАССИВИЗСТРОКИ( Карта ) + ", '" + КодРегламента + "', 'CancellationOffer', '', 0x0 ) " ) ) THROW( _ERRORDESCRIPTION );
					   
		Контейнер			= ЭДО.ТАКСКОМКонтейнер( ИМЯТАБЛИЦЫ, СЕРТИФИКАТ, ИДДокумента );
		Ответ				= HTTPPOST( Соединение, "v1.3/API/SendMessage/Outbox.zip", Контейнер, "Заголовки" );
		IF ( !ЭДО.ТАКСКОМПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW( Ответ );
		// Запишем отправленные файлы
		ЭДО.ТАКСКОМЗАПИСАТЬСВЯЗАННЫЙДОКУМЕНТ( ПРЕДПРИЯТИЕ, ИДДокумента, УУИДИзвещения, ТекстАннулирования, "CancellationOffer", false, ИмяАнФайла + ".xml", false, "" );
			
		ЗАПРОС( "DELETE FROM " + ИМЯТАБЛИЦЫ );
	}			
}
catch ( ТекстСообщения )
{
	СообщениеОбОшибке	= ТекстСообщения;
	Результат			= false;
}
IF ( Соединение >= 0 ) HTTPCLOSE( Соединение );
СИСТЕМНОЕСООБЩЕНИЕ( );
IF ( !Результат )
	СООБЩЕНИЕ( ЕСЛИ( ПУСТО( СообщениеОбОшибке ), _ERRORDESCRIPTION, ТекстСообщения ) );

// Проверяем и обрабатываем служебные этапы, если такие появились
ЭДО.ТАКСКОМОбработкаСлужебныхЭтапов( ПРЕДПРИЯТИЕ );
ЭДО.ТАКСКОМПроверкаСтатусаОтгрузок( ПРЕДПРИЯТИЕ );
ЭДО.ТАКСКОМПроверкаСтатусаПриходов( ПРЕДПРИЯТИЕ );

RETURN Результат;
