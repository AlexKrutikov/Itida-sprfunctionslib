ФУНКЦИЯ ЛОКАЛЬНАЯ DockFlowProcessSystemIN_РазобратьТэги( Родитель, ТипТэга, Имя, Значение, ФлагЗакрытия )
{
	IF ( ТипТэга == "ТЭГ" )
	{
		IF ( UPPER( ALLTRIM( Имя ) ) == "DOCUMENT" && ФлагЗакрытия )
		{
			ДОБАВИТЬСТРОКИ( 1, "DocFlow" );
			REPLACE( "DocFlow", "DocFlowId", mId );
			REPLACE( "DocFlow", "InternalId", mInternalId );
			REPLACE( "DocFlow", "TransactionCode", mTransactionCode );
			REPLACE( "DocFlow", "ReglamentCode", mReglamentCode );
			mInternalId 		= "";
			mTransactionCode	= "";
			mReglamentCode		= "";
		}
		IF ( UPPER( ALLTRIM( Имя ) ) == "DOCFLOW" )
		{
			mId					= "";
			mInternalId 		= "";
			mTransactionCode	= "";
			mReglamentCode		= "";
		}
	}
	IF ( ТипТэга == "АТРИБУТ" )
	{
		IF ( UPPER( ALLTRIM( Имя ) ) == "ID" )
			mId															= Значение;
		ELSE IF ( UPPER( ALLTRIM( Имя ) ) == "TRANSACTIONCODE" )
			mTransactionCode											= Значение;
		ELSE IF ( UPPER( ALLTRIM( Имя ) ) == "INTERNALID" )
			mInternalId													= Значение;
		ELSE IF ( UPPER( ALLTRIM( Имя ) ) == "REGLAMENTCODE" )
			mReglamentCode												= Значение;
	}
}


СЕРТИФИКАТ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_CERTIFICATE" + ПРЕДПРИЯТИЕ + "'" );
ТЕСТОВЫЙКОНТУР			= VAL( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_APITEST" + ПРЕДПРИЯТИЕ + "'" ) ) != 0 ;
ДАТАЗАГРУЗКИ			= CTOD( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIDOWNLOADDATE" + ПРЕДПРИЯТИЕ + "'" ) );
СКРИПТПРОВЕРКИ			= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDICHECKIN_EX" + ПРЕДПРИЯТИЕ + "'" );
Фирма					= ЗАПРОС( "SELECT code FROM sprfirm WHERE code IN ( SELECT CONVERT( varchar( 10 ), value ) FROM param_ex WHERE param= 'EDI_FIRM" + ПРЕДПРИЯТИЕ + "')" );

ЭДО.ЭДОИНФОРМАЦИЯ( ПРЕДПРИЯТИЕ );
ФирмаЭДОИД				= Сервис.XMLЗаменитьСимволы( ЭДОИНФО_ИДФирмы );
ЭДООперИД				= ЭДОИНФО_ИдЭДО;

IF ( РАЗНИЦАДАТ( ДАТАЗАГРУЗКИ, ДАТА( ), "day" ) > 30 )
	ДАТАЗАГРУЗКИ		= ДОБАВИТЬДНИ( ДАТА( ), -30 );

ТАКСКОМТОКЕН			= ЭДО.ТАКСКОМАвторизация( ПРЕДПРИЯТИЕ, СЕРТИФИКАТ );
IF ( ПУСТО( ТАКСКОМТОКЕН ) ) RETURN false;

АдресСервера 			= ЭДО.ТАКСКОМАдресСервера( ТЕСТОВЫЙКОНТУР );
Заголовки[ 0 ]			= ЭДО.ТАКСКОМИнтегратор( );
Заголовки[ 1 ]			= "Assistant-Key: " + ТАКСКОМТОКЕН;
Заголовки[ 2 ]			= "Content-Type: application/x-www-form-urlencoded";
Результат				= true;
СообщениеОбОшибке		= "";
Соединение				= -1;
ИМЯПЕРЕМЕННОЙ			= "";
ПропущеноДокументов		= 0;

try
{
	ИМЯТАБЛИЦЫ			= ЭДО.ТАКСКОМТаблицаКонтейнера( );
	IF ( ПУСТО( ИМЯТАБЛИЦЫ ) ) THROW( _ERRORDESCRIPTION );

	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );
	Соединение 			= HTTPCONNECT( АдресСервера, "", true, ЭДО.ФАЙЛЖУРНАЛА( ) );
	Продолжать			= true;
	ВсегоДокументов		= 0;
	ВсегоЗагружено		= 0;
	Дата				= СТРОКАИЗВРЕМЕНИ( ДАТАЗАГРУЗКИ, 7, ".", "T" );
	ПОКА ( Продолжать )
	{
		СИСТЕМНОЕСООБЩЕНИЕ( "Получение данных с сервера taxcom.ru" );
		
		Ответ			= HTTPGET( Соединение, "v1.3/API/GetMessageList?date=" + Дата + "&direction=ingoing", "Заголовки" );
		IF ( !ЭДО.ТАКСКОМПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );
		
		ДОБАВИТЬКОНТЕКСТ( "LOCAL: IsLast char, LastRecordDateTime char", "Результат" );
		ЗАГРУЗИТЬ( "Результат", "XMLSTRING", Ответ, "", "", "", "DocFlow" );
		ПЕРЕЙТИВНАЧАЛО( "Результат" );

		Продолжать				= ЗНАЧЕНИЕПОЛЯ( "Результат", "IsLast", "" ) != "true";
		Дата					= СТРОКАИЗВРЕМЕНИ( CTOD( ЗНАЧЕНИЕПОЛЯ( "Результат", "LastRecordDateTime", "" ) ), 7, ".", "T" );
		
		ДОБАВИТЬКОНТЕКСТ( "LOCAL: TransactionCode char, InternalId char, ReglamentCode char, DocFlowID char", "DocFlow" );
		// Заполняем таблицу со списком документов и их статусами
		РАЗОБРАТЬ_XML( Ответ, "DockFlowProcessSystemIN_РазобратьТэги" );
		
		ВсегоЗагружено			+= КОЛИЧЕСТВОСТРОК( "DocFlow" );
		СИСТЕМНОЕСООБЩЕНИЕ( "Загрузка документов. Получение данных с сервера taxcom.ru. Получено " + STR( ВсегоЗагружено ) + " записей документов" );

		ПЕРЕЙТИВНАЧАЛО( "DocFlow" );
		ПОКА( !КОНЕЦКОНТЕКСТА( "DocFlow" ) )
		{
			ТипДокумента		= UPPER( ALLTRIM( DocFlow.TransactionCode ) );
			ВнутреннийИД		= DocFlow.InternalId;
			ИДПотока			= DocFlow.DocFlowId;
			КодТранзакции		= ЕСЛИ( ВСПИСКЕ( ТипДокумента, "VENDORTITLE", "INVOICE", "MAINDOCUMENT" ), ТипДокумента, "" );
			
			// Если не обрабатываем такую транзакцию, или уже успешно отправляли такой файл, то ничего делать не надо
			if ( ЕСЛИ( ПУСТО( КодТранзакции ), true,
					ЗАПРОС( "SELECT CASE WHEN EXISTS( SELECT * FROM ediincome WHERE ent= '" + ПРЕДПРИЯТИЕ + "' AND guid ='" + ИДПотока + "' ) 
									THEN 1 ELSE 0 END" ) == 1 ) )
			{
				ПРОПУСТИТЬ( 1, "DocFlow" );
				CONTINUE;
			}
			
			// Читаем пакет 
			Ответ			= HTTPGET( Соединение, "v1.3/API/GetMessage/" + ВнутреннийИД, "Заголовки", false, "B" );
			IF ( !ЭДО.ТАКСКОМПРОВЕРКАНАОШИБКИ( @Ответ, true ) ) THROW ( Ответ );
			

/*
			ФАЙЛ			= ФАЙЛСОЗДАТЬ( "d:\входящийконтейнер.zip" );
			ФАЙЛЗАПИСАТЬ( Файл, Ответ );
			ФАЙЛЗАКРЫТЬ( Файл );
*/
			// Необходимо найти файл meta.xml и разобрать его выделив имена входящих файлов.
			ДОБАВИТЬКОНТЕКСТ( "LOCAL: ReglamentCode char, TransactionCode char, MainImage char, AdditionalDocId char, DataImage char, 
									  MainPath char, MainFileName char, DataPath char, DataFileName char", "FileImages" );
			
			НомерАрхива		= АРХИВОТКРЫТЬ( Ответ );
			Количествофайлов= АРХИВ( НомерАрхива, "СписокФайлов", "", "", "Файлы" );
			РАЗОБРАТЬ_XML( СТРОКАИЗМАССИВА( АРХИВ( НомерАрхива, "Извлечь", "meta.xml" ) ), "ЭДО.ТАКСКОМTaxComMeta_РазобратьТэги" );

			КоличествоВложений	= 0;
			ГлавныйФайл			= "";
			ГлавнаяТранзакция	= "";
			ГлавныйРегламент	= "";
			ПутьГлавногоФайла	= "";
			ИмяГлавногоФайла	= "";
			XMLТекстДокумента	= "";
			ПодтверждениеНайдено= false;
			ПЕРЕЙТИВНАЧАЛО( "FileImages" );
			ПОКА (!КОНЕЦКОНТЕКСТА( "FileImages" ) )
			{
				IF ( !ПУСТО( FileImages.AdditionalDocId ) || ВСПИСКЕ( UPPER( FileImages.TransactionCode ), "INVOICE", "MAINDOCUMENT", "VENDORTITLE" ) )
				{
					ВложенияСодержимое[ КоличествоВложений ]	= АРХИВ( НомерАрхива, "Извлечь", FileImages.MainImage );
					ВложенияФайл[ КоличествоВложений ]			= FileImages.MainFileName;
					КоличествоВложений++;
					IF ( !ПУСТО( FileImages.DataImage ) ) 
					{
						ВложенияСодержимое[ КоличествоВложений ]= АРХИВ( НомерАрхива, "Извлечь", FileImages.DataImage );
						ВложенияФайл[ КоличествоВложений ]		= FileImages.DataFileName;
						КоличествоВложений++;
					}
					IF ( ВСПИСКЕ( UPPER( FileImages.TransactionCode ), "INVOICE", "MAINDOCUMENT", "VENDORTITLE" ) )
					{
						ГлавныйФайл			= FileImages.MainImage;
						ПутьГлавногоФайла	= FileImages.MainPath;
						ИмяГлавногоФайла	= FileImages.MainFileName;
						ГлавнаяТранзакция	= FileImages.TransactionCode;
						ГлавныйРегламент	= FileImages.ReglamentCode;
					}
					IF ( ЛЕВСИМВ( UPPER( FileImages.TransactionCode ), 7 ) == "RECEIVE" )
						ПодтверждениеНайдено= true;
				}
				ПРОПУСТИТЬ( 1, "FileImages" );
			}
			IF ( ПУСТО( ГлавныйФайл ) )
			{
				ПРОПУСТИТЬ( 1, "DocFlow" );
				CONTINUE;
			}
			ТИПДОКУМЕНТА		= "";
			// Все вложения загружаем в память, для того, чтобы потом прикрепить к документу
			ФайлПрихода			= АРХИВ( НомерАрхива, "Извлечь", ГлавныйФайл );;
			ПутьФайла			= ПутьГлавногоФайла;
			ИмяФА				= ИмяГлавногоФайла;

			ТИПВЛОЖЕНИЯ			= ПРОПИСНЫЕ( ИмяФА );
			ТИПДОКУМЕНТА		= ЕСЛИ( ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 10 ) == "DP_IAKTPRM" || ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 11 ) == "DP_REZRUISP", "049", 
								  ЕСЛИ( ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 8 ) == "ON_SCHET", "032", 
								  ЕСЛИ( ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 8 ) == "DP_ORDER" || ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 8 ) == "ON_ORDER", "020",  
								  ЕСЛИ( ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 3 ) == "ON_" || ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 10 ) == "DP_OTORG12" || 
										ЛЕВСИМВ( ТИПВЛОЖЕНИЯ, 12 ) == "DP_TOVTORGPR", "001", "" ) ) ) );
			IF ( !ПУСТО( ТИПДОКУМЕНТА ) )
			{
				XMLТекстДокумента	= СТРОКАИЗМАССИВА( ФайлПрихода );

				// Если быд найден XML текст документа и определен фильтр на входящие документы, 
				// то проверяем. подходит ли нам документ
				IF ( !ПУСТО( СКРИПТПРОВЕРКИ ) )
				{
					// Формируем список переменных для проверки документа на удовлетворение фильтру
					РАЗОБРАТЬ_XML( XMLТекстДокумента, "ЭДО.DocFlowINVars_РазобратьТэги" );
					Проверка		= ВЫЧИСЛИТЬ( СКРИПТПРОВЕРКИ );
					IF ( ТИП( "Проверка" ) == "L" && ПУСТО( Проверка ) )
					{
						ПропущеноДокументов++;
						ПРОПУСТИТЬ( 1, "DocFlow" );
						CONTINUE;
					}
				}
			}

			// Создаем документ из полученного файла
			ДокументИзМаркировки		= false;
			IF ( !ПУСТО( XMLТекстДокумента ) )
			{
/*
				// Создаем документ из полученного файла
				// Если в файле есть маркировка, то создаем в модуле маркировки
				IF ( ATC( XMLТекстДокумента, "<РљРР—" ) > 0 || ATC( XMLТекстДокумента, "<КИЗ" ) > 0 || 
					 ATC( XMLТекстДокумента, "<НомУпак" ) > 0 || ATC( XMLТекстДокумента, "<РќРѕРјРЈРїР°Рє" ) > 0 || 
					 ATC( XMLТекстДокумента, "<ИдентТрансУпак" ) > 0 || ATC( XMLТекстДокумента, "<РРґРµРЅС‚РўСЂР°РЅСЃРЈРїР°Рє" ) > 0 )
				{
					СозданиеДокумента	= Маркировка.СоздатьДокументИЗXML( Предприятие, ИДПотока, "", XMLТекстДокумента );
					ДокументИзМаркировки= true;
				}
				ELSE
*/				
					СозданиеДокумента	= ЭДО.СоздатьДокументИЗXML( Предприятие, ИДПотока, "", XMLТекстДокумента, false, ТИПДОКУМЕНТА, ЛЕВСИМВ( ТипВложения, 10 ) );
					
				// Запишем принятый файлы
				ЭДО.ТАКСКОМЗАПИСАТЬСВЯЗАННЫЙДОКУМЕНТ( ПРЕДПРИЯТИЕ, ИДПотока, ИДПотока, XMLТекстДокумента, ГлавнаяТранзакция, true, ИмяГлавногоФайла, true, ГлавныйРегламент );
			}
			ELSE
			{
				// ПРЕДПРИЯТИЕ, GUIDДОКУМЕНТА, GUIDРЕДАКЦИИ, АДРЕСКЛИЕНТА, ИННКЛИЕНТА, КППКЛИЕНТА, НАЗВАНИЕКЛИЕНТА, НАЗВАНИЕДОКУМЕНТА, НОМЕРДОКУМЕНТА, ДАТАДОКУМЕНТА, ВЫВЕСТИСООБЩЕНИЕ
				СозданиеДокумента	= ЭДО.СоздатьПустойДокумент( Предприятие, ИДПотока, "", "", "", "", "", "", "б/н", ДАТАВРЕМЯ( ), false );
			}
			IF ( ПУСТО( СозданиеДокумента ) ) THROW( "Ошибка загрузки данных из ЭДО." );

			// Прикрепляем к документу вложения
			// Извлекаем данные отправителя из файла card.xml
			РАЗОБРАТЬ_XML( СТРОКАИЗМАССИВА( АРХИВ( НомерАрхива, "Извлечь", ПутьФайла + "card.xml" ) ), "ЭДО.DocFlowINVars_РазобратьТэги" );
			ЭДОИДПоставщика			= ПЕРЕМЕННАЯ( "Card_Sender_Abonent_Id", "" );
			IF ( !ДокументИзМаркировки )
			{
				ИДДокументаВх		= ЗАПРОС ( "SELECT rid, client FROM ediincome
												WHERE guid = '" + STDF( ИДПотока ) + "' AND ent = '" + STDF( Предприятие ) + "'", "rid" );
				ПоставщикКод		= ЗАПРОС ( "", "client" );
				IF ( !ПУСТО( ЭДОИДПоставщика ) && ПУСТО( ПоставщикКод ) && !ПЕРЕМЕННАЯ( "_ЭДОНЕСОЗДАВАТЬКОНТРАГЕНТОВ", false ) )
					ПоставщикКод	= ЭДО.СоздатьКонтрагента( ПРЕДПРИЯТИЕ, "Контрагент с ЭДО ИД " + ЭДОИДПоставщика, "", "", "", "", "", "" );

				__SQL( ) 
				{
					DELETE FROM edi_attach WHERE owner = '[[ ИДДокументаВх ]]';
				};
				FOR ( НомерВложения = 0; НомерВложения < КоличествоВложений; НомерВложения++ )
				{
					__SQL( )
					{
						INSERT INTO edi_attach ( owner, filename, filecontent ) 
						VALUES ( '[[ ИДДокументаВх ]]', '[[ ВложенияФайл[ НомерВложения ] ]]', [[ СТРОКА( ВложенияСодержимое[ НомерВложения ] ) ]] );
					};
					ВложенияСодержимое[ НомерВложения ]	= false;
				}
				IF ( !ПУСТО( ЭДОИДПоставщика ) )
				{
					__SQL( )
					{
						UPDATE ediincome SET client = (SELECT MAX( code ) FROM sprclient WHERE ediid = '[[ STDF( ЭДОИДПоставщика ) ]]' OR ediid2 = '[[ STDF( ЭДОИДПоставщика ) ]]' )
						WHERE rid = '[[ ИДДокументаВх ]]' AND client = '';
						
						UPDATE ediincome SET cediid= '[[ STDF( ЭДОИДПоставщика ) ]]' WHERE rid = '[[ ИДДокументаВх ]]' ;
						UPDATE sprclient SET ediid=  '[[ STDF( ЭДОИДПоставщика ) ]]' WHERE code= '[[ ПоставщикКод ]]' AND ediid  = '';
						UPDATE sprclient SET ediid2= '[[ STDF( ЭДОИДПоставщика ) ]]' WHERE code= '[[ ПоставщикКод ]]' AND ediid2 = '' AND ediid <> '[[ STDF( ЭДОИДПоставщика ) ]]';
					}
				}
			}
				
			НРНомер					= ЗАПРОС( "SELECT ndok, date, client FROM ediincome WHERE guid= '" + STDF( ИДПотока ) + "'", "ndok" );
			НРДата					= ЗАПРОС( "", "date" );
			Поставщик				= ЗАПРОС( "", "client" );
				
			// Для формы модуля ЭДО проверяем период 
			IF ( НРДата < FORMDATE_MIN )
				FORMDATE_MIN		= НРДата;
			ELSE IF ( НРДата > FORMDATE_MAX )
				FORMDATE_MAX		= НРДата;
		
			// В ответ должны отправить контейнер с файлами о приеме документа.
			// Но только, если ещё не отправляли ранее
			IF ( !ПодтверждениеНайдено )
			{
				УУИДИзвещения		= UUID( );
				ИмяФайлаИзвещения	= "DP_IZVPOL_" + ЭДОИДПоставщика + "_" + ФирмаЭДОИД + "_" + DTOC( ДАТА( ), 7, "" ) + "_" + УУИДИзвещения;
				ПодписьФайла		= ПЕРЕКОДИРОВАТЬ( ШИФРОВАНИЕ( СЕРТИФИКАТ, ФайлПрихода, 1, false, false, _ЭДО_ХРАНИЛИЩЕСЕРТИФИКАТОВ ), "", "BASE64" );
				ТекстПодтверждения	= ЭДО.ТАКСКОМDP_IZVPOL( ПРЕДПРИЯТИЕ, ИмяФайлаИзвещения, ИмяГлавногоФайла, ПодписьФайла );

				IF ( !ЗАПРОС( "INSERT INTO " + ИМЯТАБЛИЦЫ + " ( filename, content, reglament, transactioncode, signname, signcontent ) VALUES 
							   ( '" + ИмяФайлаИзвещения + ".xml" + "', " + МАССИВИЗСТРОКИ( ТекстПодтверждения ) + ", 
								 '" + DocFlow.ReglamentCode + "', 'ReceiveNotice', '', 0x0 ) " ) ) THROW( _ERRORDESCRIPTION );
							   
				Карта				= ЭДО.ТАКСКОМCard( ПРЕДПРИЯТИЕ, "ReceiveNotification", Фирма, Поставщик, ЭДОИДПоставщика, "", ДАТАВРЕМЯ( ), 0 );
				IF ( ПУСТО( Карта ) ) THROW( "Ошибка создания card.xml" + CHR( 13 ) + _ERRORDESCRIPTION );
				IF ( !ЗАПРОС( "INSERT INTO " + ИМЯТАБЛИЦЫ + " ( filename, content, reglament, transactioncode, signname, signcontent ) VALUES 
							   ( 'card.xml', " + МАССИВИЗСТРОКИ( Карта ) + ", '" + DocFlow.ReglamentCode + "', 'ReceiveNotice', '', 0x0 ) " ) ) THROW( _ERRORDESCRIPTION );
							   
				Контейнер			= ЭДО.ТАКСКОМКонтейнер( ИМЯТАБЛИЦЫ, СЕРТИФИКАТ, ИДПотока );
				Ответ				= HTTPPOST( Соединение, "v1.3/API/SendMessage/Outbox.zip", Контейнер, "Заголовки" );
				IF ( !ЭДО.ТАКСКОМПРОВЕРКАНАОШИБКИ( @Ответ ) ) 
				{
					IF ( AT( Ответ, "Транзакция уже была осуществлена для данного документооборота" ) == 0 )
						СООБЩЕНИЕ( Ответ );
					ELSE
						// Запишем отправленные файлы
						ЭДО.ТАКСКОМЗАПИСАТЬСВЯЗАННЫЙДОКУМЕНТ( ПРЕДПРИЯТИЕ, ИДПотока, УУИДИзвещения, ТекстПодтверждения, "ReceiveNotice", false, ИмяФайлаИзвещения + ".xml", false, "" );
				}
					
				IF ( !ЗАПРОС( "DELETE FROM " + ИМЯТАБЛИЦЫ ) ) THROW( _ERRORDESCRIPTION );
			}			
			ВсегоДокументов++;
			АРХИВЗАКРЫТЬ( НомерАрхива, true );
			
/*
			ФАЙЛ			= ФАЙЛСОЗДАТЬ( "d:\" + ВнутреннийИД + ".xml" );
			ФАЙЛЗАПИСАТЬ( Файл, ФайлПрихода );
			ФАЙЛЗАКРЫТЬ( Файл );
*/

			ПРОПУСТИТЬ( 1, "DocFlow" );
		}
			
		УДАЛИТЬКОНТЕКСТ( "DocFlow" );
		УДАЛИТЬКОНТЕКСТ( "Результат" );
	}	
	
	ЭДО.ТАКСКОМПроверкаСтатусаОтгрузок( ПРЕДПРИЯТИЕ )
	IF ( ЭДО.ТАКСКОМПроверкаСтатусаПриходов( ПРЕДПРИЯТИЕ ) )
	{
		// Обновляем дату загрузки
		ЗАПРОС( "DELETE FROM param_ex WHERE param= 'EDI_EDIDOWNLOADDATE" + ПРЕДПРИЯТИЕ + "'" );
		ЗАПРОС( "INSERT INTO param_ex ( param, value ) VALUES ( 'EDI_EDIDOWNLOADDATE" + ПРЕДПРИЯТИЕ + "', '" + DTOC( ДАТА( ) ) + "' )" );
	}			
	
	ИтоговоеСообщение		= "";
	// Сообщаем о завершении загрузки
	IF ( ВсегоДокументов == 0 )
		ИтоговоеСообщение	= "Новые документы не найдены.";
	ELSE
		ИтоговоеСообщение	= "Успешно загружен(о) " + ПРОПИСЬ( ВсегоДокументов, "документ", "документа", "документов" );

	IF ( ПропущеноДокументов > 0 )
		ИтоговоеСообщение	+= CHR( 13 ) + CHR( 13 ) + "Не загружен(о) " + ПРОПИСЬ( ПропущеноДокументов, "документ", "документа", "документов" ) + " т.к. не удовлетворяет фильтру на документы";
		
	СООБЩЕНИЕ( ИтоговоеСообщение );
}
catch ( ТекстСообщения )
{
	СообщениеОбОшибке	= ТекстСообщения;
	Результат			= false;
}
СИСТЕМНОЕСООБЩЕНИЕ( ); ИНДИКАТОР( );
IF ( Соединение >= 0 ) HTTPCLOSE( Соединение );
IF ( !ПУСТО( СообщениеОбОшибке ) ) СООБЩЕНИЕ( СообщениеОбОшибке );

RETURN Результат;
