ДАТАЗАГРУЗКИ			= CTOD( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIDOWNLOADDATE" + ПРЕДПРИЯТИЕ + "'" ) );ПОДПИСАНТИМЯ			= ЗАМЕНИТЬ( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIFIRSTNAME" + ПРЕДПРИЯТИЕ + "'" ), " ", "_" );ПОДПИСАНТФАМИЛИЯ		= ЗАМЕНИТЬ( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDISURNAME" + ПРЕДПРИЯТИЕ + "'" ), " ", "_" );ПОДПИСАНТОТЧЕСТВО		= ЗАМЕНИТЬ( ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIMIDDLENAME" + ПРЕДПРИЯТИЕ + "'" ), " ", "_" );ДОЛЖНОСТЬ				= ЗАПРОС( "SELECT value FROM param_ex WHERE param= 'EDI_EDIPOSITION" + ПРЕДПРИЯТИЕ + "'" );IF ( РАЗНИЦАДАТ( ДАТАЗАГРУЗКИ, ДАТА( ), "day" ) > 30 )	ДАТАЗАГРУЗКИ		= ДОБАВИТЬДНИ( ДАТА( ), -30 );СБИСТОКЕН				= ЭДО.СБИСАвторизация( ПРЕДПРИЯТИЕ );IF ( ПУСТО( СБИСТОКЕН ) ) RETURN false;АдресСервера 			= ЭДО.СБИСАдресСервера( false );;Заголовки[ 0 ]			= "Content-Type: application/json-rpc;charset=utf-8";Заголовки[ 1 ]			= "X-SBISSessionID: " + СБИСТОКЕН;ЗаголовкиДок[ 0 ]		= "X-SBISSessionID: " + СБИСТОКЕН;ИДСобытия				= "";НоваяРедакция			= "";try{	ТекстОшибки			= "Сервер " + АдресСервера + CHR( 13 ) + "вернул сообщение об ошибке: " + CHR( 13 );	Соединение 			= HTTPCONNECT( АдресСервера, "", true, ЭДО.ФАЙЛЖУРНАЛА( ) );	Продолжать			= true;	ВсегоДокументов		= 0;	ПОКА ( Продолжать )	{		IF ( !ПУСТО( ИДСобытия ) )			ТекстЗапроса	= ПЕРЕКОДИРОВАТЬ( "{""jsonrpc"": ""2.0"",""method"": ""СБИС.СписокИзменений"",""params"": {""Фильтр"": {""ИдентификаторСобытия"": """ + ИДСобытия + """,""ПолныйСертификатЭП"": ""Нет""}},""id"": 0 }", "ANSI", "UTF-8" );		ELSE			ТекстЗапроса	= ПЕРЕКОДИРОВАТЬ( "{""jsonrpc"": ""2.0"",""method"": ""СБИС.СписокИзменений"",""params"": {""Фильтр"": {""ДатаВремяС"": """ + TTOC( ДАТАЗАГРУЗКИ ) + """,""ПолныйСертификатЭП"": ""Нет""}},""id"": 0 }", "ANSI", "UTF-8" );					Ответ				= HTTPPOST( Соединение, "service/?srv=1", ТекстЗапроса, "Заголовки" );		IF ( !ЭДО.СБИСПРОВЕРКАНАОШИБКИ( @Ответ ) ) THROW ( Ответ );				ЗАГРУЗИТЬJSON( "Результат", ПЕРЕКОДИРОВАТЬ( ПОЛЕ_JSON( Ответ, "result", "" ), "UTF-8", "ANSI" ), "Результат" );		ЗАГРУЗИТЬJSON( "СписокДокументов", ЗНАЧЕНИЕПОЛЯ( "Результат", "Документ", "" ), "Текст" );						ВсегоДокументов		+= КОЛИЧЕСТВОСТРОК( "СписокДокументов" );		ПЕРЕЙТИВНАЧАЛО( "СписокДокументов" );		ПОКА( !КОНЕЦКОНТЕКСТА( "СписокДокументов" ) )		{			ЗАГРУЗИТЬJSON( "Документ", ЗНАЧЕНИЕПОЛЯ( "СписокДокументов", "Текст", "" ) );			ИДДокумента		= ЗНАЧЕНИЕПОЛЯ( "Документ", "Идентификатор", "" );			Направление		= ЗНАЧЕНИЕПОЛЯ( "Документ", "Направление", "" );			ИмяТаблицы		= ЕСЛИ( Направление == "Исходящий", "edioutcome", "ediincome" );			ИДРедакции		= ПОЛЕ_JSON( ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "Документ", "Редакция", "" ), 0, "" ), "Идентификатор", "" );						// Необходимо пройти все события, чтобы найти ИД последнего			ЗАГРУЗИТЬJSON( "События", ЗНАЧЕНИЕПОЛЯ( "Документ", "Событие", "" ), "Текст" );			ПЕРЕЙТИВНАЧАЛО( "События" );			Комментарий		= "";			ПОКА( !КОНЕЦКОНТЕКСТА( "События" ) )			{				ИДСобытия	= ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "События", "Текст", "" ), "Идентификатор", "" );				ТК			= ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "События", "Текст", "" ), "Комментарий", "" );				IF ( !ПУСТО( ТК ) )	Комментарий= ТК;				// Запишем документы оборота				IF ( !ПУСТО( ИДСобытия ) )				{					ЗАГРУЗИТЬJSON( "Вложения", ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "События", "Текст", "" ), "Вложение", "" ), "Текст" );										ПЕРЕЙТИВНАЧАЛО( "Вложения" );					ПОКА( !КОНЕЦКОНТЕКСТА( "Вложения" ) )					{						ЗАГРУЗИТЬJSON( "Вложение", ЗНАЧЕНИЕПОЛЯ( "Вложения", "Текст", "" ) );						ФайлИмя		= ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "Вложение", "Файл", "" ), "Имя", "" );												ТипВложения		= UPPER( СЖАТЬПРОБЕЛЫ( ЗНАЧЕНИЕПОЛЯ( "Вложение", "Тип", "" ) ) );						ИДВложения		= UPPER( СЖАТЬПРОБЕЛЫ( ЗНАЧЕНИЕПОЛЯ( "Вложение", "Идентификатор", "" ) ) );						НаправлениеВл	= UPPER( СЖАТЬПРОБЕЛЫ( ЗНАЧЕНИЕПОЛЯ( "Вложение", "Направление", "" ) ) ) == "ВХОДЯЩИЙ";						Ссылка			= ЭДО.URLDECODING( ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "Вложение", "Файл", "" ), "Ссылка", "" ) );						// Проверяем наличие такого документа в edi_notifications						IF ( ЗАПРОС ( "SELECT count( * ) FROM edi_notifications WHERE guid = '" + ИДСобытия + "' AND 																					  parentguid = '" + ИДДокумента + "'" ) == 0 && !ПУСТО( Ссылка ) )						{							Ссылка			= ПОДСТРОКА( Ссылка, ATC( Ссылка, "/", 3 ) + 1 );							Ответ			= HTTPGET( Соединение, Ссылка, "ЗаголовкиДок", false, "B" );							IF ( _RESPONSECODE != 200 )							{								ОтветТекст	= СТРОКАИЗМАССИВА( Ответ );								IF ( !ЭДО.СБИСПРОВЕРКАНАОШИБКИ( @ОтветТекст ) ) THROW ( ОтветТекст );							}							IF ( !ПУСТО( ТипВложения ) )								ЭДО.СБИСЗаписатьСвязанныйДокумент( ПРЕДПРИЯТИЕ, ИДДОКУМЕНТА, ИДРЕДАКЦИИ, ИДВложения, ДОЛЖНОСТЬ, ПОДПИСАНТФАМИЛИЯ, ПОДПИСАНТИМЯ, ПОДПИСАНТОТЧЕСТВО, СТРОКАИЗМАССИВА( Ответ ), НаправлениеВл, ФайлИмя, false );						}						ПРОПУСТИТЬ( 1, "Вложения" );					}					УДАЛИТЬКОНТЕКСТ( "Вложения" );				}								ПРОПУСТИТЬ( 1, "События" );			}			УДАЛИТЬКОНТЕКСТ( "События" );						Статус			= VAL( ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "Документ", "Состояние", "" ), "Код", "" ) );			СтатусДокумента	= ЕСЛИ( Статус <= 4, 1, ЕСЛИ( Статус == 6, 4, ЕСЛИ( Статус == 7, 2, ЕСЛИ( Статус == 9 || Статус == 10, 3, ЕСЛИ( Статус == 27, 6, ЕСЛИ( Статус == 22, 5, 7 ) ) ) ) ) );			//IF ( ИДДокумента == "d8dce26f-fbe4-461d-b5e1-4061948e23ee" ) сообщение( Строка( Статус ) + "  " + СтатусДокумента );			// Если все прошло без ошибок, то ставим статус отправки			ЗАПРОС( "IF EXISTS( SELECT * FROM " + ИмяТаблицы + " WHERE guid= '" + STDF( ИДДокумента ) + "' ) 					 UPDATE " + ИмяТаблицы + " SET status = " + СтатусДокумента + " " +					ЕСЛИ( !ПУСТО( Комментарий ), ", reply= '" + STDF( Комментарий ) + "'", "" ) + " WHERE guid= '" + STDF( ИДДокумента ) + "'" );						ПРОПУСТИТЬ( 1, "СписокДокументов" );		}		УДАЛИТЬКОНТЕКСТ( "СписокДокументов" );		Продолжать			= ПОЛЕ_JSON( ЗНАЧЕНИЕПОЛЯ( "Результат", "Навигация", "" ), "ЕстьЕще", "Нет" ) == "Да" && !ПУСТО( ИДСобытия );		УДАЛИТЬКОНТЕКСТ( "Результат" );		СИСТЕМНОЕСООБЩЕНИЕ( "Найдено " + STR( ВсегоДокументов ) + " записей журнала документов." );	}		СИСТЕМНОЕСООБЩЕНИЕ( );}catch ( ТекстСообщения ){	СИСТЕМНОЕСООБЩЕНИЕ( );	ИНДИКАТОР( );	HTTPCLOSE( Соединение );	СООБЩЕНИЕ( ТекстСообщения );	RETURN false;}ИНДИКАТОР( );HTTPCLOSE( Соединение );RETURN true;
