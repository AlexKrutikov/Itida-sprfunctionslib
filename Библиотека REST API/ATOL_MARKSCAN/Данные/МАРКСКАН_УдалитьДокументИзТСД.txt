КОДДОКУМЕНТА = @КодДокумента;
	
//если не передан ид документа для удаления, то определяем из понятия
IF ( ПУСТО( ИДУДАЛЯЕМОГОДОКУМЕНТА ) )
	ИДВНУТРЕННИЙДОК = @ИДДокумента;
ELSE
	ИДВНУТРЕННИЙДОК = ИДУДАЛЯЕМОГОДОКУМЕНТА;

IF ( КОДДОКУМЕНТА == "MRK" )
	ИДДОКУМЕНТА = ЗАПРОС( "SELECT guid FROM mark_in WHERE identity_column= "  + ИДВНУТРЕННИЙДОК );
ELSE
	ИДДОКУМЕНТА = ЗАПРОС("SELECT rid FROM spr000 WHERE code = '" + КОДДОКУМЕНТА + "' AND mainic = '" + ИДВНУТРЕННИЙДОК + "'");	
	
ТипДокумента = "";
//определим тип документа в МаркСкан по типу документа в Айтиде	
IF ( ПУСТО( КОДДОКУМЕНТА ) AND ПУСТО( ИДВНУТРЕННИЙДОК ) ) //Сбор штрихкодов
	ТипДокумента = RESTAPI.МАРКСКАН_ПолучитьТипДокументаВТСД( "BARCODE" );
ELSE
	ТипДокумента = RESTAPI.МАРКСКАН_ПолучитьТипДокументаВТСД( КОДДОКУМЕНТА );
	
IF ( ПУСТО( ТипДокумента ) )
{
	Сообщение("Тип удаляемого документа не определен. Удаление документа произведено не будет.", RESTAPI.ИМЯОБОРУДОВАНИЯ() );
	СистемноеСообщение( );
	_ERROR							= true;	
	RETURN false;
}
	
//http://{{url}}:{{port}}/v3/documents?token={{token}}&type={{documentType}}&code={{documentIDList}}
МАРКСКАН_Токен = RESTAPI.МАРКСКАН_ПолучитьТокен( КОДОБОРУДОВАНИЯ );
IF ( ПУСТО(МАРКСКАН_Токен) )
	RETURN false;
МАРКСКАН_Адрес = RESTAPI.ПолучитьАдресТСД( КОДОБОРУДОВАНИЯ );	
IF ( ПУСТО(МАРКСКАН_Адрес) )
	RETURN false;
	
БазоваяСтрокаЗапроса = "/v3/documents?token=" + МАРКСКАН_Токен + "&type=" + ТипДокумента;

IF ( ПУСТО( ИДДОКУМЕНТА ) )
	RETURN false;
ELSE IF ( !ПУСТО( ИДДОКУМЕНТА ) )
	СтрокаЗапроса = БазоваяСтрокаЗапроса + "&code=" + ИДДОКУМЕНТА;

ОТВЕТ = RESTAPI.МАРКСКАН_DELETEЗАПРОС( МАРКСКАН_Адрес, СтрокаЗапроса, "" );

//если нет ответа или ошибка при удалении по конкретному ИД документа, то выходим и ничего не делаем
IF ( ОТВЕТ == false OR ПУСТО( ОТВЕТ ) )
	RETURN false;

//загрузим документы из полученного ответа в контекст
ДанныеИзТСД = ПОЛЕ_JSON( ОТВЕТ, "document", "");
JSON_ДокументыИзТСД = ПОЛЕ_JSON( ДанныеИзТСД, "details", "");
IF ( ПУСТО( JSON_ДокументыИзТСД ) )
	RETURN false;

ЗАГРУЗИТЬJSON( "ДокументыИзТСД", JSON_ДокументыИзТСД, "Документ" );
ВЫБРАТЬКОНТЕКСТ( "ДокументыИзТСД" );
ПЕРЕЙТИВНАЧАЛО( "ДокументыИзТСД" );
WHILE ( !КОНЕЦКОНТЕКСТА( "ДокументыИзТСД" ) )
{
	ДанныеДокумента		= ПОЛЕ_JSON( ДокументыИзТСД.Документ, ТипДокумента, "");
	ЗАГРУЗИТЬJSON("УдаляемыйДокумент", ДанныеДокумента, "doc");
	ИДДокументаТСД		= ПОЛЕ_JSON( УдаляемыйДокумент.doc, "code", "");
	СтатусУдаления		= ПОЛЕ_JSON( УдаляемыйДокумент.doc, "status", "");
	ОписаниеОшибкиТСД	= ПОЛЕ_JSON( УдаляемыйДокумент.doc, "error", "");
	УДАЛИТЬКОНТЕКСТ("УдаляемыйДокумент");
	ВЫБРАТЬКОНТЕКСТ( "ДокументыИзТСД" );
	
	IF ( СтатусУдаления == "error" )
	{
		СООБЩЕНИЕ(	"Ошибка удаления документа из ТСД " + СИМВОЛПОКОДУ(13) + СИМВОЛПОКОДУ(10) + 
					"Тип документа: """ + RESTAPI.МАРКСКАН_ПолучитьТипДокументаАйтида( ТипДокумента ) + """" + СИМВОЛПОКОДУ(13) + СИМВОЛПОКОДУ(10) + 
					"ИД документа: """ + ИДДокументаТСД + """" + СИМВОЛПОКОДУ(13) + СИМВОЛПОКОДУ(10) + 
					"Описание ошибки: " + ALLTRIM(ОписаниеОшибкиТСД), RESTAPI.ИМЯОБОРУДОВАНИЯ() );
		УДАЛИТЬКОНТЕКСТ("ДокументыИзТСД");
		RETURN false;
	}
	ELSE IF ( СтатусУдаления == "deleted" )
	{
		СООБЩЕНИЕ(	"Удален документ из ТСД " + СИМВОЛПОКОДУ(13) + СИМВОЛПОКОДУ(10) + 
					"Тип документа: """ + RESTAPI.МАРКСКАН_ПолучитьТипДокументаАйтида( ТипДокумента ) + """" + СИМВОЛПОКОДУ(13) + СИМВОЛПОКОДУ(10) + 
					"ИД документа: """ + ИДДокументаТСД + """", RESTAPI.ИМЯОБОРУДОВАНИЯ() );
		УДАЛИТЬКОНТЕКСТ("ДокументыИзТСД");
		RETURN false;
	}
		
	ПРОПУСТИТЬ( 1, "ДокументыИзТСД" );
}
//удаляем контекст с документами
УДАЛИТЬКОНТЕКСТ("ДокументыИзТСД");
RETURN true;
