//Маркировка

markingCode 	= "";

IF ( ALLTRIM(КомандыЧека.ffd_version) == "1.2" )
{
	
	ТипОперацииЧека = ПЕРЕМЕННАЯ("ОПЕРАЦИЯ", "ПРОДАЖА");

	ТэгКодМаркировки = """mc"": """ + ПЕРЕКОДИРОВАТЬ(ШКМарки,"","BASE64") + """"; //base64-представление значения кода маркировки (тег 2000)
	ТэгПланируемыйСтатус = ДАННЫЕ_JSON("plannedStatus", ЕСЛИ( ТипОперацииЧека == "ПРОДАЖА" ИЛИ ТипОперацииЧека == 1, 1, 3) ); 
																			//1 - штучный товар, реализован;
																			//2 - мерный товар, в стадии реализации;
																			//3 - штучный товар, возвращен;
																			//4 - часть товара мерного, возвращена;
																			//255 - itemStatusUnchanged - статус товара, не изменился;
	ТэгРежимОбработкиКМ = ДАННЫЕ_JSON("processingMode", 0); //Режим обработки кода товара (тег 2102)
	
	markingCode = "{ " + ТэгКодМаркировки + ", " + ТэгРежимОбработкиКМ + ", " + ТэгПланируемыйСтатус + " }";
}
ELSE
{
	IF (TYPE ("_ККТПЕРЕДАВАТЬПОЛНЫЙКОДМАРКИРОВКИ") == "U")
		_ККТПЕРЕДАВАТЬПОЛНЫЙКОДМАРКИРОВКИ = false; //признак необходимости передавать весь код маркировки в составе реквизитов чека
		
	ШтрихкодМаркировкиДляЧека = ШКМарки;
		
	IF ( _ККТПЕРЕДАВАТЬПОЛНЫЙКОДМАРКИРОВКИ == false	)
	{
		ДлинаКодаМаркировки = 0;
		gtin = "";
		serial = "";
		ДлинаКодаМаркировки = ФР.ПолучитьДлиннуШтрихкодаМаркировки(ШКМарки, КомандыЧека.marktype, gtin, serial);
		
		IF ( ДлинаКодаМаркировки > 0 )
			ШтрихкодМаркировкиДляЧека = LEFT( ШКМарки, ДлинаКодаМаркировки );
	}
							
	markingCode = ФР.XMLTRANS( ALLTRIM( ШтрихкодМаркировкиДляЧека ) );
}
	
RETURN markingCode;
