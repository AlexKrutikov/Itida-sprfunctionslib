/*
{
    "sessionKey": "CAC1A797-6A48-474A-A08E-72A8CD3AEFE2",
    "command": "AddGoods",
    "nomenclatureCode": "",
    "markingCode": "RE0EMVx0Fl5NNVVFZTI9IUxZS3k5OTFFRTA1",
    "mcInfo": {
        "mc": "MDEwMTIzNDU2Nzg5MDEyMzIxTSw3YUwwSkRHYkpDV2EdOTE4MDhCHTkyQ3VFMmI0d0JoUHY5WGVvQlFERXV4OXdPS2VOUjR2ZjRJK3EvUWJocXpoUkd5WVF5bWtrcGd0QVpVdFBIbGZwMFRIR1ZONmkrRDhaeFpRY2JUbnZFTWc9PQ==",
        "ean": "4603928506843",
        "processingMode": 0,
        "plannedStatus": 2,
        "part": {
            "numerator": 2,
            "denominator": 5
        }
    },
    "productName": "Товар 1",
    "qty": 10000,
    "measureUnit": 0,
    "section": 2,
    "taxCode": 6,
    "paymentFormCode": 4,
    "productTypeCode": 1,
    "countryOfOrigin": "051",
    "customsDeclaration": "11 / 141117 / 0004455",
    "additionalAttribute": "",
    "price": 3250,
    "sum": 3134,
    "exciseAmount": 150,
    "addInfo": "Текст с доп.информацией",
    "agent": {
        "code": 3,
        "payingOp": "Операция платежного агента",
        "payingPhone": [" + 79499372501", " + 79499387645"],
        "transfName": "Наименование оператора перевода",
        "transfINN": "4239017922",
        "transfAddress": "г.Москва, ул.Инженерная, 	д.15",
        "transfPhone": [" + 79499387465"],
        "operatorPhone": [" + 79494098744"],
        "supplierPhone": [" + 79490389306", " + 79497362081"],
        "supplierINN": "4259017825",
        "supplierName": "Наименование поставщика"
    }
}
*/

IF (TYPE ("_ВЫВОДИТЬПРИЗНАКМАРКИРОВКИВБУМАЖНОМЧЕКЕ") == "U")
	_ВЫВОДИТЬПРИЗНАКМАРКИРОВКИВБУМАЖНОМЧЕКЕ = false;  //признак необходимости выводить букву [М] для товарной позиции в чеке средствами профиля. По умолчанию отключено (значение false),
													//т.к. ожидается что буква [М] будет выводиться средствами прошивки
//СуммаПозиции = ROUND (КомандыЧека.quantity*КомандыЧека.price - КомандыЧека.discountvalue, 2);
//СуммаПозиции = ROUND( КомандыЧека.summa - КомандыЧека.discountvalue, 2);
СуммаПозиции 		= ROUND( КомандыЧека.summa, 2);
СуммаСкидкиПозиции	= КомандыЧека.discountvalue;
ЦенаУчетная 		= КомандыЧека._price_u;
ЦенаПродажиПозиции 	= КомандыЧека.price;
КоличествоТовара	= КомандыЧека.quantity;

НаименованиеТовара	= LEFT( ФР.XMLTRANS( ЕСЛИ(_ВЫВОДИТЬПРИЗНАКМАРКИРОВКИВБУМАЖНОМЧЕКЕ == true AND !ПУСТО( КомандыЧека.markbc ), "(М) ","") + КомандыЧека.name ), 128);

IF ( ТИП( "_ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА" ) == "U" )
	_ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА = true;
	
IF ( _ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА AND ЦенаУчетная == 0 )
	СуммаСкидкиПозиции = 0;
ELSE IF ( !_ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА AND ЦенаУчетная == 0 )
	ЦенаПродажиПозиции = ЦенаУчетная;
	
//константа. отвечающая за необходимость скрывать все наценки
IF (TYPE ("_ФРСКРЫВАТЬВСЕНАЦЕНКИ") == "U")
	_ФРСКРЫВАТЬВСЕНАЦЕНКИ = true;
		
IF (_ФРСКРЫВАТЬВСЕНАЦЕНКИ == true)
	СуммаСкидкиПозиции = 0;
	
/*
//для ККТ на 5й платформе цена позиции должна указываться уже со скидками
ЭтоПлатформа5 = VAL( ЗАПРОС("SELECT value FROM param_ex WHERE param = 'ATOLKKTPLATFORM5" + ALLTRIM(КОДОБОРУДОВАНИЯ) + "'") ) == 1;
IF (ЭтоПлатформа5)
{*/
	//09.03.2021 - изменение алгоритма пробития скидок на единый для всех платформ ККТ.
	ЦенаПродажиПозиции = ROUND(СуммаПозиции/ЕСЛИ(КоличествоТовара==0,1,КоличествоТовара), 2);
//}

IF ( ВСЕГОКРЕДИТ > 0 )
{
	IF ( ВСЕГОКРЕДИТ < СуммаЧека )
	{
		PaymentMode		= 5; //частичный расчет и кредит
	}
	ELSE
	{
		PaymentMode		= 6; //передача в кредит
	}
}
ELSE
{
	PaymentMode		= КомандыЧека.rvariant;
}

IF ( ПУСТО( PaymentMode ) )
	PaymentMode = 4; //полный расчет
	
			
// Разбор списка марок позиции
КоличествоМарок = 0;
ШтрихКодМаркировки = КомандыЧека.markbc;
IF ( !ПУСТО( ШтрихКодМаркировки ) )
{
	IF ( VAL( КомандыЧека.marktype ) <> 0 )
	{	
		
		РазделительМарок 	= "|";
		НомерСлова			= 1;
		ШтрихКодМаркировки	= РазделительМарок + ШтрихКодМаркировки;
		Марка				= ПОЛУЧИТЬСЛОВО( ШтрихКодМаркировки, РазделительМарок, НомерСлова );
			
		//подсчет количества разделителей в строке для определения количества слов
		WHILE ( !ПУСТО( Марка ) )
		{
			//обычные штрикоды пропускаем
			IF ( LEN( ALLTRIM( Марка ) ) > 13 )
			{
				КоличествоМарок++;
				Марки[ КоличествоМарок ] = Марка;					
			}			
			НомерСлова++;
			Марка			= ПОЛУЧИТЬСЛОВО( ШтрихКодМаркировки, РазделительМарок, НомерСлова );
		}		
	}
}
//\\конец разбора списка марок

КоэффициентКоличества = 10000;
КоэффициентСумм = 100;
//если есть более одной марки табачной продукции, то разделим строки с марками на отдельные строки чека
IF ( КоличествоМарок >= 1 )
{
	НомерМарки	= 1;
	//Цена			= СуммаПозиции/ЕСЛИ(КоличествоТовара==0,1,КоличествоТовара); //цена за единицу позиции
	//ЦенаПродажиПозиции = Цена;
	WHILE ( НомерМарки <= КоличествоМарок )
	{
		ШКМарки 		= Марки[ НомерМарки ];
		
		IF (ВерсияФФД == "1.2")
		{
			//РезультатПроверкиКМ = КомандыЧека.kmcheckresult;
			ВЫБРАТЬКОНТЕКСТ( "РезультатыОбработкиКМ" );
			ПЕРЕЙТИВНАЧАЛО( "РезультатыОбработкиКМ" );
			НАШЛИ			= false;
			
			WHILE ( !КОНЕЦКОНТЕКСТА( "РезультатыОбработкиКМ" ) && !НАШЛИ )
			{
				Нашли		= ALLTRIM( РезультатыОбработкиКМ.Штрихкод ) == ALLTRIM( ШКМарки );
				IF ( !НАШЛИ ) ПРОПУСТИТЬ( 1, "РезультатыОбработкиКМ" );
			}
			IF (НАШЛИ)
				РезультатПроверкиКМ = РезультатыОбработкиКМ.Результат;
				
			ВЫБРАТЬКОНТЕКСТ( "КомандыЧека" );
		}
		
		НомерМарки++;
		Количество		= 1; 
		Сумма			= ЦенаПродажиПозиции;
		СуммаСкидкиПозиции = 0; //скидки в случае разделения позиции не выводим
		
		
		IF (ВерсияФФД == "1.2")
		{
			ТекстПозицииЧека = "{ ""sessionKey"": """ + _МАССИВКЛЮЧЕЙФР[ VAL( ФР.КОДОБОРУДОВАНИЯ() ) ] + """,	""command"": ""AddGoods"", ""mcInfo"": " + ФР.МЕРКУРИЙФР_ТекстМаркировки() + ", ""productName"": """ + НаименованиеТовара +
			""", ""qty"": " + STR( Количество * КоэффициентКоличества, 16, 0) + ", ""section"": " + КомандыЧека.department + ",	""taxCode"": " + КомандыЧека.kodn + ", ""paymentFormCode"": " + PaymentMode + 
			", ""productTypeCode"": " + КомандыЧека.rsubject + ", ""price"": " + STR( ЦенаПродажиПозиции * КоэффициентСумм, 16, 0 ) + ", ""sum"": " + STR( Сумма * КоэффициентСумм, 16, 0 ) + " }";
		}
		ELSE
		{
			ТекстПозицииЧека = "{ ""sessionKey"": """ + _МАССИВКЛЮЧЕЙФР[ VAL( ФР.КОДОБОРУДОВАНИЯ() ) ] + """,	""command"": ""AddGoods"", ""nomenclatureCode"": """ + ФР.МЕРКУРИЙФР_ТекстМаркировки() + """, ""productName"": """ + НаименованиеТовара +
			""", ""qty"": " + STR( Количество * КоэффициентКоличества, 16, 0) + ", ""section"": " + КомандыЧека.department + ",	""taxCode"": " + КомандыЧека.kodn + ", ""paymentFormCode"": " + PaymentMode + 
			", ""productTypeCode"": " + КомандыЧека.rsubject + ", ""price"": " + STR( ЦенаПродажиПозиции * КоэффициентСумм, 16, 0 ) + ", ""sum"": " + STR( Сумма * КоэффициентСумм, 16, 0 ) + " }";
		}
		
		//регистрируем позицию в чеке
		ОТВЕТ = "";
		СтрокаЗарегистрированаВЧеке = ФР.МЕРКУРИЙФР_HTTPPOST(ФР.МЕРКУРИЙФР_АДРЕССЕРВЕРА(), "/api.json", ТекстПозицииЧека, "", @ОТВЕТ);
		IF ( !СтрокаЗарегистрированаВЧеке )
			RETURN false;
		
		//уменьшим общее количество товара и сумму для случая когда в одной строке будет объединено несколько позиций с марками и без них
		//количество единиц без марок будут пробиты отдельной строкой
		КоличествоТовара -= Количество;
		СуммаПозиции -= Сумма;		
	}
}

IF ( КоличествоТовара > 0 )				
{
	
	ТекстПозицииЧека = "{ ""sessionKey"": """ + _МАССИВКЛЮЧЕЙФР[ VAL( ФР.КОДОБОРУДОВАНИЯ() ) ] + """,	""command"": ""AddGoods"", ""productName"": """ + НаименованиеТовара + """, ""qty"": " + STR( КоличествоТовара * КоэффициентКоличества, 16, 0) +
		", ""section"": " + КомандыЧека.department + ",	""taxCode"": " + КомандыЧека.kodn + ", ""paymentFormCode"": " + PaymentMode + ", ""productTypeCode"": " + КомандыЧека.rsubject + ", ""price"": " + 
		STR( ЦенаПродажиПозиции * КоэффициентСумм, 16, 0 ) + ", ""sum"": " + STR( СуммаПозиции * КоэффициентСумм, 16, 0 ) + " }";
		
	//регистрируем позицию в чеке
	ОТВЕТ = "";
	СтрокаЗарегистрированаВЧеке = ФР.МЕРКУРИЙФР_HTTPPOST(ФР.МЕРКУРИЙФР_АДРЕССЕРВЕРА(), "/api.json", ТекстПозицииЧека, "", @ОТВЕТ);
	IF ( !СтрокаЗарегистрированаВЧеке )
		RETURN false;
}

RETURN true;
