IF (TYPE("РАЗРЕШИТЬОТКЛЮЧАТЬККТ") == "U")
	РАЗРЕШИТЬОТКЛЮЧАТЬККТ = true;
	
//*обнуление переменных
РезультатЛокальнойПроверкиКМ = "";
ДанныеЛокальнойПроверки = "";
КМПроверенФН = "";
КМРезультатПроверкиФН = "";
КМПричинаОшибкиПроверкиФН = "";
ДанныеФоновойПроверки = "";
ДанныеОнлайнПроверки = "";
РезультатФоновойПроверкиГотов = false;
ФоноваяПроверкаКМВыполнена = false;
РезультатОбработкиСведенийОТоваре = "";
ИСМСведенияОТоваре = "";
КодОбработкиЗапроса = "";
ЗапросОКМОтправлен = false;
//\	
РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = "";

СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ = "";
СимволПереноса = CHR(13) + CHR(10);
	
//подключаемся к ККТ
IF ( !ФР.АТОЛДТО10_ОткрытьФР( КОДОБОРУДОВАНИЯ, "Проверка массива КМ" ) ) RETURN false;

ТипЗадания		= ДАННЫЕ_JSON("type", "beginMarkingCodeValidation");

ТипОперацииЧека = ПЕРЕМЕННАЯ("ОПЕРАЦИЯ", "ПРОДАЖА");

JSONПроверяемыйКМ	= "";
ТэгТипКодаМаркировки = ДАННЫЕ_JSON("imcType", "auto"); //определить тип КМ автоматически;
ТэгКодМаркировки = """imc"": """ + ПЕРЕКОДИРОВАТЬ(ШТРИХКОДМАРКИРОВКИ,"","BASE64") + """"; //base64-представление значения кода маркировки (тег 2000)
ТэгПланируемыйСтатус = ДАННЫЕ_JSON("itemEstimatedStatus", ЕСЛИ( ТипОперацииЧека == "ПРОДАЖА" ИЛИ ТипОперацииЧека == 1, "itemPieceSold", "itemPieceReturn") ); //1 - itemPieceSold - штучный товар, реализован;
																			//2 - itemDryForSale - мерный товар, в стадии реализации;
																			//3 - itemPieceReturn - штучный товар, возвращен;
																			//4 - itemDryReturn - часть товара, возвращена;
																			//255 - itemStatusUnchanged - статус товара, не изменился;
ТэгРежимОбработкиКМ = ДАННЫЕ_JSON("imcModeProcessing", 0); //Режим обработки кода товара (тег 2102)
//ТэгДробноеКоличествоТовара = ДАННЫЕ_JSON("itemFractionalAmount", "1/5"); //Дробное количество маркированного товара (тег 1291). Используется только для КМ в позициях без проверки в чеке
//ТэгКоличествоТовара = ДАННЫЕ_JSON("itemQuantity", КоличествоТовара); //Количество товара (тег 1023)
//ТэгМераТовара = ДАННЫЕ_JSON("itemUnits", "piece"); //Мера количества товара (тег 2108). Используется только для проверки КМ
НеПосылатьЗапросНаСервер = ДАННЫЕ_JSON("notSendToServer", true); //не посылать запрос на сервер ИСМ

//JSONПроверяемыйКМ += "{" + ТэгТипКодаМаркировки + "," + ТэгКодМаркировки + "," + ТэгПланируемыйСтатус + "," + ТэгРежимОбработкиКМ + "," + ТэгКоличествоТовара + "," + ТэгМераТовара + "}";
JSONПроверяемыйКМ += "{" + ТэгТипКодаМаркировки + "," + ТэгКодМаркировки + "," + ТэгПланируемыйСтатус + "," + ТэгРежимОбработкиКМ + "," + НеПосылатьЗапросНаСервер + "}";

//формируем задание
ТекстЗадания = "{" + ТипЗадания + "," + """params"":" + JSONПроверяемыйКМ + "}";

fptr.setParam( fptr.LIBFPTR_PARAM_JSON_DATA, ТекстЗадания );
fptr.processJson( );


IF ( !ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки("Проверка КМ", false) )
{
	ФР.АТОЛДТО10_ПрерватьПроверкуКМ();
	ФР.АТОЛДТО10_ОтключитьККТ();	
	RETURN false;
}


//ОБРАБОТКА РЕЗУЛЬТАТА ЗАДАНИЯ И ЗАПИСЬ В КОНТЕКСТ ПОЗИЦИЙ ЧЕКА
РезультатЛокальнойПроверкиКМ	= fptr.getParamString( fptr.LIBFPTR_PARAM_JSON_DATA );

//результат локальной проверки в ФН
ДанныеЛокальнойПроверки = ПОЛЕ_JSON(РезультатЛокальнойПроверкиКМ, "offlineValidation", "" );

КМПроверенФН = ПОЛЕ_JSON(ДанныеЛокальнойПроверки, "fmCheck", false);
КМРезультатПроверкиФН = ПОЛЕ_JSON(ДанныеЛокальнойПроверки, "fmCheckResult", false);
КМПричинаОшибкиПроверкиФН = ПОЛЕ_JSON(ДанныеЛокальнойПроверки, "fmCheckErrorReason", false);

РезультатПодтвержденияКМ = ФР.АТОЛДТО10_ПодтвердитьРеализациюКМ();
//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ПОЛЕ_JSON(РезультатПодтвержденияКМ, "itemInfoCheckResult", ""); //2106
ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );

RETURN true;
