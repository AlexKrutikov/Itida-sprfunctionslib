IF (TYPE("РАЗРЕШИТЬОТКЛЮЧАТЬККТ") == "U")
	РАЗРЕШИТЬОТКЛЮЧАТЬККТ = true;
	
//*обнуление переменных
РезультатЛокальнойПроверкиКМ = "";
ДанныеЛокальнойПроверки = "";
КМПроверенФН = "";
КМРезультатПроверкиФН = "";
КМПричинаОшибкиПроверкиФН = "";
ДанныеФоновойПроверки = "";
ДанныеОнлайнПроверки = "";
РезультатФоновойПроверкиГотов = false;
ФоноваяПроверкаКМВыполнена = false;
РезультатОбработкиСведенийОТоваре = "";
ИСМСведенияОТоваре = "";
КодОбработкиЗапроса = "";
ЗапросОКМОтправлен = false;
ККТАвтономно = false;
//\	
РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = "";

СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ = "";
СимволПереноса = CHR(13) + CHR(10);

КоэффициентКоличества = 10000;
КоличествоТовара = 1;

//подключаемся к ККТ
IF ( !ФР.МЕРКУРИЙФР_ОткрытьСессию( КОДОБОРУДОВАНИЯ, "Проверка КМ" ) ) RETURN false;

Команда = ДАННЫЕ_JSON("command", "CheckMarkingCode");

ТипОперацииЧека = ПЕРЕМЕННАЯ("ОПЕРАЦИЯ", "ПРОДАЖА");

JSONПроверяемыйКМ	= "";
ТэгКодМаркировки = """mc"": """ + ПЕРЕКОДИРОВАТЬ(ШТРИХКОДМАРКИРОВКИ,"","BASE64") + """"; //base64-представление значения кода маркировки (тег 2000)
ТэгПланируемыйСтатус = ДАННЫЕ_JSON("plannedStatus", ЕСЛИ( ТипОперацииЧека == "ПРОДАЖА" ИЛИ ТипОперацииЧека == 1, 1, 3) ); 
																			//1 - штучный товар, реализован;
																			//2 - мерный товар, в стадии реализации;
																			//3 - штучный товар, возвращен;
																			//4 - часть товара мерного, возвращена;
																			//255 - itemStatusUnchanged - статус товара, не изменился;
ТэгРежимОбработкиКМ = ДАННЫЕ_JSON("processingMode", 0); //Режим обработки кода товара (тег 2102)
ТэгКоличествоТовара = ДАННЫЕ_JSON("qty", КоличествоТовара*КоэффициентКоличества); //Количество товара (тег 1023)
ТэгМераТовара = ДАННЫЕ_JSON("measureUnit", 0); //Мера количества товара (тег 2108). Используется только для проверки КМ
Таймаут = ДАННЫЕ_JSON("timeout", 15); //максимальное время ожидания проверки кода маркировки ОИСМ в секундах. При отсутствии ключа принимается значение по умолчанию – 30
//ТэгДробноеКоличествоТовара = """part"": { " + ДАННЫЕ_JSON("numerator", 1) + ", " + ДАННЫЕ_JSON("denominator", 5) + " }"; //дробное количество маркированного товара, выраженное в виде правильной дроби. 
																														//Используется только при продаже маркированного товара по частям, 
																														//при этом ключ plannedStatus должен иметь значение 2 или 4, ключ qty – 1, ключ measureUnit – 0 (ФФД: тег 1291).
																														
																														
//ТекстЗапроса = "{ ""sessionKey"": """ + _МАССИВКЛЮЧЕЙФР[ VAL( ФР.КОДОБОРУДОВАНИЯ() ) ] + """, " + Команда + ", " + ТэгКодМаркировки + ", " + ТэгПланируемыйСтатус + 
//	", " + ТэгКоличествоТовара + ", " + ТэгМераТовара + ", " + ТэгРежимОбработкиКМ + ", " + Таймаут + ", " + ТэгДробноеКоличествоТовара + " }";
ТекстЗапроса = "{ ""sessionKey"": """ + _МАССИВКЛЮЧЕЙФР[ VAL( ФР.КОДОБОРУДОВАНИЯ() ) ] + """, " + Команда + ", " + ТэгКодМаркировки + ", " + ТэгПланируемыйСтатус + 
	", " + ТэгКоличествоТовара + ", " + ТэгМераТовара + ", " + ТэгРежимОбработкиКМ + ", " + Таймаут + " }";


ОТВЕТ = "";


IF ( !ФР.МЕРКУРИЙФР_HTTPPOST( ФР.МЕРКУРИЙФР_АДРЕССЕРВЕРА(), "/api.json", ТекстЗапроса, "", @ОТВЕТ ) )
{
	ФР.МЕРКУРИЙФР_ПрерватьПроверкуКМ();
	ФР.МЕРКУРИЙФР_ЗакрытьСессию( КОДОБОРУДОВАНИЯ, "Проверка КМ" );
	RETURN false;
}
ELSE
{
	//ОБРАБОТКА РЕЗУЛЬТАТА ЗАДАНИЯ И ЗАПИСЬ В КОНТЕКСТ ПОЗИЦИЙ ЧЕКА
	IF ( !ПУСТО( ОТВЕТ) )
	{
		КодОшибки = VAL( ПОЛЕ_JSON( ОТВЕТ, "result", 0 ) );
		ОписаниеОшибки = VAL( ПОЛЕ_JSON( ОТВЕТ, "description", "" ) );
		
		//сперва обработаем драйверные ошибки, т.к. могли не соединиться с ККТ или с сервером ИСМ, а так же получить прочие ошибки проверки
		IF (VAL(КодОшибки) <> 0)
		{	
			ФР.МЕРКУРИЙФР_ПрерватьПроверкуКМ();
			СООБЩЕНИЕ( "Ошибка " + КодОшибки + " при роверке КМ" + СимволПереноса + "Описание ошибки: " + ОписаниеОшибки, "Ошибка проверки КМ" );		
			ФР.МЕРКУРИЙФР_ЗакрытьСессию( КОДОБОРУДОВАНИЯ, "Проверка КМ" );
			RETURN false;
		}
		
		//объект, содержащий информацию о результатах проверки кода маркировки в фискальном накопителе
		РезультатПроверкиВФН = VAL( ПОЛЕ_JSON( ОТВЕТ, "fnCheck", "" ) );
		КодРезультатаПроверкиКМ = VAL( ПОЛЕ_JSON( РезультатПроверкиВФН, "checkResult", "" ) );
		КМВалидный = VAL( ПОЛЕ_JSON( РезультатПроверкиВФН, "isValid", false ) ); //может отсутствовать, если проверка в ФН не выполнена
		//информация о коде маркировки, сформированная ККТ
		ИнфоОКМ = VAL( ПОЛЕ_JSON( ОТВЕТ, "mcInfo", "" ) );
		КодТипаКМ = VAL( ПОЛЕ_JSON( ИнфоОКМ, "mcType", "" ) );
		ИдентификаторТовара = VAL( ПОЛЕ_JSON( ИнфоОКМ, "mcGoodsID", "" ) ); //может отсутствовать, если КМ не был идентифицирован
		
		//признак того, что ККТ зарегистрирована для работы в автономном режиме и онлайн проверка КМ производиться не будет
		ККТАвтономно = VAL( ПОЛЕ_JSON( ОТВЕТ, "isOfflineMode", false ) );		
		ЗапросОКМОтправлен = ККТАвтономно <> true AND ККТАвтономно <> "true";
	}			
}

IF (ЗапросОКМОтправлен)
{
	//получаем результат фоновой проверки
	ДанныеФоновойПроверки	= ФР.МЕРКУРИЙФР_ПолучитьРезультатФоновойПроверки(3000);
}
IF ( !ПУСТО( ДанныеФоновойПроверки ) )
{
	РезультатФоновойПроверкиГотов = ПОЛЕ_JSON(ДанныеФоновойПроверки, "isCompleted", false);
	ФоноваяПроверкаКМВыполнена = (РезультатФоновойПроверкиГотов == true) OR (РезультатФоновойПроверкиГотов == "true");
}

IF ( !ФоноваяПроверкаКМВыполнена AND !ЗапросОКМОтправлен )
{
	ОТВЕТПОЛЬЗОВАТЕЛЯ = 4;
	WHILE ( ОТВЕТПОЛЬЗОВАТЕЛЯ == 4 AND !ФоноваяПроверкаКМВыполнена )
	{
		ДанныеФоновойПроверки = ФР.МЕРКУРИЙФР_ПолучитьРезультатФоновойПроверки(3000);
		IF ( !ПУСТО( ДанныеФоновойПроверки ) )
		{
			РезультатФоновойПроверкиГотов = ПОЛЕ_JSON(ДанныеФоновойПроверки, "isCompleted", false);
			ФоноваяПроверкаКМВыполнена = (РезультатФоновойПроверкиГотов == true) OR (РезультатФоновойПроверкиГотов == "true");
		}
		ОТВЕТПОЛЬЗОВАТЕЛЯ = СООБЩЕНИЕ("Результат проверки КМ в ИСМ не получен. Повторить проверку?", "Проверка КМ", 5);
	}
	
	IF ( ОТВЕТПОЛЬЗОВАТЕЛЯ == 2 )
	{
		ФР.МЕРКУРИЙФР_ПрерватьПроверкуКМ();
		ФР.МЕРКУРИЙФР_ЗакрытьСессию( КОДОБОРУДОВАНИЯ, "Проверка КМ" );
		RETURN false;
	}
}

IF ( ФоноваяПроверкаКМВыполнена )
{
	//получим результат выполнения проверки	
	
	ДанныеОнлайнПроверки = ПОЛЕ_JSON(ДанныеФоновойПроверки, "onlineValidation", "");
	КодОбработкиЗапроса = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "markOperatorResponseResult", ""); //2105		
	ИСМСведенияОТоваре = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "itemInfoCheckResult", ""); //2106	
	//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
	РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ИСМСведенияОТоваре;
	
	//если код обработки запроса не равен "correct", а равен "incorrect" или "unrecognized",
	//то последующие реквизиты могут не содержаться в ответе, поэтому читать их не будем	
	ИСМСведенияОСтатусеТовара = "";
	IF (КодОбработкиЗапроса == "correct")
	{
		//запрос имеет корректный формат, в том числе корректный формат кода маркировки;
		
		РезультатыОбработкиЗапросаИСМ = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "markOperatorResponse", ""); //2005
		ИСМРезультатПроверкиКПКМ = ПОЛЕ_JSON(РезультатыОбработкиЗапросаИСМ, "responseStatus", "") == "true";
		ИСМСтатусТовараКорректен = ПОЛЕ_JSON(РезультатыОбработкиЗапросаИСМ, "itemStatusCheck", "") == "true";
				
		ИСМТипКМ = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "imcType", ""); //2100
		ИСМКМТовара = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "imcBarcode", ""); //2101
		ИСМРежимОбработкиКМ = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "imcModeProcessing", ""); //2102
		ИСМСведенияОСтатусеТовара = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "markOperatorItemStatus", ""); //2109		
	}
	//УДАЛИТЬКОНТЕКСТ("ДанныеФоновойПроверки");
	
	//все данные прочитали из ответа, теперь проверим и обработаем значения
	IF (КодОбработкиЗапроса == "correct" AND ИСМСведенияОСтатусеТовара == "itemEstimatedStatusCorrect")
	{
		РезультатПодтвержденияКМ = ФР.АТОЛДТО10_ПодтвердитьРеализациюКМ();
		//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
		РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ПОЛЕ_JSON(РезультатПодтвержденияКМ, "itemInfoCheckResult", ""); //2106
		ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
		RETURN true;
	}
	ELSE IF (КодОбработкиЗапроса == "incorrect" OR КодОбработкиЗапроса == "unrecognized")
	{
		IF ( !ПУСТО( НАИМЕНОВАНИЕТОВАРА ) )
			СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Товар: " + НАИМЕНОВАНИЕТОВАРА + СимволПереноса + СимволПереноса;
			
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результаты онлайн проверки: " + СимволПереноса;
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
		
		IF (КодОбработкиЗапроса == "incorrect")
			СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Запрос имеет некорректный формат." + СимволПереноса; 
		ELSE
			СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Указанный в запросе код маркировки имеет некорректный формат." + СимволПереноса; 
	}
	
	IF ( ЗапросОКМОтправлен )
	{
		//обработаем сведения о товаре
		РезультатОбработкиСведенийОТоваре = ФР.АТОЛДТО10_ОбработатьСведенияОТоваре(ИСМСведенияОТоваре);
		
		//СООБЩЕНИЕ("РезультатОбработкиСведенийОТоваре = " + РезультатОбработкиСведенийОТоваре + CHR(13) + CHR(10) + "ИСМСведенияОТоваре = " + ИСМСведенияОТоваре);
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результат проверки товара: " + РезультатОбработкиСведенийОТоваре + СимволПереноса;	
	}
}

//если фоновая проверка не выполнена,
IF ( ЗапросОКМОтправлен )
{
	//но запрос о КМ отправлен в ИСМ (значит ККТ не в автономном режиме и отправляет данные онлайн) и не дождались ответа , то прерываем проверку
	IF ( ЗапросОКМОтправлен )
		ФР.АТОЛДТО10_ПрерватьПроверкуКМ();
}

//если проверка выполнена, но запрос не отправлялся, то ККТ в автономном режиме.
//здесь по реквизиту "ecrStandAloneFlag" объекта "itemInfoCheckResult" не проверяем, потому как по данным онлайн проверки, которой в автономной ККТ не было, ориентироваться нельзя
//так же проверяем ситуации когда запрос отправлен, но не дождались результатов проверки
//В перечисленных случаях выводим только данные локальной проверки
IF ( ( ФоноваяПроверкаКМВыполнена AND !ЗапросОКМОтправлен ) OR ( !ФоноваяПроверкаКМВыполнена AND ЗапросОКМОтправлен ) )
{
	IF ( !ПУСТО( НАИМЕНОВАНИЕТОВАРА ) )
			СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Товар: " + НАИМЕНОВАНИЕТОВАРА + СимволПереноса + СимволПереноса;
			
	ТекстПричина = "";
	IF ( КМПричинаОшибкиПроверкиФН == "checked")
		ТекстПричина = "КМ успешно проверен в ФН";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "typeIncorrect")
		ТекстПричина = "КМ данного типа не подлежит проверке в ФН";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "noKeys")
		ТекстПричина = "ФН не содержит ключи проверки кода проверки этого КМ";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "noGS1")
		ТекстПричина = "Проверка невозможна, так как остутствуют идентификаторы применения GS1 91 и/или 92 или их формат неверный";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "other")
		ТекстПричина = "Проверка в ФН невозможна по неизвестным причинам";

	//если проводилась только локальная проверка без отправки запроса в ИСМ и завершилась успешно, то добавляем КМ в чек без подтверждения
	IF ( КМПричинаОшибкиПроверкиФН == "checked" AND ФоноваяПроверкаКМВыполнена AND !ЗапросОКМОтправлен )
	{
		РезультатПодтвержденияКМ = ФР.АТОЛДТО10_ПодтвердитьРеализациюКМ();
		//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
		РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ПОЛЕ_JSON(РезультатПодтвержденияКМ, "itemInfoCheckResult", ""); //2106
		ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
		RETURN true;
	}
	
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результаты локальной проверки: " + СимволПереноса;
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Проверка КМ в ФН " + ЕСЛИ(КМПроверенФН == true OR КМПроверенФН == "true", "выполнена","не выполнена") + СимволПереноса;
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результат проверки КМ в ФН - " + ЕСЛИ(КМРезультатПроверкиФН == true OR КМРезультатПроверкиФН == "true", "положительный","отрицательный") + СимволПереноса;
	IF ( !ПУСТО( ТекстПричина ) )
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Причина ошибки: " + ТекстПричина + СимволПереноса;
	
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
	
	IF ( ФоноваяПроверкаКМВыполнена AND !ЗапросОКМОтправлен )
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "ККТ работает в автономном режиме" + СимволПереноса;
	ELSE
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Онлайн проверка КМ не выполнена" + СимволПереноса;
}

IF ( !ФоноваяПроверкаКМВыполнена AND !ЗапросОКМОтправлен )
{
	ФР.АТОЛДТО10_ПрерватьПроверкуКМ();
	RETURN false;
}

СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Добавить КМ в чек?";
Ответ = СООБЩЕНИЕ(СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ, "Проверка КМ", 4);
	
//если нажали нет, закрываем соединение с ККТ и возвращаем false
IF (Ответ == 7 )
{
	ФР.АТОЛДТО10_ОтказатьсяОтРеализацииКМ();
	ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
	RETURN false;
}

РезультатПодтвержденияКМ = ФР.АТОЛДТО10_ПодтвердитьРеализациюКМ();
//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ПОЛЕ_JSON(РезультатПодтвержденияКМ, "itemInfoCheckResult", ""); //2106

ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
RETURN true;
