//1. ОБРАБОТАЕМ ВАРИАНТ ПРОБИТИЯ ИЗ АВАНСА ПОЛУЧЕННОГО (для электронных стредств платежа)

IF ( @КодДокумента == "014" )
{
	//Для АВАНСА ПОЛУЧЕННОГО будем обрабатывать следующие документы и пробиваемые операции на основании их:
	//Расходная накладная - АВАНС ПОЛУЧЕННЫЙ: Признак расчета: "ПРИХОД". Способ расчета: "полный расчет", "передача в кредит" или "оплата кредита" (товар и услуги).
	//Счет на оплату исходящий - АВАНС ПОЛУЧЕННЫЙ: Признак расчета: "ПРИХОД". Способ расчета: Предварительная оплата частичная или полная
	//Заказ от покупателя - АВАНС ПОЛУЧЕННЫЙ: Признак расчета: "ПРИХОД". Способ расчета: Предварительная оплата частичная или полная
	//Акт приема/передачи услуг (исходящий) - АВАНС ПОЛУЧЕННЫЙ: Признак расчета: "ПРИХОД". Способ расчета: "полный расчет", "передача в кредит" или "оплата кредита" (услуги)
	//Возврат товаров поставщику - АВАНС ПОЛУЧЕННЫЙ: Признак расчета: "ВОЗВРАТ РАСХОДА". Способ расчета: "полный расчет", "передача в кредит" или "оплата кредита" (товары и услуги)
	//одинокий АВАНС ПОЛУЧЕННЫЙ: Признак расчета: "ПРИХОД". Способ расчета "аванс/предоплата" (прием аванса)

	//Определение переменных
	IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
	{
		ФР.АТОЛДТО10_ИнициализацияФР(КодОборудования, НомерУстройства);
		ФР.АТОЛДТО10_СоответствиеПРСР();
	}
	ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
	{
		ФР.МЕРКУРИЙФР_ИнициализацияФР(КодОборудования, НомерУстройства);
		ФР.МЕРКУРИЙФР_СоответствиеПРСР();
	}
	ФР.КонстантыДляЧековИзДокументов( );
	IF ( !ФР.ПроверкаДокументаПередПечатьюЧека( "014", ИДДокумента ) ) RETURN false;



	//1. Проверим, введен ли данный АВАНС ПОЛУЧЕННЫЙ на основании Расходной накладной или Акта сдачи/приемки услуг (исходящий) (обработка такой связки всегда в приоритете, 
	//т.к. это означает либо факт получения денежных стредств при отгрузке товаров (факту оказания услуг) или оплате кредита за отгруженный ранее товар (оказанные услуги)
	ИДНакладной	= ЗАПРОС( "SELECT cr_ic FROM crosslink WHERE code= '014' AND ic = " + ИДДокумента + " AND account_='001' AND cr_type = '1' AND fstorno = 0" );
	КодНакладной = ЗАПРОС( "SELECT cr_code FROM crosslink WHERE code= '014' AND ic = " + ИДДокумента + " AND account_='001' AND cr_type = '1' AND fstorno = 0" );

	//проверим факт ввода данного документа на основании какого-либо документа, отличного от товарной накладной (с накладной могло быть проведено сопоставление оплаты)
	//данная проверка необходима на случай пробития чека из "предоплатного" документа
	ИДДокументаОснования	= ЗАПРОС( "SELECT ic FROM crosslink WHERE cr_code= '014' AND cr_ic = " + ИДДокумента + " AND cr_type = '0' AND fstorno = 0" );
	КодДокументаОснования	= ЗАПРОС( "SELECT code FROM crosslink WHERE cr_code = '014' AND cr_ic = " + ИДДокумента + " AND cr_type = '0' AND fstorno = 0" );	

	//сначала проверим, не изменили ли способ расчета в кассовом ордере
	IF ( ПУСТО( ИДДокументаОснования ) AND !ПУСТО( ИДНакладной ) AND ( ЭтоАванс OR ЭтоПредоплата100 OR ЭтоПредоплатаЧаст ) )
	{
		//если в кассовом ордере выбран способ расчета как Аванс или предоплата, то передадим данные по накладной в данные документа основания, 
		//а данные по накладной обнулим, чтобы обработать документ как предоплатный
		IF ( ЭтоПредоплатаЧаст ) //частичную предоплату возможно трансформировать из ПКО, сделанного на основании накладной
		{
			ИДДокументаОснования = ИДНакладной;
			КодДокументаОснования = КодНакладной;
			ИДНакладной = "";
			КодНакладной = "";
		}
		ELSE //аванс и предоплату 100% пробиваем одной строкой без привязки к сумме и товарным позициям документа основания, иначе получим ситуацию что чек будет оплачен не полностью
		{
			ИДДокументаОснования = "";
			КодДокументаОснования = "";
			ИДНакладной = "";
			КодНакладной = "";
		}
	}
	ELSE IF ( ПУСТО( ИДНакладной ) AND !ПУСТО( ИДДокументаОснования ) AND ( ЭтоАванс OR ЭтоПредоплата100 ) )
	{
		ИДДокументаОснования = "";
		КодДокументаОснования = "";
		ИДНакладной = "";
		КодНакладной = "";
	}
	//На _основании расходной накладной и вид платежа в кассовом ордере выбран: "Оплата", "полный расчет" или "оплата кредита"
	IF ( ПУСТО( ИДДокументаОснования ) AND !ПУСТО( ИДНакладной ) )
	{
		//Обработка суммы платежа, суммы накладной общей суммы оплат по накладной.
		//факты полученных ранее предоплат определяем по таблице сопоставлений документов (необходимо сопоставлять оплаты с Расходной накладной)
		ДОБАВИТЬКОНТЕКСТ("
		DECLARE @DocSale int, @DocPayment int, @SummaPayment float, @DocSaleSumma float, @SummaPaymentTotal float, @SummaPKOSalePayment float, @SummaPrepayment float, @DocSaleNumber char(20);
		SELECT @DocPayment = " + ИДДокумента + ";
		
		SELECT @DocSale = " + ИДНакладной + "
		SELECT @DocSaleSumma = (SELECT ISNULL( SUM( summa ), 0) FROM spr000 WHERE code= '" + КодНакладной + "' AND ic = @DocSale)
		SELECT @DocSaleNumber = (SELECT ndok FROM spr" + КодНакладной + " WHERE identity_column = @DocSale)
		SELECT @SummaPayment = (SELECT ISNULL( SUM( summa ), 0) FROM spr000 WHERE code= '014' AND ic = @DocPayment)
		SELECT @SummaPaymentTotal = (SELECT ISNULL( SUM( cl.summa ), 0) FROM crosslink cl
									INNER JOIN accountlist a ON a.account_ = '001' AND a.ic = cl.cr_ic AND a.code = cl.cr_code
									WHERE a.transacted = 1 AND cl.code= '" + КодНакладной + "' AND cl.ic = @DocSale AND cl.account_= '001' AND cl.cr_type = '1')
		
		SELECT @SummaPKOSalePayment = (SELECT ISNULL( SUM( summa ), 0) FROM crosslink WHERE code= '" + КодНакладной + "' AND ic = @DocSale AND account_= '001' AND cr_type = '1' AND cr_ic IN 
			(SELECT cl.cr_ic FROM crosslink cl 
			INNER JOIN spr014 s14 ON s14.identity_column = cl.cr_ic 
			INNER JOIN accountlist a ON a.account_ = '001' AND a.ic = s14.identity_column 
			WHERE a.transacted = 1 AND cl.code= '" + КодНакладной + "' AND cl.cr_code = '014' AND cl.ic = @DocSale AND cl.account_= '001' 
			AND cl.cr_type = '1' AND CHARINDEX(RTRIM(@DocSaleNumber),s14.note,0) > 0) )
		SELECT @SummaPrepayment = " + ЕСЛИ(КодНакладной=="002", "@SummaPaymentTotal - @SummaPKOSalePayment", "0") + ";
		
		SELECT @SummaPayment AS СуммаОплатыПКО, @DocSaleSumma AS СуммаНакладной, @SummaPaymentTotal AS СуммаОплатыОбщая, @SummaPKOSalePayment AS СуммаОплатыПКОПоНакладной, @SummaPrepayment AS СуммаПредоплаты","Оплаты", 1);
		СуммаПКО = Оплаты.СуммаОплатыПКО; //сумма оплаты по текущему кассовому ордеру
		СуммаНакладной = Оплаты.СуммаНакладной; //сумма расходной накладной
		СуммаОплатыОбщая = Оплаты.СуммаОплатыОбщая; //общая сумма оплат накладной (включая сопоставленные предоплаты)
		СуммаОплатыПКОПоНакладной = Оплаты.СуммаОплатыПКОПоНакладной; //сумма оплат, произведенных Приходными кассовыми ордерами, сформированными на основании Расходной накладной
		//Определение ПКО, сформированных на основании Расходной накладной происходит по реквизиту Комментарий (note) документа ПКО, на предмет вхождения в него номера Расходной накладной
		//Во избежание ошибок, поиск комментария осуществляется только среди кассовых ордеров сопоставленных с Расходной накладной.
		//(необходимо для получения информации по сумме сопоставленных предоплат)
		СуммаПредоплаты = Оплаты.СуммаПредоплаты; //сумма предоплат, полученных ранее и сопоставленных с Расходной накладной. 
		//Рассчитывается как разница между общей суммой оплат и суммой оплат, сформированных на основании накладной.
		//значения по умолчанию для признаков предмета расчета и способа расчета
		СпособРасчета = 4; //полный расчет
		ПредметРасчета = 1; //товар
		ПервыйПлатеж = false;
		ИзлишекОплаты = 0;
		//если в кассовом ордере не выбрали вид оплаты, а оставили стандартный вариант "Оплата", то рассчитываем способ расчета по старому алгоритму
		IF ( СтандартныйВидОплаты ) 
		{
			//а) Если сумма платежа по ПКО равна общей сумме оплат по накладной, то это первая оплата 
			IF ( СуммаПКО == СуммаОплатыПКОПоНакладной OR СуммаПКО == СуммаОплатыОбщая ) 
			{
				ПервыйПлатеж = true;
			}
			ELSE IF ( СуммаОплатыПКОПоНакладной == 0 AND ЭтоОплата )
			{
				ПервыйПлатеж = true;
			}
			//б) Если сумма оплаты по ПКО меньше суммы накладной, то это передача с частичной оплатой (в кредит) или оплата кредита
			//Поскольку могло быть сопоставление предоплаты с накладной, то проверяем и сумму оплат на основании накладной
			IF ( СуммаПКО <= СуммаНакладной AND !ПервыйПлатеж )
			{
				СпособРасчета = 7; //оплата кредита
				ПредметРасчета = 10; //платеж/выплата
			}
			//Если сумма оплаты ПКО меньше суммы накладной, то это передача с частичной оплатой (в кредит) 
			IF ( СуммаПКО <= СуммаНакладной AND ПервыйПлатеж )
			{
				СпособРасчета = 5; //частичный расчет и кредит
			}
			//Если Сумма оплаты по ПКО или сумма полученных предоплат и сумма ПКО больше либо равны сумме накладной, то это полный расчет
			//и тут же
			//в) Если сумма оплаты по ПКО больше или равна сумме накладной, то это передача с полной оплатой (полный расчет) (остаток пробиваем как Аванс)	
			IF ( СуммаПКО + СуммаПредоплаты >= СуммаНакладной )
			{
				СпособРасчета = 4; //полный расчет		
				ИзлишекОплаты = СуммаПКО + СуммаПредоплаты - СуммаНакладной;
			}
		}
		ELSE //если указали вид оплаты в ордере, отличный от стандартного
		{
			IF ( ЭтоОплата )
			{
				СпособРасчета = 5; //частичный расчет и кредит
			}
			ELSE IF ( ЭтоОплатаКредита )
			{
				СпособРасчета = 7; //оплата кредита
				ПредметРасчета = 10; //платеж/выплата
			}
			ELSE IF ( ЭтоПолныйРасчет )
			{
				СпособРасчета = 4; //полный расчет		
				ИзлишекОплаты = СуммаПКО + СуммаПредоплаты - СуммаНакладной;
			}		
		}
		
		//если не нужно выводить детализацию по товарным позициям при оплате кредита с распределением суммы оплаты по строкам
		IF ( _ККТ_НЕПЕЧАТАТЬДЕТАЛИЗАЦИЮПОТОВАРАМПРИОПЛАТЕКРЕДИТА AND СпособРасчета==7 )
		{
			ОснованиеПлатежа = ALLTRIM( ЗАПРОС("SELECT desc_ FROM spr014 WHERE identity_column = " + ИДДокумента) ); 
			НаименованиеПредметаРасчетаОК = "Получено от " + КонтрагентИмя + " Основание: " + ОснованиеПлатежа;
			
			//НДС
			КодНалогаАйтида	= _СТАВКАНДС_БЕЗНДС;
			//заполняем стандартными значениями
			КодНалога	= КодНалогаАйтида;
			//добавляем обобщенную строку в таблицу товаров
			ЗАПРОС ("INSERT INTO " + ИмяТаблицыТоваров + " ( npp, code, s_code, name, quantity, price, summa, rsubject, rvariant, kodn, department)
					VALUES ( 1, '', '', '" + НаименованиеПредметаРасчетаОК + "', 1, " + СуммаПКО + ", " + СуммаПКО + ", " + ПредметРасчета + ", " + СпособРасчета + ", '" + КодНалога + "', 1 )" ); 
		}
		ELSE
		{
			//на выходе получаем товары из спецификации Расходной накладной
			ЗАПРОС ("INSERT INTO " + ИмяТаблицыТоваров + " ( npp, code, s_code, name, quantity, price, summa, rsubject, rvariant, kodn, department, f_mark, marktype, markbc)
					SELECT row_number() OVER (ORDER BY RIGHT(SPACE(10) + rtrim(npp), 10)), nn, s_code, nnname, 
					" + ЕСЛИ(СпособРасчета==7,1,"kolp") + ", 
					" + ЕСЛИ(СпособРасчета==7, "summa", "cena") + ", 
					summa,
					" + ЕСЛИ(СпособРасчета==7,ПредметРасчета,"(SELECT sprres_g.rsubject FROM sprres 
					LEFT OUTER JOIN sprres_g ON sprres.group_ = sprres_g.code 
					WHERE sprres.code = CASE WHEN spec.nn = '' THEN spec.s_code ELSE spec.nn END)") + ",
					" + СпособРасчета + ",
					" + ЕСЛИ(СпособРасчета==7, "(SELECT code FROM sprkodn WHERE code = '" + _СТАВКАНДС_БЕЗНДС + "')",
					"(SELECT TOP 1 sprkod.code FROM sprkodn sprkod 
						INNER JOIN speclistkodn specn ON specn.list = sprkod.code AND specn.date <= GETDATE()
						INNER JOIN sprlistkodn sprlist ON sprlist.code = specn.code
					  WHERE sprlist.code = kodn
					  ORDER BY specn.date DESC)") + ",
					(SELECT kkm_section FROM sprres_g sprres_g
					INNER JOIN sprres sprres ON sprres.group_ = sprres_g.code
					WHERE sprres.code = CASE WHEN spec.nn <> '' THEN spec.nn ELSE spec.s_code END ),
					(SELECT f_mark FROM sprres sprres WHERE sprres.code = CASE WHEN spec.nn <> '' THEN spec.nn ELSE spec.s_code END ),
					(SELECT markgroup FROM sprres sprres WHERE sprres.code = CASE WHEN spec.nn <> '' THEN spec.nn ELSE spec.s_code END ),
					dbo.fn_getmarklist( '" + КодНакладной + "', " + ИДНакладной + ", identity_column, '|' )
					FROM spec" + КодНакладной + " spec
					WHERE ic = " + ИДНакладной);
					
					//При оплате кредита предметом расчета является "Платеж". Тем самым каждая строка товара трансформируется в платеж по каждому товару документа.
					//Количество платежа ставим равным 1, а сумму платежа равной сумме строки документа.
					//Так же учитываем что общая сумма платежей по строкам не должна превышать общую сумму платежа по ПКО. Если превышает, распределим сумму ПКО по строкам документа
					//Обработает таблицу товаров дополнительно, если это Оплата кредита
					IF ( СпособРасчета == 7 )
					{
						//распределим платеж из ПКО по позициям документа
						IF ( СуммаНакладной > СуммаПКО )
						{
							КоэффициентРаспределения = СуммаПКО/СуммаНакладной;
							МаксимальнаяСумма = 0;
							НомерСтрокиМаксимальнойСуммы = 1;
							КоличествоСтрокТоваров = ЗАПРОС("SELECT COUNT(*) FROM " + ИмяТаблицыТоваров);
							n = 1;
							WHILE ( n <= КоличествоСтрокТоваров )
							{
								ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
										SET summa = ROUND( summa*" + КоэффициентРаспределения + ", 2)
										WHERE npp = " + n );
								ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
										SET price = summa
										WHERE npp = " + n );
								СуммаСтроки = ЗАПРОС("SELECT summa FROM " + ИмяТаблицыТоваров + "
													WHERE npp = " + n );
													
								IF ( СуммаСтроки > МаксимальнаяСумма )
								{
									МаксимальнаяСумма = СуммаСтроки;
									НомерСтрокиМаксимальнойСуммы = n;
								}
								n++;
							}
							
							ИтоговаяСуммаТоваров = ЗАПРОС("SELECT SUM( summa ) FROM " + ИмяТаблицыТоваров );
							IF ( ИтоговаяСуммаТоваров <> СуммаПКО )
							{
								ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
										SET summa = " + ROUND( МаксимальнаяСумма - ( ИтоговаяСуммаТоваров - СуммаПКО ), 2) + "
										WHERE npp = " + НомерСтрокиМаксимальнойСуммы );
								ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
										SET price = summa
										WHERE npp = " + НомерСтрокиМаксимальнойСуммы );				
							}
						}//IF ( СуммаНакладной > СуммаПКО )
					}//IF ( СпособРасчета == 7 )
		}
		//пробиваем чек
		ТипЧека 		= ЕСЛИ( !ПУСТО( ВыбранныйТипЧека ), ВыбранныйТипЧека, ЕСЛИ( КодНакладной == "055", 5, 0 ) ); //если на основании возврата поставщику, то "возврат расхода", иначе "приход"
		
		IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
			ТипЧекаФР 		= ФР.АТОЛДТО10_ПолучитьКодВидаЧекаВККМ( ТипЧека, false );
		ELSE IF	( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
			ТипЧекаФР 		= ФР.МЕРКУРИЙФР_ПолучитьКодВидаЧекаВККМ( ТипЧека, false );
			
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, name, quantity, price, destination, echeque, clientcode )
			 VALUES ( 'Открыть чек', '" + STDF( FROperatorProfile )+ "', 1, '" + ТипЧекаФР + "', '', 0, 0, 0, " + ЕСЛИ( ЭЛЕКТРОННЫЙЧЕК, "1", "0" ) + ", '" + КОНТРАГЕНТ + "' )" );
			 
		//перенесем строки из таблицы товаров в контекст
		ДОБАВИТЬКОНТЕКСТ("SELECT * FROM " + ИмяТаблицыТоваров, "СписокТоваров");
		WHILE ( !КОНЕЦКОНТЕКСТА( "СписокТоваров" ) )
		{
			ПрефиксНаименованияПозиции = "";
			IF ( СпособРасчета == 7 AND !ПУСТО(КодНакладной) AND !ПУСТО(ИДНакладной) AND !_ККТ_НЕПЕЧАТАТЬДЕТАЛИЗАЦИЮПОТОВАРАМПРИОПЛАТЕКРЕДИТА ) //оплата кредита
				ПрефиксНаименованияПозиции = "Оплата кредита за ";
				
			НомерПП				= СписокТоваров.npp;
			КодТовара			= СписокТоваров.code;
			КодУслуги			= СписокТоваров.s_code;
			Наименование		= ПрефиксНаименованияПозиции + СписокТоваров.name;
			КоличествоТовара	= СписокТоваров.quantity;
			СуммаТовара			= СписокТоваров.summa;
			ЦенаТоварнойПозиции = СписокТоваров.price;
			СуммаСкидкиПозиции	= 0; //скидки из документов не обрабатываем, берем готовые суммы продажи
			СекцияККМ			= СписокТоваров.department;
			МаркированныйТовар	= СписокТоваров.f_mark;
			ТипМаркировки		= СписокТоваров.marktype;
			ШтрихкодМаркировки	= СписокТоваров.markbc;
			//НДС
			КодНалогаАйтида		= СписокТоваров.kodn;
			КодНалогаККМ		= ЗАПРОС("SELECT ex_code FROM sprkodn WHERE code = '" + КодНалогаАйтида + "'");
			IF ( !ПУСТО( КодНалогаККМ ) AND _ОПРЕДЕЛЯТЬКОДЫНАЛОГОВ )
			{
				//берем код налога из карточки налоговой ставки
				КодНалога		= КодНалогаККМ;
			}
			ELSE
			{
				//заполняем стандартными значениями
				IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
					КодНалога		= ФР.АТОЛДТО10_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );
				ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
					КодНалога		= ФР.МЕРКУРИЙФР_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );	
					
			}
			
			ПРПозиции	= СписокТоваров.rsubject;
			СРПозиции	= СписокТоваров.rvariant;
			
			IF (ПУСТО(ПРПозиции) AND !ПУСТО(КодТовара))
				ПРПозиции = 1; //товар
				
			IF (ПУСТО(ПРПозиции) AND !ПУСТО(КодУслуги))
				ПРПозиции = 4; //услуга
			
			ПредметРасчетаПозиции = СООТВЕТСТВИЕПРЕДМЕТОВРАСЧЕТА[VAL(ПРПозиции)];		
			СпособРасчетаПозиции = СООТВЕТСТВИЕСПОСОБОВРАСЧЕТА[VAL(СРПозиции)];
			
			// Разбор списка марок позиции
			КоличествоМарок 		= 0;
			IF ( !ПУСТО( ШтрихКодМаркировки ) AND МаркированныйТовар )
			{
				IF ( ATC( ШтрихКодМаркировки, "|" ) > 0 )
				{	
					РазделительМарок 	= "|";
					НомерСлова			= 1;
					ШтрихКодМаркировки	= РазделительМарок + ШтрихКодМаркировки;
					Марка				= ПОЛУЧИТЬСЛОВО( ШтрихКодМаркировки, РазделительМарок, НомерСлова );
					
					//подсчет количества разделителей в строке для определения количества слов
					WHILE ( !ПУСТО( Марка ) )
					{
						//обычные штрикоды пропускаем
						IF ( LEN( ALLTRIM( Марка ) ) > 13 )
						{
							КоличествоМарок++;
							Марки[ КоличествоМарок ] = Марка;					
						}			
						НомерСлова++;
						Марка			= ПОЛУЧИТЬСЛОВО( ШтрихКодМаркировки, РазделительМарок, НомерСлова );
					}		
				}
			}
			//\\конец разбора списка марок
			//если есть более одной марки табачной продукции, то разделим строки с марками на отдельные строки чека
			IF ( КоличествоМарок >= 1 )
			{
				НомерМарки		= 1;
				Цена			= СуммаТовара / ЕСЛИ( КоличествоТовара == 0, 1, КоличествоТовара ); //цена за единицу позиции
				WHILE ( НомерМарки <= КоличествоМарок )
				{
					ШКМарки 		= Марки[ НомерМарки ];
					НомерМарки++;
					Количество		= 1; 
					Сумма			= Цена;
					СуммаСкидкиПозиции = 0; //скидки в случае разделения позиции не выводим
				
					ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
															name, quantity, price, _price_u, summa, destination, department, discounttype, discountvalue, kodn, rsubject, rvariant, marktype, markbc )
					VALUES ( 'Регистрация', '" + FROperatorProfile + "', 1, 0, '" + STDF( Наименование ) + "', " + STR( Количество, 16, 3 ) + ", " + 
					STR( Цена, 16, 2 ) + ", " + STR( Цена, 16, 2 ) + ", " + STR( Сумма, 16, 2 ) + ", 0, " + ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ) + ", 0, " + 
					STR( СуммаСкидкиПозиции, 16, 3 ) + ", '" + КодНалога + "', '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "', '" + ТипМаркировки + "', '" + STDF(ШКМарки) + "' )" );
				
					//уменьшим общее количество товара и сумму для случая когда в одной строке будет объединено несколько позиций с марками и без них
					//количество единиц без марок будут пробиты отдельной строкой
					КоличествоТовара = КоличествоТовара - Количество;
					СуммаТовара = СуммаТовара - Сумма;		
				}
				//если осталось что добавить в чек после разделения, то добавляем
				IF ( КоличествоТовара > 0 )
				{
					ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
																name, quantity, price, _price_u, summa, destination, department, discounttype, discountvalue, kodn, rsubject, rvariant)
					VALUES ( 'Регистрация', '" + FROperatorProfile + "', 1, 0, '" + STDF( Наименование ) + "', " + STR( КоличествоТовара, 16, 3 ) + ", " + 
					STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( СуммаТовара, 16, 2 ) + ", 0, " + ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ) + ", 0, " + 
					STR( СуммаСкидкиПозиции, 16, 3 ) + ", '" + КодНалога + "', '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "' )" );
				
				}
			}
			ELSE
			{
				ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
																name, quantity, price, _price_u, summa, destination, department, discounttype, discountvalue, kodn, rsubject, rvariant, marktype, markbc )
					VALUES ( 'Регистрация', '" + FROperatorProfile + "', 1, 0, '" + STDF( Наименование ) + "', " + STR( КоличествоТовара, 16, 3 ) + ", " + 
					STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( СуммаТовара, 16, 2 ) + ", 0, " + ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ) + ", 0, " + 
					STR( СуммаСкидкиПозиции, 16, 3 ) + ", '" + КодНалога + "', '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "', '" + ТипМаркировки + "', '" + STDF(ШтрихКодМаркировки) + "' )" );
			}
			
			ПРОПУСТИТЬ( 1, "СписокТоваров");
		} //WHILE ( !КОНЕЦКОНТЕКСТА( "СписокТоваров" ) )
		//удалим таблицу товаров
		ЗАПРОС("DROP TABLE " + ИмяТаблицыТоваров);
		
		//если есть излишек оплаты, то добавляем строку в чек как авансовую
		IF ( ИзлишекОплаты > 0 )
		{
			КонтрагентПКО = ЗАПРОС("SELECT client FROM spr014 WHERE identity_column = " + ИДДокумента); 
			КонтрагентИмя = ALLTRIM( ЗАПРОС("SELECT name FROM sprclient WHERE code = " + КонтрагентПКО) );
			ОснованиеПлатежа = ALLTRIM( ЗАПРОС("SELECT desc_ FROM spr014 WHERE identity_column = " + ИДДокумента) ); 
			НаименованиеПредметаРасчетаАванс = "Получено от " + КонтрагентИмя + " Основание: " + ОснованиеПлатежа;
			Наименование = НаименованиеПредметаРасчетаАванс;
			//Наименование = "Аванс";
			КоличествоТовара = 1;
			ЦенаТоварнойПозиции = ИзлишекОплаты;
			СуммаТовара = ИзлишекОплаты;
			СекцияККМ = 1;
			СуммаСкидкиПозиции = 0;
			
			//НДС
			КодНалогаАйтида	= _ККТ_СТАВКАНДСДЛЯАВАНСОВ;
			КодНалогаККМ	= ЗАПРОС("SELECT ex_code FROM sprkodn WHERE code = '" + КодНалогаАйтида + "'");
			
			IF (!ПУСТО(КодНалогаККМ) AND _ОПРЕДЕЛЯТЬКОДЫНАЛОГОВ )
			{
				//берем код налога из карточки налоговой ставки
				КодНалога = КодНалогаККМ;
			}
			ELSE
			{
				//заполняем стандартными значениями
				IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
					КодНалога	= ФР.АТОЛДТО10_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );
				ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
					КодНалога	= ФР.МЕРКУРИЙФР_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );	
			} 
			ПРПозиции = 10; //платеж/выплата
			СРПозиции = 3; //аванс	
			
			ПредметРасчетаПозиции = СООТВЕТСТВИЕПРЕДМЕТОВРАСЧЕТА[VAL(ПРПозиции)];
			СпособРасчетаПозиции = СООТВЕТСТВИЕСПОСОБОВРАСЧЕТА[VAL(СРПозиции)];
			
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
														name, quantity, price, summa, destination, department, discounttype, discountvalue, kodn, rsubject, rvariant )
			 VALUES ( 'Регистрация', '" + FROperatorProfile + "', 1, 0, '" + STDF( Наименование ) + "', " + STR( КоличествоТовара, 16, 3 ) + ", " + 
			 STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( СуммаТовара, 16, 2 ) + ", 0, " + ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ) + ", 0, " + 
			 STR( СуммаСкидкиПозиции, 16, 3 ) + ", '" + КодНалога + "', '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "' )" );
			
		}
		
		//фиксируем оплаты чека
		//если полный расчет, то оплата может состоять из оплаты безналичными равной сумме из "прихода безналичных денег" и оплаты по предоплате
		IF ( СпособРасчета == 4 )
		{
			IF ( ROUND( СуммаПКО, 2) != 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
					VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыБезналичные + "', " + STR( СуммаПКО, 16, 2 ) + " )" );
			
			IF ( ROUND( СуммаПредоплаты, 2 ) != 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
				VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыПредоплата + "', " + STR( СуммаПредоплаты, 16, 2 ) + " )" );
			
			//если в ПКО выбрали полный расчет, а сумма ПКО меньше суммы накладной, то недостающую сумму проведем как полученную ранее предоплату. 
			//Сумма полученной предоплаты будет равна сумме излишка оплаты (излишек оплаты в такой ситуации получается отрицательным)
			IF ( ROUND( ИзлишекОплаты, 2 ) < 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
				VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыПредоплата + "', " + STR( -1*ИзлишекОплаты, 16, 2 ) + " )" );
			
		}
		//если оплата кредита, то оплата состоит только из безналичных
		IF ( СпособРасчета == 7 )
		{
			IF ( ROUND( СуммаПКО, 2) != 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
					VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыБезналичные + "', " + STR( СуммаПКО, 16, 2 ) + " )" );
		}
		//если частичный расчет и кредит, то оплата может состоять из оплаты безналичными равной сумме из ПКО, оплаты по предоплате и остаток оплаты записывается в оплату кредитом
		IF ( СпособРасчета == 5 )
		{
			IF ( ROUND( СуммаПКО, 2) != 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
					VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыБезналичные + "', " + STR( СуммаПКО, 16, 2 ) + " )" );
			
			IF ( ROUND( СуммаПредоплаты, 2) != 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
					VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыПредоплата + "', " + STR( СуммаПредоплаты, 16, 2 ) + " )" );	
			
			СуммаКредит = СуммаНакладной - СуммаПКО - СуммаПредоплаты; 
			IF ( ROUND( СуммаКредит, 2 ) != 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
					VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыКредит + "', " + STR( СуммаКредит, 16, 2 ) + " )" );
			
		}
		
		//закрываем чек в ККМ
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, price )
				VALUES ( 'Закрытие чека',  0 )" );
	}
	ELSE // другой тип документа основания
	{
		ПКОНААванс = false; //признак того что ПКО сформирован не на основании какого-либо документа
		СуммаПКО = ЗАПРОС( "SELECT summa FROM spr000 WHERE code= '014' AND ic = " + ИДДокумента );
		СуммаДокументаОснования = 0;
		
		//если ПКО сформирован на основании какого-то документа, то проверим входение документа в список допустимых.
		IF (!ПУСТО(ИДДокументаОснования) AND !ПУСТО(КодДокументаОснования)) 
		{
			//проверим код документа на принадлежность списку обрабатываемых документов
			IF ( AT( СписокДопустимыхДокументов, КодДокументаОснования) == 0 )
			{
				ПКОНААванс = true;
				//обнулим ИД и Код документа основания, чтобы не обрабатывать информацию из них
				ИДДокументаОснования = "";
				КодДокументаОснования = "";
				IF ( СтандартныйВидОплаты ) //если в ПКО не поменяли вид оплаты, а оставили как есть по умолчанию
				{
					ЭтоАванс = true;
				}
			}
			ELSE
			{
				//если есть основание для документа, то обрабатываем его
				СуммаДокументаОснования		= ЗАПРОС( "SELECT summa FROM spr000 WHERE code= '" + КодДокументаОснования + "' AND ic = " + ИДДокументаОснования );
			}
		}
		ELSE
		{
			ПКОНААванс = true;
		}
		//ПКО сформирован на основании какого-то документа и вид оплаты в кассовом ордере выбрали "Полный расчет"
		IF ( !ПУСТО(ИДДокументаОснования) AND !ПУСТО(КодДокументаОснования) AND ЭтоПолныйРасчет) 
		{
			ИДДокументаОснования = "";
			КодДокументаОснования = "";
			СуммаДокументаОснования = 0;
		}
		
		ИзлишекОплаты	= 0;
		//значения по умолчанию для признаков предмета расчета и способа расчета
		//а) если это Аванс
		IF (ЭтоАванс)
		{
			СпособРасчета	= 3; //Аванс
			ПредметРасчета	= 10; //платеж/выплата
		}
		//б) Если сумма оплаты по ПКО больше или равна сумме документа-основания, то это Предоплата 100% (остаток пробиваем как Аванс)	
		ELSE IF ( ЭтоПредоплата100 OR ( СуммаПКО >= СуммаДокументаОснования AND СуммаДокументаОснования <> 0 )  )
		{
			СпособРасчета	= 1; //Предоплата полная
			ПредметРасчета	= 10; //платеж/выплата
			ИзлишекОплаты = СуммаПКО - ЕСЛИ(СуммаДокументаОснования==0,СуммаПКО,СуммаДокументаОснования);
		}
		//в) Если сумма оплаты по ПКО меньше суммы документа-основани, то это частичная предоплата
		ELSE IF ( ( ЭтоПредоплатаЧаст OR ( СуммаПКО < СуммаДокументаОснования AND СуммаДокументаОснования <> 0 ) ) AND !ЭтоПолныйРасчет AND !ЭтоОплатаКредита )
		{
			СпособРасчета	= 2; //Предоплата частичная
			ПредметРасчета	= 10; //платеж/выплата
		}
		ELSE IF ( ЭтоОплатаКредита )
		{
			СпособРасчета	= 7; //Оплата кредита
			ПредметРасчета	= 10; //платеж/выплата
		}
		ELSE IF ( ЭтоОплата ) //если оставили значение по умолчанию
		{
			СпособРасчета	= 3; //Аванс
			ПредметРасчета	= 10; //платеж/выплата
		}
		ELSE IF ( ЭтоПолныйРасчет )
		{
			СпособРасчета	= 4; //Полный расчет
			ПредметРасчета	= 10; //платеж/выплата
		}
		
		ПредметРасчетаПозиции = СООТВЕТСТВИЕПРЕДМЕТОВРАСЧЕТА[VAL(ПредметРасчета)];
		СпособРасчетаПозиции = СООТВЕТСТВИЕСПОСОБОВРАСЧЕТА[VAL(СпособРасчета)];
		
		IF ( !ПУСТО( КодДокументаОснования ) AND !ПУСТО( ИДДокументаОснования ) )
		{
			IF ( _ККТ_НЕПЕЧАТАТЬДЕТАЛИЗАЦИЮПОТОВАРАМПРИПРЕДОПЛАТЕ AND ( СпособРасчета==1 OR СпособРасчета == 2 ) )
			{
				ОснованиеПлатежа = ALLTRIM( ЗАПРОС("SELECT desc_ FROM spr014 WHERE identity_column = " + ИДДокумента) ); 
				НаименованиеПредметаРасчетаПР = "Получено от " + КонтрагентИмя + " Основание: " + ОснованиеПлатежа;
				
				//НДС
				КодНалогаАйтида	= _ККТ_СТАВКАНДСДЛЯАВАНСОВ;
				//заполняем стандартными значениями
				КодНалога	= КодНалогаАйтида;
				//добавляем обобщенную строку в таблицу товаров
				ЗАПРОС ("INSERT INTO " + ИмяТаблицыТоваров + " ( npp, code, s_code, name, quantity, price, summa, rsubject, rvariant, kodn, department)
						VALUES ( 1, '', '', '" + НаименованиеПредметаРасчетаПР + "', 1, " + СуммаПКО + ", " + СуммаПКО + ", '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "', '" + КодНалога + "', 1 )" ); 
				
			}
			ELSE IF ( _ККТ_НЕПЕЧАТАТЬДЕТАЛИЗАЦИЮПОТОВАРАМПРИОПЛАТЕКРЕДИТА AND СпособРасчета==7 )
			{
				ОснованиеПлатежа = ALLTRIM( ЗАПРОС("SELECT desc_ FROM spr014 WHERE identity_column = " + ИДДокумента) ); 
				НаименованиеПредметаРасчетаОК = "Получено от " + КонтрагентИмя + " Основание: " + ОснованиеПлатежа;
				
				//НДС
				КодНалогаАйтида	= _СТАВКАНДС_БЕЗНДС;
				//заполняем стандартными значениями
				КодНалога	= КодНалогаАйтида;
				//добавляем обобщенную строку в таблицу товаров
				ЗАПРОС ("INSERT INTO " + ИмяТаблицыТоваров + " ( npp, code, s_code, name, quantity, price, summa, rsubject, rvariant, kodn, department)
						 VALUES ( 1, '', '', '" + НаименованиеПредметаРасчетаОК + "', 1, " + СуммаПКО + ", " + СуммаПКО + ", '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "', '" + КодНалога + "', 1 )" ); 
			}
			ELSE
			{
				//Если это предоплата или оплата кредита, то спецификацию трансформируем в таблицу платежей по каждому товару/услуге спецификации с распределением суммы платежа по товарам
				//При частичной оплате формируем таблицу товаров по спецификации документа основания
				ЗАПРОС ("INSERT INTO " + ИмяТаблицыТоваров + " ( npp, code, s_code, name, quantity, price, summa, rsubject, rvariant, kodn, department)
						SELECT row_number() OVER (ORDER BY RIGHT(SPACE(10) + rtrim(npp), 10)), nn, s_code, nnname, 
						" + ЕСЛИ(СпособРасчета==1 OR СпособРасчета == 2 OR СпособРасчета == 7,1,"kolp") + ", 
						" + ЕСЛИ(СпособРасчета==1 OR СпособРасчета == 2 OR СпособРасчета == 7, "summa", "cena") + ", 
						summa,
						" + ЕСЛИ(СпособРасчета==1 OR СпособРасчета == 2 OR СпособРасчета == 7,ПредметРасчета,"CASE WHEN nn <> '' THEN (SELECT sprres_g.rsubject FROM sprres LEFT OUTER JOIN sprres_g ON sprres.group_ = sprres_g.code WHERE sprres.code = nn)
						WHEN s_code <> '' THEN (SELECT sprres_g.rsubject FROM sprservice LEFT OUTER JOIN sprres_g ON sprservice.srvgroup = sprres_g.code WHERE sprservice.code = s_code) END") + ",
						" + СпособРасчета + ",
						" + ЕСЛИ( (СпособРасчета >=1 AND СпособРасчета <= 3) OR СпособРасчета==7,
								 "(SELECT code FROM sprkodn WHERE code = '" + ЕСЛИ( СпособРасчета==7, _СТАВКАНДС_БЕЗНДС, _ККТ_СТАВКАНДСДЛЯАВАНСОВ ) + "')",
								 "(SELECT TOP 1 sprkod.code FROM sprkodn sprkod 
									INNER JOIN speclistkodn specn ON specn.list = sprkod.code AND specn.date <= GETDATE()
									INNER JOIN sprlistkodn sprlist ON sprlist.code = specn.code
									WHERE sprlist.code = kodn
									ORDER BY specn.date DESC)") + ",
						CASE WHEN nn <> '' THEN (SELECT kkm_section  FROM sprres_g sprres_g
									INNER JOIN sprres sprres ON sprres.group_ = sprres_g.code
									WHERE sprres.code = nn)
							 WHEN s_code <> '' THEN (SELECT kkm_section  FROM sprres_g sprres_g
									INNER JOIN sprservice ON sprservice.srvgroup = sprres_g.code
									WHERE sprservice.code = s_code) END 
						FROM spec" + КодДокументаОснования + "
						WHERE ic = " + ИДДокументаОснования);
						
				//При частичной и полной предоплате, а так же оплате кредита предметом расчета является "Платеж". Тем самым каждая строка товара трансформируется в платеж по каждому товару документа.
				//Количество платежа ставим равным 1, а сумму платежа равной сумме строки документа.
				//Так же учитываем что общая сумма платежей по строкам не должна превышать общую сумму платежа по ПКО. Если превышает, распределим сумму ПКО по строкам документа
				//Обработает таблицу товаров дополнительно, если это Предоплата частичная или это оплата кредита 
				IF ( СпособРасчета == 2 OR СпособРасчета == 7)
				{
					//распределим платеж из ПКО по позициям документа
					IF ( СуммаДокументаОснования > СуммаПКО )
					{
						КоэффициентРаспределения = СуммаПКО/СуммаДокументаОснования;
						МаксимальнаяСумма = 0;
						НомерСтрокиМаксимальнойСуммы = 1;
						КоличествоСтрокТоваров = ЗАПРОС("SELECT COUNT(*) FROM " + ИмяТаблицыТоваров);
						n = 1;
						WHILE ( n <= КоличествоСтрокТоваров )
						{
							ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
									SET summa = ROUND( summa*" + КоэффициентРаспределения + ", 2)
									WHERE npp = " + n );
							ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
									SET price = summa
									WHERE npp = " + n );
							СуммаСтроки = ЗАПРОС("SELECT summa FROM " + ИмяТаблицыТоваров + "
												  WHERE npp = " + n );
												  
							IF ( СуммаСтроки > МаксимальнаяСумма )
							{
								МаксимальнаяСумма = СуммаСтроки;
								НомерСтрокиМаксимальнойСуммы = n;
							}
							n++;
						}
						ИтоговаяСуммаТоваров = ЗАПРОС("SELECT SUM( summa ) FROM " + ИмяТаблицыТоваров );
						IF ( ИтоговаяСуммаТоваров <> СуммаПКО )
						{
							ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
									SET summa = " + ROUND( МаксимальнаяСумма - ( ИтоговаяСуммаТоваров - СуммаПКО ), 2) + "
									WHERE npp = " + НомерСтрокиМаксимальнойСуммы );
							ЗАПРОС("UPDATE " + ИмяТаблицыТоваров + " 
									SET price = summa
									WHERE npp = " + НомерСтрокиМаксимальнойСуммы );
						}
					}//IF ( СуммаДокументаОснования > СуммаПКО )
				}//IF ( СпособРасчета == 2 OR СпособРасчета == 7)
			}
		}
		ELSE //иначе просто пробиваем сумму из ПКО как аванс (формируем таблицу для пробития с одной строкой как Аванс)
		{
			ОснованиеПлатежа = ALLTRIM( ЗАПРОС("SELECT desc_ FROM spr014 WHERE identity_column = " + ИДДокумента) ); 
			НаименованиеПредметаРасчетаАванс = "Получено от " + КонтрагентИмя + " Основание: " + ОснованиеПлатежа;
			
			//НДС
			КодНалогаАйтида	= _ККТ_СТАВКАНДСДЛЯАВАНСОВ;
			//заполняем стандартными значениями
			КодНалога	= КодНалогаАйтида;
			//формируем таблицу товаров по спецификации документа основания
			ЗАПРОС ("INSERT INTO " + ИмяТаблицыТоваров + " ( npp, code, s_code, name, quantity, price, summa, rsubject, rvariant, kodn, department)
					VALUES ( 1, '', '', '" + НаименованиеПредметаРасчетаАванс + "', 1, " + СуммаПКО + ", " + СуммаПКО + ", '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "', '" + КодНалога + "', 1 )" ); 
			
		}
		
		//пробиваем чек
		ТипЧека 		= ЕСЛИ( !ПУСТО( ВыбранныйТипЧека ), ВыбранныйТипЧека, 0 ); //"приход"
		
		IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
			ТипЧекаФР	= ФР.АТОЛДТО10_ПолучитьКодВидаЧекаВККМ( ТипЧека, false ); 
		ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
			ТипЧекаФР	= ФР.МЕРКУРИЙФР_ПолучитьКодВидаЧекаВККМ( ТипЧека, false );
		
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, name, quantity, price, destination, echeque, clientcode )
			 VALUES ( 'Открыть чек', '" + STDF( FROperatorProfile )+ "', 1, '" + ТипЧекаФР + "', '', 0, 0, 0, " + ЕСЛИ( ЭЛЕКТРОННЫЙЧЕК, "1", "0" ) + ", '" + КОНТРАГЕНТ + "' )" );
			 
		//перенесем строки из таблицы товаров в контекст
		ДОБАВИТЬКОНТЕКСТ("SELECT * FROM " + ИмяТаблицыТоваров, "СписокТоваров");
		WHILE ( !КОНЕЦКОНТЕКСТА( "СписокТоваров" ) )
		{
			//проверка и форматно-логический контроль
			ПрефиксНаименованияПозиции = "";
			IF ( ( СпособРасчета == 1 OR СпособРасчета == 2 ) AND !ПУСТО( КодДокументаОснования ) AND !ПУСТО( ИДДокументаОснования ) AND !_ККТ_НЕПЕЧАТАТЬДЕТАЛИЗАЦИЮПОТОВАРАМПРИПРЕДОПЛАТЕ ) //предоплата полная или частичная
				ПрефиксНаименованияПозиции = "Предоплата за ";
				
			НомерПП				= СписокТоваров.npp;
			КодТовара			= СписокТоваров.code;
			КодУслуги			= СписокТоваров.s_code;
			Наименование		= ПрефиксНаименованияПозиции + СписокТоваров.name;
			КоличествоТовара	= СписокТоваров.quantity;
			СуммаТовара			= СписокТоваров.summa;
			ЦенаТоварнойПозиции = СписокТоваров.price;
			СуммаСкидкиПозиции	= 0; //скидки из документов не обрабатываем, берем готовые суммы продажи
			СекцияККМ			= СписокТоваров.department;
			
			//НДС
			КодНалогаАйтида		= СписокТоваров.kodn;
			КодНалогаККМ		= ЗАПРОС("SELECT ex_code FROM sprkodn WHERE code = '" + КодНалогаАйтида + "'");
			IF ( !ПУСТО( КодНалогаККМ ) AND _ОПРЕДЕЛЯТЬКОДЫНАЛОГОВ )
			{
				//берем код налога из карточки налоговой ставки
				КодНалога		= КодНалогаККМ;
			}
			ELSE
			{
				//заполняем стандартными значениями
				IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
					КодНалога		= ФР.АТОЛДТО10_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );
				ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
					КодНалога		= ФР.МЕРКУРИЙФР_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );	
			}
					
			ПредметРасчетаПозиции = СписокТоваров.rsubject;
			СпособРасчетаПозиции = СписокТоваров.rvariant;
			
			//форматно-логический контроль для предоплат и авансов не проводим, т.к. количество в каждой строке равно 1 и расхождения по сумме быть не может
			
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
														name, quantity, price, summa, destination, department, discounttype, discountvalue, kodn, rsubject, rvariant )
			 VALUES ( 'Регистрация', '" + FROperatorProfile + "', 1, 0, '" + STDF( Наименование ) + "', " + STR( КоличествоТовара, 16, 3 ) + ", " + 
			 STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( СуммаТовара, 16, 2 ) + ", 0, " + ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ) + ", 0, " + 
			 STR( СуммаСкидкиПозиции, 16, 3 ) + ", '" + КодНалога + "', '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "' )" );
			
			ПРОПУСТИТЬ( 1, "СписокТоваров");
		} //WHILE ( !КОНЕЦКОНТЕКСТА( "СписокТоваров" ) )
		//удалим таблицу товаров
		ЗАПРОС("DROP TABLE " + ИмяТаблицыТоваров);
		
		//если есть излишек оплаты, то добавляем строку в чек как авансовую
		IF ( ИзлишекОплаты > 0 )
		{
			КонтрагентПКО = ЗАПРОС("SELECT client FROM spr014 WHERE identity_column = " + ИДДокумента); 
			КонтрагентИмя = ALLTRIM( ЗАПРОС("SELECT name FROM sprclient WHERE code = " + КонтрагентПКО) );
			ОснованиеПлатежа = ALLTRIM( ЗАПРОС("SELECT desc_ FROM spr014 WHERE identity_column = " + ИДДокумента) ); 
			НаименованиеПредметаРасчетаАванс = "Получено от " + КонтрагентИмя + " Основание: " + ОснованиеПлатежа;
			Наименование = НаименованиеПредметаРасчетаАванс; //"Аванс";
			КоличествоТовара = 1;
			ЦенаТоварнойПозиции = ИзлишекОплаты;
			СуммаТовара = ИзлишекОплаты;
			СекцияККМ = 1;
			СуммаСкидкиПозиции = 0;
			
			//НДС
			КодНалогаАйтида	= _ККТ_СТАВКАНДСДЛЯАВАНСОВ;
			КодНалогаККМ	= ЗАПРОС("SELECT ex_code FROM sprkodn WHERE code = '" + КодНалогаАйтида + "'");
			
			IF (!ПУСТО(КодНалогаККМ) AND _ОПРЕДЕЛЯТЬКОДЫНАЛОГОВ )
			{
				//берем код налога из карточки налоговой ставки
				КодНалога	= КодНалогаККМ;
			}
			ELSE
			{
				//заполняем стандартными значениями
				IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
					КодНалога	= ФР.АТОЛДТО10_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );
				ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
					КодНалога	= ФР.МЕРКУРИЙФР_ПолучитьНалогККМПоТипуНалога( КодНалогаАйтида );	
					
			} 
			ПРПозиции = 10; //платеж/выплата
			СРПозиции = 3; //аванс
			
			ПредметРасчетаПозиции = СООТВЕТСТВИЕПРЕДМЕТОВРАСЧЕТА[VAL(ПРПозиции)];
			СпособРасчетаПозиции = СООТВЕТСТВИЕСПОСОБОВРАСЧЕТА[VAL(СРПозиции)];
			
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
														name, quantity, price, summa, destination, department, discounttype, discountvalue, kodn, rsubject, rvariant )
			 VALUES ( 'Регистрация', '" + FROperatorProfile + "', 1, 0, '" + STDF( Наименование ) + "', " + STR( КоличествоТовара, 16, 3 ) + ", " + 
			 STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( СуммаТовара, 16, 2 ) + ", 0, " + ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ) + ", 0, " + 
			 STR( СуммаСкидкиПозиции, 16, 3 ) + ", '" + КодНалога + "', '" + ПредметРасчетаПозиции + "', '" + СпособРасчетаПозиции + "' )" );
			
		}
		
		//фиксируем оплаты чека
		//При предоплате и авансе суммы последующих и предыдущих оплат не указываются (они указываются при передаче предмета расчета, т.е. при отгрузке),
		//по этой причине в оплатах фиксируем только сумму по ПКО
		IF ( ROUND( СуммаПКО, 2) != 0 )
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
				VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыБезналичные + "', " + STR( СуммаПКО, 16, 2 ) + " )" );
		
		//закрываем чек в ККМ
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, price )
				VALUES ( 'Закрытие чека', 0 )" );	
	}
}

//ФЛК
ФР.ПроизвестиФорматноЛогическийКонтроль();

//печатаем чек на ФР
ЧекНапечатан = false;
IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
	ЧекНапечатан = ФР.АТОЛДТО10_ПечатьЧекаНаФР( );
ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
	ЧекНапечатан = ФР.МЕРКУРИЙФР_ПечатьЧекаНаФР( );	
	
	
IF ( ЧекНапечатан )
{
	ЗАПРОС( "UPDATE spr000 SET f_kkm = 1 WHERE code= '014' AND ic = " + ИДДокумента );
	СООБЩЕНИЕ("Чек успешно пробит на ККМ");
	RETURN true;
}
