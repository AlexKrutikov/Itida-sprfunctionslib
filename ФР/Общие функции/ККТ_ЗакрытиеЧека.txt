// Закрытие чека
//СООБЩЕНИЕ("_ВСЕГОСКИДКАНАЧЕК = " + _ВСЕГОСКИДКАНАЧЕК + CHR(13) + CHR(10) + "totaldiscount = " + totaldiscount);
_ВСЕГОСКИДКАНАЧЕК = _ВСЕГОСКИДКАНАЧЕК - totaldiscount;
_СУММАСКИДКИВСЕГО = totaldiscount;

// Параметры - 
// СуммаОплаты число вещественное, сумма, полученная от покупателя
// ПроцентСкидки число вещественное, процент скидки на чек
// Параметр - FROperatorProfile число, профиль из карточки сотрудника

ЭТОРМК = false;			
IF (TYPE("_МРП") <> "U")
	ЭТОРМК = _МРП == "2";
IF (ЭТОРМК)
{
	//печать комментария после фискальных строк и перед оплатой
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, mode, checktype, name)
			 VALUES ( 'Печать строки', 2, 'left', '" + STDF(КОММЕНТАРИЙ) + "' )" );
} 

IF ( ПЕРЕМЕННАЯ( "ЭтоТоварныйЧек", false ) == true )
{
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation,price)
			 VALUES ( 'ИТОГ', " + STR( СУММАОПЛАТЫ, 16, 2 ) + " )" );
}

//Если тип чека "Прочее/Вскрытие тары", то добавляем только печать нефискальных строк с оплатой
IF ( ТипЧека == 6 ) 
{
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
														name, quantity, price, destination)
			 VALUES ( 'Печать строки', '', 0, 0, '================================================', 0, 0, 0 )" );	
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
														name, quantity, price, destination)
			 VALUES ( 'Печать строки', '', 1, 0, 'ИТОГ: " + STR( СуммаЧека, 16, 2 ) + "', 0, 0, 0 )" );
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation,checktype)
			 VALUES ( 'Закрытие чека', 0 )" );	
}
ELSE
{
	//безнал
	IF ( ROUND( СуммаБезнал, 2 ) != 0 )
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
				VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыБезналичные + "', " + STR( СуммаБезнал, 16, 2 ) + " )" );
				
	//сертификат			
	IF ( ROUND( ВСЕГОСЕРТИФИКАТЫ, 2 ) != 0 )
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
				VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыПредоплата + "', " + STR( ВСЕГОСЕРТИФИКАТЫ, 16, 2 ) + " )" );
	
	//кредит
	IF ( ROUND( ВСЕГОКРЕДИТ, 2 ) != 0 )
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
				VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыКредит + "', " + STR( ВСЕГОКРЕДИТ, 16, 2 ) + " )" );
		
	//встречное предоставление (только в РМК)	
	IF ( !ЭТОРМК )
	{
		IF ( ROUND( ВСЕГОПРОЧАЯОПЛАТА, 2 ) != 0 )
			ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
					VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыПрочее + "', " + STR( ВСЕГОПРОЧАЯОПЛАТА, 16, 2 ) + " )" );
	}
	
	//наличные
	IF ( ROUND( СуммаНал, 2 ) != 0 )
		ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, closetype, price )
				VALUES ( 'Оплата', '" + ККТ_КодВидаОплатыНаличные + "', " + STR( СуммаНал + СДАЧА, 16, 2 ) + " )" );
				
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, price )
			VALUES ( 'Закрытие чека', " + STR( 0, 16, 2 ) + " )" );
}

РезультатФЛК = ФР.ПроизвестиФорматноЛогическийКонтроль();

IF ( TYPE("ВерсияФФД") == "U" )	
	ВерсияФФД = "1.05";

//для ФФД 1.2 проверим позиции предварительно через ФР
IF ( ALLTRIM(ПЕРЕМЕННАЯ("ВерсияФФД", "1.05")) == "1.2" И ВСПИСКЕ(МОДЕЛЬОБОРУДОВАНИЯ, "АТОЛДТО10") )
{
	IF ( ФР.ЕстьПозицииСМаркировкойВЧеке() )
	{
		IF (МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10")
		{
			//если нет контекста с результатами проверки КМ, то запускаем проверку всех КМ в чеке при закрытии чека
			IF ( !ВЫБРАТЬКОНТЕКСТ( "РезультатыОбработкиКМ" ) )
			{
				ФР.АТОЛДТО10_ОчиститьТаблицуПроверенныхКМ( ФР.КОДОБОРУДОВАНИЯ() );
				IF ( !ФР.АТОЛДТО10_ПроверитьКМВПозицияхЧекаАвтоматически( ФР.КОДОБОРУДОВАНИЯ() ) )
				{
					_ERROR = true;
					RETURN false;
				}
			}
		}
	}
}

БанковскиеПозицииЧека = "";
IF ( !ПУСТО( ИМЯПЛАТЕЖНОЙСИСТЕМЫ ) AND МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" AND !ПЕРЕМЕННАЯ("Доставка", false) )
{
	IF ( UPPER(ИМЯПЛАТЕЖНОЙСИСТЕМЫ) == "ПСАТОЛ")
	{
		IF ( !ФР.ПСАТОЛ_ПровестиОперациюОплаты( ФР.КОДОБОРУДОВАНИЯ() ) )
		{
			_ERROR = true;
			RETURN false;
		}
	}
	ELSE IF ( UPPER(ИМЯПЛАТЕЖНОЙСИСТЕМЫ) == "СБЕРБАНК")
	{
		IF ( !ФР.ПССБЕРБАНК_ПровестиОперациюОплаты( ФР.КОДОБОРУДОВАНИЯ() ) )
		{
			_ERROR = true;
			RETURN false;
		}
	}
}

//новые платежные системы
IF ( НОМЕРПОДЧЕКА == 1 AND НОМЕРПОДЧЕКА <= ВСЕГОЧЕКОВ)
	ДОБАВИТЬКОНТЕКСТ("SELECT * FROM paycardtrans WHERE owner = '" + _UNCONFIRMEDID + "' AND fr_code IN ('','" + ФР.КОДОБОРУДОВАНИЯ() + "')", "ОперацииПС");
ELSE
	ДОБАВИТЬКОНТЕКСТ("SELECT * FROM paycardtrans WHERE owner = '" + _UNCONFIRMEDID + "' AND fr_code = '" + ФР.КОДОБОРУДОВАНИЯ() + "'", "ОперацииПС");
	
ВЫБРАТЬКОНТЕКСТ("ОперацииПС");
IF ( КОЛИЧЕСТВОСТРОК("ОперацииПС") > 0 )
{
	ПЕРЕЙТИВНАЧАЛО("ОперацииПС");
	WHILE ( !КОНЕЦКОНТЕКСТА("ОперацииПС") )
	{
		КоличествоСлипов = VAL(ОперацииПС.slipcount);
		ПозицииЧека = "";
		СлипЧек = ОперацииПС.slip;
		НОМЕРКОПИИСЛИПА = 0;
		WHILE ( НОМЕРКОПИИСЛИПА < КоличествоСлипов )
		{
			РазделительСтрок 	= CHR(10);
			НомерСтрокиСлипа	= 1;
			СлипЧекВрем			= РазделительСтрок + СлипЧек;
			СтрокаСлипа			= ПОЛУЧИТЬСЛОВО( СлипЧекВрем, РазделительСтрок, НомерСтрокиСлипа );
			WHILE ( !ПУСТО( СтрокаСлипа ) )
			{
				IF (  МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
					ФР.АТОЛДТО10_ДобавитьСтрокуЧека( ПозицииЧека, СтрокаСлипа, false, "text", "left", "words", _ШРИФТТЕКСТАДЛЯНЕФИСКАЛЬНОЙПЕЧАТИ);
				
				НомерСтрокиСлипа++;
				СтрокаСлипа		= ПОЛУЧИТЬСЛОВО( СлипЧекВрем, РазделительСтрок, НомерСтрокиСлипа );
			}				
			
			//Если установлен режим печати банковского слипа вместе с кассовым чеком и это первый слип и нет неявных ошибок ПС, 
			//то запомним позиции банковского слипа для их последующего добавления к позициям кассового чека
			//При наличии неявных ошибок слип нужно все таки вывести пользователю для обработки результата
			IF (_БАКОВСКИЙСЛИПВМЕСТЕСЧЕКОМ == true AND НОМЕРКОПИИСЛИПА == 0 )
			{
				//запомним первый слип 
				БанковскиеПозицииЧека = ПозицииЧека;
				//текущий слип очистим, чтобы не напечатался
				ПозицииЧека = "";
			}
			ELSE
			{
				ЗаголовокЧека = "
				{
					""type"": ""nonFiscal"",";
				
				ТекстЧека = ЗаголовокЧека + "
				""items"": [
				" + ПозицииЧека + "
				]
				}";
				
				IF (  МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
					РезультатПечати = ФР.АТОЛДТО10_ФискализироватьЧек( ТекстЧека, false, ФР.КОДОБОРУДОВАНИЯ() );
				
				IF (РезультатПечати == false)
				{
					WHILE (РезультатПечати <> true)
					{
						СообщениеПользователю = "Слип не напечатан в ККМ." + CHR(13) + "Повторить печать слипа?";
						КодОтвета = MESSAGEBOX(СообщениеПользователю,"Ошибка печати слипа",5);
						IF (КодОтвета==4) //если нажали "Повторить"
						{
							IF (  МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
								РезультатПечати = ФР.АТОЛДТО10_ФискализироватьЧек( ТекстЧека, false, ФР.КОДОБОРУДОВАНИЯ() ); //повторим печать слипа
						}
						ELSE //если нажали "Отмена"
						{
							Вопрос					= "Вы действительно хотите отменить печать слипа?";
							ОтветНаВопрос			= MESSAGEBOX(Вопрос,"Печать слипа",4);
							IF (ОтветНаВопрос == 6)
							{
								РезультатПечати	= false;
								BREAK;
							}
						}
					}
					//RETURN false;
				}
				
				//если успешно напечатали нефискальный чек, то обнуляем текст чека и нефискальные строки
				ТекстЧека = "";
				ЗаголовокЧека = "";
				ПозицииЧека = "";
			}
			
			НОМЕРКОПИИСЛИПА++;
		}// конец цикла по количеству слипов
		ПРОПУСТИТЬ( 1, "ОперацииПС");
	}//конец цикла по констексту с операциями по платежным системам
}

IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
{
	IF ( ПЕРЕМЕННАЯ( "ЭтоТоварныйЧек", false ) )
		РезультатПечатиЧека		= ФР.АТОЛДТО10_ПечатьНефискальногоЧекаНаФР( );
	ELSE
		РезультатПечатиЧека		= ФР.АтолДТО10_ПечатьЧекаНаФР( );
}
ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
	РезультатПечатиЧека		= ФР.МЕРКУРИЙФР_ПечатьЧекаНаФР( );
ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "ШТРИХ" )
	РезультатПечатиЧека		= ФР.ШТРИХ_ПечатьЧекаНаФР( );	
	
Результат 				= РезультатПечатиЧека == true;

IF ( !ПУСТО( ИМЯПЛАТЕЖНОЙСИСТЕМЫ ) AND МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" AND !ПЕРЕМЕННАЯ("Доставка", false) )
{
	IF ( UPPER(ИМЯПЛАТЕЖНОЙСИСТЕМЫ) == "ПСАТОЛ")
		ФР.ПСАТОЛ_ЗавершениеОперацииОплаты( Результат );
	IF ( UPPER(ИМЯПЛАТЕЖНОЙСИСТЕМЫ) == "СБЕРБАНК")
		ФР.ПССБЕРБАНК_ЗавершениеОперацииОплаты( Результат );
}


НомерЧекаККМ 			= 0;
НомерСменыККМ 			= 0;

IF (Результат == false)
	_ERROR = true;

RETURN Результат;
