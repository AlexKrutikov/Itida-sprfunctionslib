// Регистрация

// Параметры - 
// Наименование строка, наименование ТМЦ или услуги,
// Цена число вещественое, цена ТМЦ или услуги, 
// Количество число вещественное, количество ТМЦ или услуги,
// ПроцентСкидки число вещественное.

//Шаблон наименования товара;
//по умолчанию шаблон пустой, т.е. не используется
//при необходимости нужно раскомментировать один из примеров или прописать свой шаблон
ШАБЛОННАИМЕНОВАНИЯ = "";

//Примеры своего шаблона:
//1. выводим код товара вместе с наименованием через пробел
//ШАБЛОННАИМЕНОВАНИЯ = Код + " " + Наименование;
//
//2. выводим артикул товара вместе с наименованием через пробел
//ШАБЛОННАИМЕНОВАНИЯ = АРТИКУЛ + " " + Наименование;
//
//3. выводим артикул, если не пустой, в противном случае выводим код вместе с наименованием
//ШАБЛОННАИМЕНОВАНИЯ = ЕСЛИ( !ПУСТО(АРТИКУЛ), АРТИКУЛ, Код) + " " + Наименование;
//
//Переменные:
//Код - код товара
//ШТРИХКОД - штрихкод товара
//АРТИКУЛ - артикул товара
//НАИМЕНОВАНИЕ - наименование товара
//ЦЕНА - цена учета товара/услуги
//ЦЕНАПРОДАЖИ - цена продажи товара/услуги
//СУММАПРОДАЖИ - сумма продажи по строке
//СУММАНДС - сумма НДС по строке
//КОЛИЧЕСТВО - количество товара/услуги в строке
//ЕДИНИЦА - единица измерения товара/услуги
//СУММАСКИДКИ - сумма скидки 
//
//Функция STDF(Строка) - преобразует указанную строку к виду, в котором её можно безошибочно передать в SQL запросе

//Если тип чека "Прочее/Вскрытие тары", то добавляем только печать нефискальных строк с товарами и завершаем выполнение данного модуля
IF ( Операция == "Регистрация" && ТипЧека == 6 )
{
	//строка Наименование + Код
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
														name, quantity, price, destination)
			 VALUES ( 'Печать строки', '', 1, 0, '" + ЕСЛИ( !ПУСТО(ШАБЛОННАИМЕНОВАНИЯ), STDF(ШАБЛОННАИМЕНОВАНИЯ),  STDF( Наименование ) ) + ' ' + CHR( 13 ) + "Код: " + STDF( КОД ) + "', 0, 0, 0 )" );
	//строка Количество * Цену
	ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
														name, quantity, price, destination)
			 VALUES ( 'Печать строки', '', 1, 0, '" + STR( Количество, 16, 3 ) + ' * ' + ЕСЛИ( _ПЕЧАТАТЬСКИДКИ, STR( Цена, 16, 2 ), STR( ЦенаСоСкидкой, 16, 2 ) ) + "', 0, 0, 0 )" );
	RETURN true;	
}

IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
	ФР.АТОЛДТО10_СоответствиеПРСР();
ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )	
	ФР.МЕРКУРИЙФР_СоответствиеПРСР();
	

СекцияККМ				= VAL( ЗАПРОС( "SELECT kkm_section  FROM sprres_g sprres_g
										INNER JOIN sprres sprres ON sprres.group_ = sprres_g.code
										WHERE sprres.maincode= '" + Код + "'" ) );
КодНалогаАйтида			= ЗАПРОС( "SELECT kodn FROM sprres WHERE sprres.maincode= '" + Код + "'" );
КодНалогаККМ			= ЗАПРОС("SELECT sprkod.ex_code AS ex_code FROM sprkodn sprkod
								INNER JOIN speclistkodn spec ON spec.list = sprkod.code
								INNER JOIN sprlistkodn sprlist ON sprlist.code = spec.code
								WHERE sprlist.code = '" + КодНалогаАйтида + "'");
IF (!ПУСТО(КодНалогаККМ) AND _ОПРЕДЕЛЯТЬКОДЫНАЛОГОВ)
{
	//берем код налога из карточки налоговой ставки
	КодНалога			= КодНалогаККМ;
}
ELSE
{
	//определяем налог в ККМ по коду налога в Айтиде
	IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" )
		КодНалога			= ФР.АТОЛДТО10_ПолучитьКодНалогаВККМ( КодНалогаАйтида );
	ELSE IF ( МОДЕЛЬОБОРУДОВАНИЯ == "МЕРКУРИЙ" )
		КодНалога			= ФР.МЕРКУРИЙФР_ПолучитьКодНалогаВККМ( КодНалогаАйтида );
		
}
_ЕСТЬМАРКИРОВКА			= VAL( ЗАПРОС( "SELECT CASE WHEN EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE (TABLE_NAME = N'sprres' ) AND (COLUMN_NAME = N'f_mark')) THEN 1 ELSE 0 END"));

ДОБАВИТЬКОНТЕКСТ( "SELECT ISNULL( sprres_g.rsubject, 0 ) AS rsubject, ISNULL( sprres_g.paytype, 0 ) AS paytype, " + ЕСЛИ( _ЕСТЬМАРКИРОВКА == 1, "sprres.f_mark", "0" ) + " AS f_mark 
				   FROM sprres sprres
				   LEFT OUTER JOIN sprres_g sprres_g ON sprres.group_ = sprres_g.code
				   WHERE sprres.maincode = '" + Код + "'","ТоварИнфо",1);
				   
ПредметРасчетаАйтида 	= VAL( ТоварИнфо.rsubject );
ПредметРасчета 			= СООТВЕТСТВИЕПРЕДМЕТОВРАСЧЕТА[ ПредметРасчетаАйтида ];
СпособРасчетаАйтида 	= VAL( ТоварИнфо.paytype );
СпособРасчета 			= РМКСООТВЕТСТВИЕСПОСОБОВРАСЧЕТА[ СпособРасчетаАйтида ]; 


ТипМаркировки			= "";
ШтрихКодМаркировки		= "";

МаркированныйТовар		= ТоварИнфо.f_mark;
IF ( МаркированныйТовар )
{
	_ЕСТЬТИПМАРКИРОВКИ	= VAL( ЗАПРОС("SELECT CASE WHEN EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE (TABLE_NAME = N'sprres') AND (COLUMN_NAME = N'markgroup' ) ) THEN 1 ELSE 0 END" ) );
	IF ( _ЕСТЬТИПМАРКИРОВКИ == 1 )
	{
		ТипМаркировки	= ЗАПРОС( "SELECT markgroup FROM sprres WHERE sprres.maincode= '" + Код + "'" );
		IF ( LEN( ALLTRIM( ШТРИХКОД ) ) <= 13 )
			ШтрихКодМаркировки 	= "";
		ELSE
			ШтрихКодМаркировки	= ALLTRIM( ШТРИХКОД );
	}
}
//отладка
//ФАЙЛЗАПИСАТЬ( "d:\bc.txt", ШТРИХКОД );

//для маркированного товара подменяем признак предмета расчета автоматически
IF ( !ПУСТО( ТипМаркировки ) AND ВЕРСИЯФФД == "1.2" )
{
	IF ( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" AND ПредметРасчета == "commodity" )
		ПредметРасчета = "commodityWithMarking";
	ELSE IF	( МОДЕЛЬОБОРУДОВАНИЯ == "АТОЛДТО10" AND ПредметРасчета == "excise" )
		ПредметРасчета = "exciseWithMarking";
}

_Цена_Учет = Цена;

КоличествоТовара	= Количество;
СуммаТовара			= ROUND( summawd - 0.004, 2 ); //уменьшаем сумму позиции на 0.005 для округления в меньшую сторону
ЦенаТоварнойПозиции = Цена;
СуммаСкидкиПозиции	= Цена*Количество - СуммаТовара; //скидку будем считать как разницу между суммой со скидками произведением цены товара и количества.
//СуммаСкидкиПозиции  = ROUND( summadiscount , 2 );
//СуммаСкидкиПозиции = summadiscount;

//если это продажа по свободной цене, то обнулим скидку, иначе она будер равна 100% на такую позицию
IF (ПУСТО(Код))
	СуммаСкидкиПозиции = 0;

/*
//для отладки
СООБЩЕНИЕ("Цена учетная: " + ЦенаТоварнойПозиции + CHR(13) + CHR(10) +
		"Цена продажи: " + ЦенаПродажи + CHR(13) + CHR(10) + 
		"Сумма товара: " + СуммаТовара + CHR(13) + CHR(10) +
		"СуммаСкидкиПозиции = " + СуммаСкидкиПозиции + CHR(13) + CHR(10) +
		"summasale = " + summasale + CHR(13) + CHR(10) +
		"percentdiscount = " + percentdiscount + CHR(13) + CHR(10) +
		"summadiscount = " + summadiscount);
*/

//передадим вручную введенную цену как цену товара, если на товар не задана учетная цена
IF ( ЦенаТоварнойПозиции == 0 )
	ЦенаТоварнойПозиции = ЦенаПродажи;

_ВСЕГОСКИДКАНАЧЕК = _ВСЕГОСКИДКАНАЧЕК + СуммаСкидкиПозиции;

IF ( TYPE("ВЕРСИЯФФД") == "U" )	
	ВЕРСИЯФФД = "1.05";

ЗАПРОС( "INSERT INTO " + ИмяТаблицыСтрокЧека + " ( operation, password, mode, checktype, 
													name, quantity, price, _price_u, summa, destination, department, discounttype, discountvalue, kodn, rsubject, rvariant, marktype, markbc, ffd_version )
		 VALUES ( '" + Операция + "', '" + FROperatorProfile + "', 1, 0, '" + ЕСЛИ( !ПУСТО(ШАБЛОННАИМЕНОВАНИЯ), STDF(ШАБЛОННАИМЕНОВАНИЯ),  STDF( Наименование ) ) + "', " + STR( КоличествоТовара, 16, 3 ) + ", " + 
		 STR( ЦенаТоварнойПозиции, 16, 2 ) + ", " + STR( _Цена_Учет, 16, 2 ) + ", " + STR( СуммаТовара, 16, 2 ) + ", 0, " + ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ) + ", 0, " + 
		 STR( СуммаСкидкиПозиции, 16, 3 ) + ", '" + КодНалога + "', '" + ПредметРасчета + "', '" + СпособРасчета + "', '" + ТипМаркировки + "', '" + STDF(ШтрихКодМаркировки) + "', '" + ВЕРСИЯФФД + "' )" );

RETURN true;
