IF (TYPE("РАЗРЕШИТЬОТКЛЮЧАТЬККТ") == "U")
	РАЗРЕШИТЬОТКЛЮЧАТЬККТ = true;
	
//*обнуление переменных
РезультатЛокальнойПроверкиКМ = "";
ДанныеЛокальнойПроверки = "";
КМПроверенФН = "";
КМРезультатПроверкиФН = "";
КМПричинаОшибкиПроверкиФН = "";
ДанныеФоновойПроверки = "";
ДанныеОнлайнПроверки = "";
РезультатФоновойПроверкиГотов = false;
ФоноваяПроверкаКМВыполнена = false;
РезультатОбработкиСведенийОТоваре = "";
ИСМСведенияОТоваре = "";
КодОбработкиЗапроса = "";
//\	
РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = "";

СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ = "";
СимволПереноса = CHR(13) + CHR(10);
	
//подключаемся к ККТ
IF ( !ФР.АТОЛДТО10_ОткрытьФР( КОДОБОРУДОВАНИЯ, "Проверка массива КМ" ) ) RETURN false;

ТипЗадания		= ДАННЫЕ_JSON("type", "beginMarkingCodeValidation");

ТипОперацииЧека = ПЕРЕМЕННАЯ("ТипЧека", 0);

JSONПроверяемыйКМ	= "";
ТэгТипКодаМаркировки = ДАННЫЕ_JSON("imcType", "auto"); //определить тип КМ автоматически;
ТэгКодМаркировки = """imc"": """ + ПЕРЕКОДИРОВАТЬ(ШТРИХКОДМАРКИРОВКИ,"","BASE64") + """"; //base64-представление значения кода маркировки (тег 2000)
ТэгПланируемыйСтатус = ДАННЫЕ_JSON("itemEstimatedStatus", ЕСЛИ( ТипОперацииЧека == 0, "itemPieceSold", "itemPieceReturn") ); //1 - itemPieceSold - штучный товар, реализован;
																			//2 - itemDryForSale - мерный товар, в стадии реализации;
																			//3 - itemPieceReturn - штучный товар, возвращен;
																			//4 - itemDryReturn - часть товара, возвращена;
																			//255 - itemStatusUnchanged - статус товара, не изменился;
ТэгРежимОбработкиКМ = ДАННЫЕ_JSON("imcModeProcessing", 0); //Режим обработки кода товара (тег 2102)
//ТэгДробноеКоличествоТовара = ДАННЫЕ_JSON("itemFractionalAmount", "1/5"); //Дробное количество маркированного товара (тег 1291). Используется только для КМ в позициях без проверки в чеке
//ТэгКоличествоТовара = ДАННЫЕ_JSON("itemQuantity", КоличествоТовара); //Количество товара (тег 1023)
//ТэгМераТовара = ДАННЫЕ_JSON("itemUnits", "piece"); //Мера количества товара (тег 2108). Используется только для проверки КМ
ЖдатьОтветСервера = ДАННЫЕ_JSON("waitForResult", true); //ждать результата ответа от сервера

//JSONПроверяемыйКМ += "{" + ТэгТипКодаМаркировки + "," + ТэгКодМаркировки + "," + ТэгПланируемыйСтатус + "," + ТэгРежимОбработкиКМ + "," + ТэгКоличествоТовара + "," + ТэгМераТовара + "}";
JSONПроверяемыйКМ += "{" + ТэгТипКодаМаркировки + "," + ТэгКодМаркировки + "," + ТэгПланируемыйСтатус + "," + ТэгРежимОбработкиКМ + "," + ЖдатьОтветСервера + "}";

//формируем задание
ТекстЗадания = "{" + ТипЗадания + "," + """params"":" + JSONПроверяемыйКМ + "}";

fptr.setParam( fptr.LIBFPTR_PARAM_JSON_DATA, ТекстЗадания );
fptr.processJson( );


IF ( !ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки("Проверка КМ", false) )
{
	ФР.АТОЛДТО10_ПрерватьПроверкуКМ();
	ФР.АТОЛДТО10_ОтключитьККТ();	
	RETURN false;
}


//ОБРАБОТКА РЕЗУЛЬТАТА ЗАДАНИЯ И ЗАПИСЬ В КОНТЕКСТ ПОЗИЦИЙ ЧЕКА
РезультатЛокальнойПроверкиКМ	= fptr.getParamString( fptr.LIBFPTR_PARAM_JSON_DATA );

//результат локальной проверки в ФН
ДанныеЛокальнойПроверки = ПОЛЕ_JSON(РезультатЛокальнойПроверкиКМ, "offlineValidation", "" );

КМПроверенФН = ПОЛЕ_JSON(ДанныеЛокальнойПроверки, "fmCheck", false);
КМРезультатПроверкиФН = ПОЛЕ_JSON(ДанныеЛокальнойПроверки, "fmCheckResult", false);
КМПричинаОшибкиПроверкиФН = ПОЛЕ_JSON(ДанныеЛокальнойПроверки, "fmCheckErrorReason", false);

//получаем результат фоновой проверки
//ФоноваяПроверкаЗавершена = ФР.АТОЛДТО10_ПроверитьОкончаниеФоновойПроверки(3000); //переделал на получение результата, т.к. там так же есть реквизит со статусом готовности, а данный метод возвращал истину даже когда результаты фоновой проверки еще не готовы
ДанныеФоновойПроверки	= ФР.АТОЛДТО10_ПолучитьРезультатФоновойПроверки(3000);
IF ( !ПУСТО( ДанныеФоновойПроверки ) )
{
	РезультатФоновойПроверкиГотов = ПОЛЕ_JSON(ДанныеФоновойПроверки, "ready", false);
	ФоноваяПроверкаКМВыполнена = (РезультатФоновойПроверкиГотов == true) OR (РезультатФоновойПроверкиГотов == "true");
}

IF (!ФоноваяПроверкаКМВыполнена)
{
	WHILE ( СООБЩЕНИЕ("Результат проверки КМ в ИСМ не получен. Повторить проверку?", "Проверка КМ", 5) == 4 AND !ФоноваяПроверкаКМВыполнена )
	{
		ДанныеФоновойПроверки = ФР.АТОЛДТО10_ПолучитьРезультатФоновойПроверки(3000);
		IF ( !ПУСТО( ДанныеФоновойПроверки ) )
		{
			РезультатФоновойПроверкиГотов = ПОЛЕ_JSON(ДанныеФоновойПроверки, "ready", false);
			ФоноваяПроверкаКМВыполнена = (РезультатФоновойПроверкиГотов == true) OR (РезультатФоновойПроверкиГотов == "true");
		}
	}
}

IF ( ФоноваяПроверкаКМВыполнена )
{
	//получим результат выполнения проверки	
	//ДанныеФоновойПроверки	= ФР.АТОЛДТО10_ПолучитьРезультатФоновойПроверки();
	//ФоноваяПроверкаКМВыполнена = ПОЛЕ_JSON(ДанныеФоновойПроверки, "ready", "");
		
	//следующие реквизиты содержатся в ответе всегда
	ЗапросОКМОтправлен = ПОЛЕ_JSON(ДанныеФоновойПроверки, "sentImcRequest", "") == "true";
	ОшибкиДрайвера = ПОЛЕ_JSON(ДанныеФоновойПроверки, "driverError", "");
	КодОшибки = ПОЛЕ_JSON(ОшибкиДрайвера, "code", 0);
	ОписаниеОшибки = ПОЛЕ_JSON(ОшибкиДрайвера, "description", "");
	КраткоеНазваниеОшибки = ПОЛЕ_JSON(ОшибкиДрайвера, "error", "");
	
	
	//сперва обработаем драйверные ошибки, т.к. могли не соединиться с ККТ или с сервером ИСМ, а так же получить прочие ошибки проверки
	IF (VAL(КодОшибки) <> 0)
	{
		ДопОписание = "";
		IF (КраткоеНазваниеОшибки == "imcCheckIsRun")
			ДопОписание = "Процедура проверки уже запущена";
		ELSE IF (КраткоеНазваниеОшибки == "serverNoConnect")
			ДопОписание = "Ошибка связи. Истек таймаут на открытие соединения.";
		ELSE IF (КраткоеНазваниеОшибки == "imcCheckBreak")
			ДопОписание = "Процедура проверки прервана, процедура проверки уже запущена или соединение установлено, но сервер отклонил проверку";
		ELSE IF (КраткоеНазваниеОшибки == "imcCheckWrongState")
			ДопОписание = "Неверное состояние процесса проверки КМ. Проверьте последовательность команд.";
		ELSE IF (КраткоеНазваниеОшибки == "requestTimeout")
			ДопОписание = "Истек таймаут при отправке запроса о КМ на сервер";
		ELSE IF (КраткоеНазваниеОшибки == "responseTimeout")
			ДопОписание = "Истек таймаут при истечении времени ожидания ответа при проверке КМ";			
			
		ФР.АТОЛДТО10_ПрерватьПроверкуКМ();
		СООБЩЕНИЕ( "Ошибка " + КодОшибки + " при роверке КМ" + СимволПереноса + "Описание ошибки: " + ОписаниеОшибки + СимволПереноса + "Доп. описание: " + ДопОписание, "Ошибка проверки КМ" );		
		ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка массива КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
		RETURN false;
	}
	
	ДанныеОнлайнПроверки = ПОЛЕ_JSON(ДанныеФоновойПроверки, "onlineValidation", "");
	КодОбработкиЗапроса = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "markOperatorResponseResult", ""); //2105		
	ИСМСведенияОТоваре = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "itemInfoCheckResult", ""); //2106	
	//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
	РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ИСМСведенияОТоваре;
	
	//если код обработки запроса не равен "correct", а равен "incorrect" или "unrecognized",
	//то последующие реквизиты могут не содержаться в ответе, поэтому читать их не будем	
	ИСМСведенияОСтатусеТовара = "";
	IF (КодОбработкиЗапроса == "correct")
	{
		//запрос имеет корректный формат, в том числе корректный формат кода маркировки;
		
		РезультатыОбработкиЗапросаИСМ = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "markOperatorResponse", ""); //2005
		ИСМРезультатПроверкиКПКМ = ПОЛЕ_JSON(РезультатыОбработкиЗапросаИСМ, "responseStatus", "") == "true";
		ИСМСтатусТовараКорректен = ПОЛЕ_JSON(РезультатыОбработкиЗапросаИСМ, "itemStatusCheck", "") == "true";
				
		ИСМТипКМ = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "imcType", ""); //2100
		ИСМКМТовара = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "imcBarcode", ""); //2101
		ИСМРежимОбработкиКМ = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "imcModeProcessing", ""); //2102
		ИСМСведенияОСтатусеТовара = ПОЛЕ_JSON(ДанныеОнлайнПроверки, "markOperatorItemStatus", ""); //2109		
	}
	//УДАЛИТЬКОНТЕКСТ("ДанныеФоновойПроверки");
	
	//все данные прочитали из ответа, теперь проверим и обработаем значения
	IF (КодОбработкиЗапроса == "correct" AND ИСМСведенияОСтатусеТовара == "itemEstimatedStatusCorrect")
	{
		РезультатПодтвержденияКМ = ФР.АТОЛДТО10_ПодтвердитьРеализациюКМ();
		//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
		РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ПОЛЕ_JSON(РезультатПодтвержденияКМ, "itemInfoCheckResult", ""); //2106
		ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка массива КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
		RETURN true;
	}
	ELSE IF (КодОбработкиЗапроса == "incorrect" OR КодОбработкиЗапроса == "unrecognized")
	{
		IF ( !ПУСТО( НАИМЕНОВАНИЕТОВАРА ) )
			СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Товар: " + НАИМЕНОВАНИЕТОВАРА + СимволПереноса;
			
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результаты онлайн проверки: " + СимволПереноса;
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
		
		IF (КодОбработкиЗапроса == "incorrect")
			СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Запрос имеет некорректный формат." + СимволПереноса; 
		ELSE
			СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Указанный в запросе код маркировки имеет некорректный формат." + СимволПереноса; 
	}
			
	//обработаем сведения о товаре
	РезультатОбработкиСведенийОТоваре = ФР.АТОЛДТО10_ОбработатьСведенияОТоваре(ИСМСведенияОТоваре);
	
	//СООБЩЕНИЕ("РезультатОбработкиСведенийОТоваре = " + РезультатОбработкиСведенийОТоваре + CHR(13) + CHR(10) + "ИСМСведенияОТоваре = " + ИСМСведенияОТоваре);
	
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результат проверки товара: " + РезультатОбработкиСведенийОТоваре + СимволПереноса;	
}
ELSE
{
	ФР.АТОЛДТО10_ПрерватьПроверкуКМ();
	
	ТекстПричина = "";
	IF ( КМПричинаОшибкиПроверкиФН == "checked")
		ТекстПричина = "КМ успешно проверен в ФН";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "typeIncorrect")
		ТекстПричина = "КМ данного типа не подлежит проверке в ФН";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "noKeys")
		ТекстПричина = "ФН не содержит ключи проверки кода проверки этого КМ";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "noGS1")
		ТекстПричина = "Проверка невозможна, так как остутствуют идентификаторы применения GS1 91 и/или 92 или их формат неверный";
	ELSE IF ( КМПричинаОшибкиПроверкиФН == "other")
		ТекстПричина = "Проверка в ФН невозможна по неизвестным причинам";

	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результаты локальной проверки: " + СимволПереноса;
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Проверка КМ в ФН " + ЕСЛИ(КМПроверенФН == true OR КМПроверенФН == "true", "выполнена","не выполнена") + СимволПереноса;
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Результат проверки КМ в ФН - " + ЕСЛИ(КМРезультатПроверкиФН == true OR КМРезультатПроверкиФН == "true", "положительный","отрицательный") + СимволПереноса;
	IF ( !ПУСТО( ТекстПричина ) )
		СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Причина ошибки: " + ТекстПричина + СимволПереноса;
	
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
	СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Онлайн проверка КМ не выполнена" + СимволПереноса;
}

СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += СимволПереноса;
СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ += "Добавить КМ в чек?";
Ответ = СООБЩЕНИЕ(СООБЩЕНИЕПОЛЬЗОВАТЕЛЮ, "Проверка КМ", 4);
	
//если нажали нет, закрываем соединение с ККТ и возвращаем false
IF (Ответ == 7 )
{
	ФР.АТОЛДТО10_ОтказатьсяОтРеализацииКМ();
	ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка массива КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
	RETURN false;
}

РезультатПодтвержденияКМ = ФР.АТОЛДТО10_ПодтвердитьРеализациюКМ();
//сохраним результат проверки сведений о товаре для последующей передачи в позиции чека
РЕЗУЛЬТАТПРОВЕРКИСВЕДЕНИЙОТОВАРЕ = ПОЛЕ_JSON(РезультатПодтвержденияКМ, "itemInfoCheckResult", ""); //2106

ФР.АТОЛДТО10_ЗакрытьФРСПроверкойНаОшибки( "Проверка массива КМ", РАЗРЕШИТЬОТКЛЮЧАТЬККТ );
RETURN true;
