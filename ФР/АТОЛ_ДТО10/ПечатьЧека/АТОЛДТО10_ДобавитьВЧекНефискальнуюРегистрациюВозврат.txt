//СуммаПозиции = ROUND (КомандыЧека.quantity*КомандыЧека.price - КомандыЧека.discountvalue, 2);
//СуммаПозиции = ROUND( КомандыЧека.summa - КомандыЧека.discountvalue, 2);
СуммаПозиции 		= ROUND( КомандыЧека.summa, 2);
СуммаСкидкиПозиции	= КомандыЧека.discountvalue;
ЦенаУчетная 		= КомандыЧека._price_u;
ЦенаПродажиПозиции 	= КомандыЧека.price;
КоличествоТовара	= КомандыЧека.quantity;
ВерсияФФД			= КомандыЧека.ffd_version;
РезультатПроверкиКМ = КомандыЧека.kmcheckresult;

IF ( ТИП( "_ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА" ) == "U" )
	_ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА = true;
	
IF ( _ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА AND ЦенаУчетная == 0 )
	СуммаСкидкиПозиции = 0;
ELSE IF ( !_ФРНЕОТОБРАЖАТЬНАДБАВКИПРИНУЛЕВЫХЦЕНАХУЧЕТА AND ЦенаУчетная == 0 )
	ЦенаПродажиПозиции = ЦенаУчетная;
	
//константа. отвечающая за необходимость скрывать все наценки
IF (TYPE ("_ФРСКРЫВАТЬВСЕНАЦЕНКИ") == "U")
	_ФРСКРЫВАТЬВСЕНАЦЕНКИ = true;
		
IF (_ФРСКРЫВАТЬВСЕНАЦЕНКИ == true)
	СуммаСкидкиПозиции = 0;
	
/*
//для ККТ на 5й платформе цена позиции должна указываться уже со скидками
ЭтоПлатформа5 = VAL( ЗАПРОС("SELECT value FROM param_ex WHERE param = 'ATOLKKTPLATFORM5" + ALLTRIM(КОДОБОРУДОВАНИЯ) + "'") ) == 1;
IF (ЭтоПлатформа5)
{*/
	//09.03.2021 - изменение алгоритма пробития скидок на единый для всех платформ ККТ.
	ЦенаПродажиПозиции = ROUND(СуммаПозиции/ЕСЛИ(КоличествоТовара==0,1,КоличествоТовара), 2);
//}

IF ( ВСЕГОКРЕДИТ > 0 )
{
	IF ( ВСЕГОКРЕДИТ < СуммаЧека )
	{
		PaymentMode		= "partialPayment"; //частичный расчет и кредит
	}
	ELSE
	{
		PaymentMode		= "credit"; //передача в кредит
	}
}
ELSE
{
	PaymentMode		= КомандыЧека.rvariant;
}

IF (TYPE ("_ВЫВОДИТЬПРИЗНАКМАРКИРОВКИВБУМАЖНОМЧЕКЕ") == "U")
	_ВЫВОДИТЬПРИЗНАКМАРКИРОВКИВБУМАЖНОМЧЕКЕ = false;  //признак необходимости выводить букву [М] для товарной позиции в чеке средствами профиля. По умолчанию отключено (значение false),
													//т.к. ожидается что буква [М] будет выводиться средствами прошивки
			
// Разбор списка марок позиции
КоличествоМарок = 0;
ШтрихКодМаркировки = КомандыЧека.markbc;
IF ( !ПУСТО( ШтрихКодМаркировки ) )
{
	IF ( VAL( КомандыЧека.marktype ) <> 0 )
	{	
		
		РазделительМарок 	= "|";
		НомерСлова			= 1;
		ШтрихКодМаркировки	= РазделительМарок + ШтрихКодМаркировки;
		Марка				= ПОЛУЧИТЬСЛОВО( ШтрихКодМаркировки, РазделительМарок, НомерСлова );
			
		//подсчет количества разделителей в строке для определения количества слов
		WHILE ( !ПУСТО( Марка ) )
		{
			//обычные штрикоды пропускаем
			IF ( LEN( ALLTRIM( Марка ) ) > 13 )
			{
				КоличествоМарок++;
				Марки[ КоличествоМарок ] = Марка;					
			}			
			НомерСлова++;
			Марка			= ПОЛУЧИТЬСЛОВО( ШтрихКодМаркировки, РазделительМарок, НомерСлова );
		}		
	}
}
//\\конец разбора списка марок

//если есть более одной марки табачной продукции, то разделим строки с марками на отдельные строки чека
IF ( КоличествоМарок >= 1 )
{
	НомерМарки	= 1;
	//Цена			= СуммаПозиции/ЕСЛИ(КоличествоТовара==0,1,КоличествоТовара); //цена за единицу позиции
	//ЦенаПродажиПозиции = Цена;
	WHILE ( НомерМарки <= КоличествоМарок )
	{
		ШКМарки 		= Марки[ НомерМарки ];
		
		IF (ВерсияФФД == "1.2")
		{
			//РезультатПроверкиКМ = КомандыЧека.kmcheckresult;
			ВЫБРАТЬКОНТЕКСТ( "РезультатыОбработкиКМ" );
			ПЕРЕЙТИВНАЧАЛО( "РезультатыОбработкиКМ" );
			НАШЛИ			= false;
			
			WHILE ( !КОНЕЦКОНТЕКСТА( "РезультатыОбработкиКМ" ) && !НАШЛИ )
			{
				Нашли		= ALLTRIM( РезультатыОбработкиКМ.Штрихкод ) == ALLTRIM( ШКМарки );
				IF ( !НАШЛИ ) ПРОПУСТИТЬ( 1, "РезультатыОбработкиКМ" );
			}
			IF (НАШЛИ)
				РезультатПроверкиКМ = РезультатыОбработкиКМ.Результат;
				
			ВЫБРАТЬКОНТЕКСТ( "КомандыЧека" );
		}
		
		
		НомерМарки++;
		Количество		= 1; 
		Сумма			= ЦенаПродажиПозиции;
		СуммаСкидкиПозиции = 0; //скидки в случае разделения позиции не выводим
		
		ТекстПозицииЧека = "
		{
		""type"": ""position"",
		""name"": """ + LEFT( ФР.XMLTRANS( ЕСЛИ(_ВЫВОДИТЬПРИЗНАКМАРКИРОВКИВБУМАЖНОМЧЕКЕ == true AND !ПУСТО( КомандыЧека.markbc ), "(М) ","") + КомандыЧека.name ), 128) + """,
		""price"": " + STR( ЦенаПродажиПозиции, 16, 2 ) + ",
		""quantity"": " + Количество + ",
		""amount"": " + STR( Сумма, 16, 2 ) + ",
		""infoDiscountAmount"": " + STR( СуммаСкидкиПозиции, 16, 2 ) + ",
		""department"": " + КомандыЧека.department + ",
		""paymentMethod"": """ + PaymentMode + """,
		""paymentObject"": """ + КомандыЧека.rsubject + """,
		""tax"": {
			""type"": """ + КомандыЧека.kodn + """
		}
		";	
		
		
		//добавляем текст маркировки в позиции и завершаем объект позиции
		ТекстПозицииЧека += ФР.АТОЛДТО10_ТекстМаркировки() + "}";
		
		//добавляем полученную позицию к строкам чека
		ФР.АТОЛДТО10_ДобавитьСтрокуЧека( ПозицииЧека, ТекстПозицииЧека, ФискальныйЧек, "position", "", "", "");
		
		//уменьшим общее количество товара и сумму для случая когда в одной строке будет объединено несколько позиций с марками и без них
		//количество единиц без марок будут пробиты отдельной строкой
		КоличествоТовара -= Количество;
		СуммаПозиции -= Сумма;		
	}
}

IF ( КоличествоТовара > 0 )				
{
	ТекстПозицииЧека = "
	{
	""type"": ""position"",
	""name"": """ + LEFT( ФР.XMLTRANS( КомандыЧека.name ), 128) + """,
	""price"": " + STR( ЦенаПродажиПозиции, 16, 2 ) + ",
	""quantity"": " + КоличествоТовара + ",
	""amount"": " + STR( СуммаПозиции, 16, 2 ) + ",
	""infoDiscountAmount"": " + STR( СуммаСкидкиПозиции, 16, 2 ) + ",
	""department"": " + КомандыЧека.department + ",
	""paymentMethod"": """ + PaymentMode + """,
	""paymentObject"": """ + КомандыЧека.rsubject + """,
	""tax"": {
		""type"": """ + КомандыЧека.kodn + """
	}
	";	
	
	ТекстПозицииЧека += "}";
	//добавляем полученную позицию к строкам чека
	ФР.АТОЛДТО10_ДобавитьСтрокуЧека( ПозицииЧека, ТекстПозицииЧека, ФискальныйЧек, "position", "", "", "");
}
