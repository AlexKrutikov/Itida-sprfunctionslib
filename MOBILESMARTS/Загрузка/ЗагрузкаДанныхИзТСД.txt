//PUBLIC connector;
СистемноеСообщение("Пожалуйста, подождите. Идет загрузка данных.");
Компонента = "Cleverence.Warehouse.StorageConnector";
COMPARAMORDER(false);

IF ( TYPE("connector") <> "O" )
{
	connector = СоздатьОбъект(Компонента,1);
}	
ИмяПК="192.168.1.250";
Порт ="10501";
ИмяБД = "c3c5c2e6-4e0d-4d44-b10e-f02ba2fce25b";
Разделитель1 = ":";
Разделитель2 = "/";
СтрокаПодключения = ИмяПК+Разделитель1+Порт+Разделитель2+ИмяБД;

УДАЛЯТЬЗАГРУЖЕННЫЕДОКУМЕНТЫ = false;
Ответ = MESSAGEBOX("Удалить документы с сервера после загрузки данных?","Вопрос",4);

IF (Ответ == 6)
{
	УДАЛЯТЬЗАГРУЖЕННЫЕДОКУМЕНТЫ = true;
}
IF ( TYPE("connector") <> "O" )
{
	Сообщение("Не удалось создать объект драйвера.");
	RETURN false;
}
ELSE
{
	РезультатПодключения = connector.SelectCurrentApp(СтрокаПодключения);
	IF (РезультатПодключения == 0) 
	{
		Сообщение("Ошибка при подключении к базе MobileSmarts");
	}
}

СписокНеНайденных	= "";
СписокОбработанныхДок="";
НеСоответствиеАлкокодов="";

docType = "";				//Тип документов. Если в качестве типа документов передать пустую строку, будут возвращены документы вне зависимости от типа.
checkForFinish = true;		//Если true - возвращаются только уже обработанные пользователями документы, иначе возвращаются все документы заданного типа
//получение завершенных документов типа приемка с сервера
inDocuments = connector.GetDocuments(docType, checkForFinish);
 //получения количества выбранных документов
КолВоДок = inDocuments.Count;
indexD = 0;
ПредНдок = "";	
Строки = "";
WHILE ( indexD < КолВоДок)
{
	Document = inDocuments.Item(indexD);
	IF (TYPE(Document) == "U") 
	{
		ВИДДОКУМЕНТА = Document.DocumentTypeName;
		КОДДОКУМЕНТА		= ЕСЛИ( UPPER( ВИДДОКУМЕНТА ) == "ПРИХОД НА СКЛАД", "001",
		ЕСЛИ( UPPER( ВИДДОКУМЕНТА ) == "ПОДБОР ЗАКАЗА", "002", 
		ЕСЛИ( UPPER( ВИДДОКУМЕНТА ) == "ИНВЕНТАРИЗАЦИЯ", "007", 0 )));
		IF (КОДДОКУМЕНТА == 0)
		{
			Сообщение("С ТСД получен документ неизвестного типа");
			indexD++;
			Continue;
		}
		АЙТИДАВИДДОКУМЕНТА = "Приходная накладная";
		ИмяПоляКоличество = "realkolp"; //для приходных накладных Реальное количество
		IF (КОДДОКУМЕНТА == "002") // для расходных накладных колонка Количество
		{
			ИмяПоляКоличество = "kolp";
			АЙТИДАВИДДОКУМЕНТА = "Расходная накладная";
		}
		IF (КОДДОКУМЕНТА == "007") // для инвентаризаций колонка Количество
		{
			ИмяПоляКоличество = "kolp_real";
			АЙТИДАВИДДОКУМЕНТА = "Инвентаризация ТМЦ";
		}
				
		ИДДОКУМЕНТА = Document.Id;
		НОМЕРДОКУМЕНТА = ЗАПРОС("SELECT ndok from spr000 where identity_column='"+ИДДОКУМЕНТА+"'");
		ИДВНУТРЕННИЙДОК = ЗАПРОС("SELECT mainic from spr000 where identity_column='"+ИДДОКУМЕНТА+"'");
		ПРОВЕДЕН = ЗАПРОС("SELECT transacted from accountlist where ic='"+ИДВНУТРЕННИЙДОК+"'");
		КОДДОКУМЕНТААЙТИДА = ЗАПРОС("SELECT code from spr000 where identity_column='"+ИДДОКУМЕНТА+"'");
		IF (КОДДОКУМЕНТААЙТИДА <> КОДДОКУМЕНТА AND КОДДОКУМЕНТААЙТИДА == "045")
		{
			ИмяПоляКоличество = "kolp_real";
			КОДДОКУМЕНТА = 	КОДДОКУМЕНТААЙТИДА;
			АЙТИДАВИДДОКУМЕНТА = "Инвентаризация ЕГАИС";
		}
		ДАТАДОКУМЕНТА = Document.CreateDate;
		КолВоСтрок = 0;
		Строки = Document.CurrentItems;
		КолВоСтрок = Document.CurrentItems.Count;
		indexS = 0;
		IF (ПРОВЕДЕН == false)
		{
			WHILE ( indexS < КолВоСтрок ) //цикл по строкам документа
			{
			Элемент		= Строки.Item(indexS);
			КодТовара	= Элемент.GetField("barcode");
			Алкокод		= Элемент.GetField("АлкоКод");
			ТоварИД    	= Элемент.ProductId;
			Количество	= VAL(Элемент.CurrentQuantity);
			ШтрихКод = "";
			Товар			= ЗАПРОС( "SELECT code FROM sprres WHERE maincode = '" + STDF( ТоварИД ) + "'" );
			IF (Количество > 0)  //обрабатываем записи только с ненулевыми реальными количествами в ТСД
			{
				IF ( !ПУСТО( Товар ) )
				{
					
					КоличествоАлкокодов = 0;
					РезультатЗапроса = "";
					ДОБАВИТЬКОНТЕКСТ("SELECT alcocode FROM spec" + КОДДОКУМЕНТА + " WHERE ic=" + ИДВНУТРЕННИЙДОК + " AND nn="+Товар+" AND alcocode="+Алкокод,"СписокАлкокодовТоваров");
					//ВЫБРАТЬКОНТЕКСТ("СписокАлкокодовТовара");
					КоличествоАлкокодовТоваров = КОЛИЧЕСТВОСТРОК("СписокАлкокодовТоваров");
					ДОБАВИТЬКОНТЕКСТ("SELECT alcocode FROM spec" + КОДДОКУМЕНТА + " WHERE ic=" + ИДВНУТРЕННИЙДОК + " AND alcocode="+Алкокод,"СписокАлкокодов");
					КоличествоАлкокодов = КОЛИЧЕСТВОСТРОК("СписокАлкокодов");
					IF (КоличествоАлкокодовТоваров > 0)
					{
						ЗАПРОС( "UPDATE spec" + КОДДОКУМЕНТА + " SET " + ИмяПоляКоличество + " = " + STR( Количество, 16, 3 ) + " WHERE ic=" + ИДВНУТРЕННИЙДОК + " AND nn='" + Товар + "' AND alcocode='"+Алкокод+"'"  );
					} //IF (КоличествоАлкокодовТоваров > 0)
					ELSE
					{
						IF (КоличествоАлкокодов > 0)
						{
							ЗАПРОС( "UPDATE spec" + КОДДОКУМЕНТА + " SET " + ИмяПоляКоличество + " = " + STR( Количество, 16, 3 ) + " WHERE ic=" + ИДВНУТРЕННИЙДОК + " AND alcocode='"+Алкокод+"'"  );
							НеСоответствиеАлкокодов +="Код товара: " + ТоварИД + " Алкокод: " + Алкокод + CHR( 13 );
						}						
					} //IF (КоличествоАлкокодовТоваров) > 0
					
					IF ((КоличествоАлкокодовТоваров==0) AND (КоличествоАлкокодов==0))
					{
						ДОБАВИТЬКОНТЕКСТ("SELECT alcocode FROM sprres_egais WHERE code='"+Товар+"'","СопоставленныеАлкокоды");
						КоличествоСопоставленныхАлкокодов = КОЛИЧЕСТВОСТРОК("СопоставленныеАлкокоды");
						ЕстьАлкокод = false;
						WHILE ( !КонецКонтекста( "СопоставленныеАлкокоды" ) )
						{
							IF (Алкокод == СопоставленныеАлкокоды.alcocode)
							{
								ЕстьАлкокод = true;
							}
							ПРОПУСТИТЬ( 1, "СопоставленныеАлкокоды" );
						}
					}
					IF (ЕстьАлкокод == true)
					{
						
					}
					ELSE
					{
						СписокНеНайденных	+= "Код товара: " + ТоварИД + " Алкокод: " + Алкокод + CHR( 13 );
					}
					
					IF (ПредНдок <> ИДДОКУМЕНТА)
					{
						СписокОбработанныхДок += АЙТИДАВИДДОКУМЕНТА + " № " + НОМЕРДОКУМЕНТА + " от " + ДАТАДОКУМЕНТА + CHR( 13 );
						ПредНдок = ИДДОКУМЕНТА;
					}	
				} //IF ( !ПУСТО( Товар ) )
				ELSE
				{
					СписокНеНайденных	+= "Код товара: " + ТоварИД + " Алкокод: " + Алкокод + CHR( 13 );
				}
			} 
			indexS++;	
			} //WHILE ( indexS < КолВоСтрок )  конец цикла по строкам
		} //IF (ПРОВЕДЕН ==0)
	} //IF (TYPE(Document) == "U") 
	IF (УДАЛЯТЬЗАГРУЖЕННЫЕДОКУМЕНТЫ)
	{
		connector.RemoveDocument(ИДДОКУМЕНТА);		
	}
	indexD++;
	//ИДДОКУМЕНТА++;
} //WHILE ( indexD < КолВоДок)

IF ( !ПУСТО( СписокНеНайденных ) )
{
	//СООБЩЕНИЕ( "Следующие товары не были найдены в базе данных:" + CHR( 13 ) + СписокНеНайденных  );
	ИмяФайлаВыгрузки1		=  'C:\Users\Public\Documents\Не найдено при загрузке из ТСД ' + DTOC( Дата(), 4, "" )+'.txt';
	ФайлВыгрузки1			= ФАЙЛСОЗДАТЬ( ИмяФайлаВыгрузки1, 0 );
	ФАЙЛЗАПИСАТЬСТРОКУ( ФайлВыгрузки1, СписокНеНайденных);
	ФАЙЛЗАКРЫТЬ( ФайлВыгрузки1 );
}
IF ( !ПУСТО( НеСоответствиеАлкокодов ) )
{
	//СООБЩЕНИЕ( "По следующим товарам не соответствовали алкокоды при сканировании:" + CHR( 13 ) + СписокНеНайденных  );
	ИмяФайлаВыгрузки2		=  'C:\Users\Public\Documents\Не соотвествуют алкокоды при загрузке из ТСД ' + DTOC( Дата(), 4, "" )+'.txt';
	ФайлВыгрузки2			= ФАЙЛСОЗДАТЬ( ИмяФайлаВыгрузки2, 0 );
	ФАЙЛЗАПИСАТЬСТРОКУ( ФайлВыгрузки2, НеСоответствиеАлкокодов);
	ФАЙЛЗАКРЫТЬ( ФайлВыгрузки2 );
}
	
IF ( !ПУСТО( СписокОбработанныхДок ) )
{
	СООБЩЕНИЕ( "Следующие документы были изменены в результате загрузки данных:" + CHR( 13 ) + СписокОбработанныхДок  );
}
ELSE
{
	СООБЩЕНИЕ( "Не было обработано ни одного документа");
}
СООБЩЕНИЕ("Загрузка завершена!");
СистемноеСообщение( );
