
// Выбираем следущий запрос из очереди
КодУТМ			= ЗАПРОС( "SELECT ent, query_type, query_text, code, ic FROM egais_queryqueue WHERE identity_column= " + ИДОчереди );
ТипЗапроса		= ЗАПРОС( "", "query_type" );
ТекстЗапроса	= ЗАПРОС( "", "query_text" );
КодДокумента	= ЗАПРОС( "", "code" );
ИДДокумента		= ЗАПРОС( "", "ic" );

// Если очередь пустая
IF ( ПУСТО( КодУТМ ) ) RETURN true;
ПутьУТМ			= "";
ФайлУТМ			= "";

// В зависимости от типа запроса определяем куда положить файл в УТМ
IF ( ТипЗапроса == 24 )
{
	ПутьУТМ		= "/opt/in/QueryRestBCode";
	ФайлУТМ		= "QueryRestBCode.xml";
}
IF ( ПУСТО( ФайлУТМ ) || ПУСТО( ПутьУТМ ) ) RETURN true;

ЕГАИСИД			= ЗАПРОС( "SELECT value FROM param_ex WHERE param = 'EGAIS_ID" + КодУТМ + "'" );
ОтветСервера 	= "";

СКЛАД			= КодУТМ;
ЕГАИС.ИНИЦИАЛИЗИРОВАТЬОБМЕН( );
IF ( !ЕГАИС.HTTPCommand( "POST", ПутьУТМ, ПЕРЕКОДИРОВАТЬ( ТекстЗапроса, "ANSI", "UTF-8" ), @ОтветСервера, ФайлУТМ ) ) 
{
	// Записываем ошибку в очередь и меняем статус на ошибку
	ЗАПРОС( "UPDATE egais_queryqueue SET status = 3, reply_comment= '" + STDF( ОтветСервера, 250 ) + "' WHERE identity_column = " + ИДОчереди );
	RETURN false;
}

ДОБАВИТЬКОНТЕКСТ( "SELECT SPACE( 250 ) AS url, SPACE( 250 ) AS sign", "ПодписьУТМ" );
ЗАГРУЗИТЬ( "ПодписьУТМ", "XMLSTRING", ОтветСервера, "", "", "", "" );	

__SQL( )
{
	INSERT INTO egais_requestslist ( code, ic, request_type, request_id, request_date, request, signature ) 
	VALUES ( '[[КодДокумента]]', [[ИДДокумента]], [[ТИПЗАПРОСА]], '[[STDF( ПодписьУТМ.url, 250 )]]', GETDATE( ), '[[STDF( ТЕКСТЗАПРОСА )]]', '[[STDF( ПодписьУТМ.sign, 250 )]]' )
}

// Записываем ИД запроса в очередь и меняем статус
__SQL( )
{
	UPDATE egais_queryqueue 
	SET 
		status 			= 1, 
		query_senddate	= GETDATE( ), 
		query_id		= '[[STDF( ПодписьУТМ.url, 250 )]]', 
		reply_comment	= 'Запрос успешно отправлен в УТМ' 
		WHERE identity_column = [[ ИДОчереди ]];
}
УДАЛИТЬКОНТЕКСТ( "ПодписьУТМ" );

RETURN true;
