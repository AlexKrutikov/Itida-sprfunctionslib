ФУНКЦИЯ ЛОКАЛЬНАЯ МеркурийРазобратьТэгиТовара( Родитель, ТипТэга, Имя, Значение, ФлагЗакрытия ){	IF ( ТипТэга == "КОНЕЦАТРИБУТОВ" )	{		IF ( Имя == "dt:productItem" )		{			currentState		= "";			mProductType		= "";			mProduct			= "";			mSubproduct			= "";			mGuid				= "";			mName				= "";			mGost				= "0";			mProducer			= "";			ДОБАВИТЬСТРОКИ( 1, "Продукция" );		}		ELSE IF ( currentState == "" AND Имя == "dt:product" )			currentState		= "product";		ELSE IF ( currentState == "" AND Имя == "dt:subProduct" )			currentState		= "subproduct";		ELSE IF ( currentState == "" AND Имя == "dt:producer" )			currentState		= "producer";		ELSE IF ( ВСПИСКЕ( Имя, "dt:tmOwner", "dt:producing", "dt:packaging" ) )			currentState		= "other";	}	ELSE IF ( ТипТэга == "ТЭГ" AND ФлагЗакрытия )	{		IF ( Имя == "dt:productItem" )		{			currentState		= "";			REPLACE( "Продукция", "productType", mProductType );			REPLACE( "Продукция", "product", mProduct );			REPLACE( "Продукция", "subproduct", mSubproduct );			REPLACE( "Продукция", "guid", mGuid );			REPLACE( "Продукция", "name", mName );			REPLACE( "Продукция", "gost", mGost );			REPLACE( "Продукция", "producer", mProducer );		}		ELSE IF ( currentState == "product" AND Имя == "bs:guid" )			mProduct				= Значение;		ELSE IF ( currentState == "subproduct" AND Имя == "bs:guid" )			mSubproduct			= Значение;		ELSE IF ( currentState == "producer" AND Имя == "bs:guid" )			mProducer			= Значение;		ELSE IF ( currentState == "" AND Имя == "bs:guid" )			mGuid				= Значение;		ELSE IF ( currentState == "" AND Имя == "dt:name" )			mName				= Значение;		ELSE IF ( currentState == "" AND Имя == "dt:productType" )			mProducttype			= Значение;		ELSE IF ( currentState == "" AND Имя == "dt:correspondsToGost" )			mGost				= ЕСЛИ( Значение == "true", "1", "0" );		ELSE IF ( ВСПИСКЕ( Имя, "dt:product", "dt:subProduct", "dt:tmOwner", "dt:producing", "dt:packaging", "dt:producer" ) )			currentState		= "";	}}Меркурий.ЗагрузитьПараметры( );СИСТЕМНОЕСООБЩЕНИЕ( "Запрос информации о товарах" );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT CONVERT( int, 0 ) AS count, CONVERT( int, 0 ) AS total, CONVERT( int, 0 ) AS offset SET FMTONLY OFF", "Данные" );ДОБАВИТЬКОНТЕКСТ( "SET FMTONLY ON SELECT CONVERT( varchar( 250 ), '' ) AS productType, CONVERT( varchar( 250 ), '' ) AS product, CONVERT( varchar( 250 ), '' ) AS subproduct,										 CONVERT( varchar( 250 ), '' ) AS guid, CONVERT( varchar( 250 ), '' ) AS name, CONVERT( varchar( 250 ), '' ) AS gost,										 CONVERT( varchar( 250 ), '' ) AS producer SET FMTONLY OFF", "Продукция" );ИДЗагрузки				= ЗАПРОС( "SELECT NEWID( )" );Количество				= 0;ТекущееСмещение			= 0;ОбщееКоличество			= 0;WHILE ( Количество == 0 OR ТекущееСмещение < ОбщееКоличество ){	Количество			= 10;	Текст = "	<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:v2=""http://api.vetrf.ru/schema/cdm/registry/ws-definitions/v2"" xmlns:base=""http://api.vetrf.ru/schema/cdm/base"" xmlns:v21=""http://api.vetrf.ru/schema/cdm/dictionary/v2"">	   <soapenv:Header/>	   <soapenv:Body>		  <v2:getProductItemListRequest>			 <!--Optional:-->			 <base:listOptions>				<!--Optional:-->				<base:count>" + Количество + "</base:count>				<!--Optional:-->				<base:offset>" + ТекущееСмещение + "</base:offset>			 </base:listOptions>			 <!--Optional:-->			 <v21:businessEntity><base:guid>" + ПРОИЗВОДИТЕЛЬ + "</base:guid></v21:businessEntity>		   </v2:getProductItemListRequest>	   </soapenv:Body>	</soapenv:Envelope>	";	ОтветСервера			= Меркурий.ОтправитьЗапрос( Текст, "ПРОДУКЦИЯ" );	ЗАГРУЗИТЬ( "Данные", "XMLSTRING", ОтветСервера );	ПЕРЕЙТИВНАЧАЛО( "Данные" );		currentState		= "";	mProductType		= "";	mProduct			= "";	mSubproduct			= "";	mGuid				= "";	mName				= "";	mGost				= "0";	mProducer			= "";	РАЗОБРАТЬ_XML( ОтветСервера, "МеркурийРазобратьТэгиТовара", true );	ТекущееСмещение		= Данные.offset + Данные.count;	IF ( ОбщееКоличество == 0 )	{		ОбщееКоличество	= Данные.total;		IF ( ОбщееКоличество > 10 )			ИНДИКАТОР( "Загрузка продукции", ОбщееКоличество );	}	ELSE IF ( ОбщееКоличество > 10 )		ИНДИКАТОР( ТекущееСмещение, "Загружено " + STR( ТекущееСмещение ) + " из " + STR( ОбщееКоличество ) );			// Если нажали ESC, то прерываемся	IF ( ОБРАБОТАТЬСОБЫТИЯ( 256 ) )		_ПРЕРВАТЬВЫПОЛНЕНИЕ		= _LASTMESSAGE_WPARAM == 27;	IF ( _ПРЕРВАТЬВЫПОЛНЕНИЕ )	{		ИНДИКАТОР( );		УДАЛИТЬКОНТЕКСТ( "Данные" );		УДАЛИТЬКОНТЕКСТ( "Продукция" );		RETURN "";		}	УДАЛИТЬ( "ALL", "Данные" );}ИНДИКАТОР( );ПЕРЕЙТИВНАЧАЛО( "Продукция" );ВЫБРАТЬКОНТЕКСТ( "Продукция" );ИНДИКАТОР( "Запись полученной продукции", КОЛИЧЕСТВОСТРОК( "Продукция" ) );WHILE ( !КОНЕЦКОНТЕКСТА( "Продукция" ) ){	ИНДИКАТОР( НОМЕРСТРОКИ( "Продукция" ), "Записано " + STR( НОМЕРСТРОКИ( "Продукция" ) ) + " из " + STR( КОЛИЧЕСТВОСТРОК( "Продукция" ) ) );	// Теперь необходимо заполнить таблицу с товарами mrc_wares	НоваяПродукция		= false;		IF ( ПУСТО( Продукция.guid ) )	{		ПРОПУСТИТЬ( 1, "Продукция" );		CONTINUE;	}		НоваяПродукция	= ПУСТО( ЗАПРОС( "SELECT guid FROM mrc_wares WHERE guid= '" + guid + "'" ) );	wareguid		= Продукция.guid;	IF ( НоваяПродукция )		ЗАПРОС( "INSERT INTO mrc_wares ( productType, level1_guid, level2_guid, guid,  name, producer, correspondsToGost, loadid )				 VALUES ( " + STR( VAL( producttype ) ) + ", '" + STDF( product ) + "', '" + STDF( subproduct ) + "', '" + STDF( guid )+ "', 						 '" + STDF( name ) + "', '" + STDF( producer ) + "', " + STR( VAL( gost ) ) + ", '" + ИДЗагрузки + "' ) " );	ELSE ЗАПРОС( "UPDATE mrc_wares 				 SET 					productType			=  " + STR( VAL( producttype ) ) + ", 					level1_guid			= '" + STDF( product ) + "', 					level2_guid			= '" + STDF( subproduct ) + "', 					name				= '" + STDF( name ) + "', 					producer			= '" + STDF( producer ) + "', 					correspondsToGost	=  " + STR( VAL( gost ) ) + ",					loadid				= '" + ИДЗагрузки + "' 				 WHERE guid = '" + STDF( guid )+ "'" );	ПРОПУСТИТЬ( 1, "Продукция" );}ИНДИКАТОР( );УДАЛИТЬКОНТЕКСТ( "Данные" );УДАЛИТЬКОНТЕКСТ( "Продукция" );RETURN ИДЗагрузки;
