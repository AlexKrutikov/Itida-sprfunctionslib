// В поле ИДПроизвИмп устанавливаем уникальный номер сочетания ИНН и КПП производителя/импортера
ЗАПРОС( "UPDATE temp SET ИДПроизвИмп= temp2.ИД 
		 FROM " + ТаблицаТоваров + " temp 
		 INNER JOIN ( SELECT row_number( ) OVER ( ORDER BY КодКПП ) AS ИД, КодКПП FROM ( SELECT DISTINCT ИннПроизводителя + КПППроизводителя AS КодКПП FROM " + ТаблицаПоступлений + " UNION SELECT ИннПроизводителя + КПППроизводителя AS КодКПП FROM " + ТаблицаТоваров + " ) AS temp3 ) AS temp2 ON 
		 temp.ИннПроизводителя + temp.КПППроизводителя = temp2.КодКПП" );

// В поле ИДПроизвИмп устанавливаем уникальный номер сочетания ИНН и КПП производителя/импортера
ЗАПРОС( "UPDATE temp SET ИДПроизвИмп= temp2.ИДПроизвИмп 
		 FROM " + ТаблицаПоступлений + " temp 
		 INNER JOIN " + ТаблицаТоваров + " temp2 ON temp.ИннПроизводителя = temp2.ИннПроизводителя AND temp.КПППроизводителя = temp2.КПППроизводителя" );

// Формируем итоговую таблицу движений товаров в разрезе кодов вида продукции, производителя и подразделения
ЗАПРОС( "SELECT Подразделение, ВидПродукции, КодВидаПродукции,  ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
				SUM( ОстатокНаНачало ) AS ОстатокНаНачало, SUM( ПоступлениеОтПроизводителей ) AS ПоступлениеОтПроизводителей, 
				SUM( ПоступлениеОтОптовиков ) AS ПоступлениеОтОптовиков, SUM( ПоступлениеПоИмпорту ) AS ПоступлениеПоИмпорту, 
				SUM( ВозвратОтПокупателей ) AS ВозвратОтПокупателей, SUM( ПрочееПоступление ) AS ПрочееПоступление,
				SUM( ПоступлениеПоПеремещению ) AS ПоступлениеПоПеремещению, SUM( РасходРозница ) AS РасходРозница, 
				SUM( РасходПрочий ) AS РасходПрочий, SUM( РасходВозвратПоставщику ) AS РасходВозвратПоставщику, 
				SUM( РасходПеремещение) AS РасходПеремещение, SUM( ОстатокНаКонец ) AS ОстатокНаКонец
	     INTO " + ТаблицаДвижений + " 
		 FROM " + ТаблицаТоваров + "
		 GROUP BY Подразделение, ВидПродукции, КодВидаПродукции,  ИДПроизвИмп, НаименованиеПроизводителя, ИННПроизводителя, КПППроизводителя
		 ORDER BY Подразделение, КодВидаПродукции,  ИДПроизвИмп");				   

// В поле ИДПостав устанавливаем уникальный номер сочетания кода и КПП поставщика
ЗАПРОС( "UPDATE temp SET ИДПостав= temp2.ИД 
		 FROM " + ТаблицаПоступлений + " temp 
		 INNER JOIN ( SELECT row_number( ) OVER ( ORDER BY КодКПП ) AS ИД, КодКПП FROM ( SELECT DISTINCT КодПоставщика + КПППоставщика + ЛицензияНомер + CONVERT( char( 10 ), ЛицензияДатаВыдачи, 104 ) + 
		 CONVERT( char( 10 ), ЛицензияДатаОкончания, 104 ) + ЛицензияКемВыдана AS КодКПП FROM " + ТаблицаПоступлений + " ) AS temp3 ) AS temp2 ON 
		 temp.КодПоставщика + temp.КПППоставщика + temp.ЛицензияНомер + CONVERT( char( 10 ), temp.ЛицензияДатаВыдачи, 104 ) + CONVERT( char( 10 ), temp.ЛицензияДатаОкончания, 104 ) + temp.ЛицензияКемВыдана = temp2.КодКПП" );

// Формируем итоговую таблицу поступлений товаров в разрезе кодов вида продукции, поставщика и подразделения
ЗАПРОС("SELECT Подразделение, ВидПродукции, КодВидаПродукции, ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
				ИдПостав, КодПоставщика, ПризнакПоставщика, НаименованиеПоставщика, ИННПоставщика, КПППоставщика, ЛицензияНомер, ЛицензияДатаВыдачи, 
				ЛицензияДатаОкончания, ЛицензияКемВыдана, ДатаПоставки, НомерНакладной, НомерГТД, SUM( ОбъемПоставки ) AS ОбъемПоставки, SUM( ОбъемВозвратов ) AS ОбъемВозвратов
		INTO " + ТаблицаОбъемов + "
		FROM " + ТаблицаПоступлений + "
		GROUP BY Подразделение, ВидПродукции, КодВидаПродукции, ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
				 ИдПостав, КодПоставщика, ПризнакПоставщика, НаименованиеПоставщика, ИННПоставщика, КПППоставщика, ЛицензияНомер, ЛицензияДатаВыдачи, 
				 ЛицензияДатаОкончания, ЛицензияКемВыдана, ДатаПоставки, НомерНакладной, НомерГТД
		ORDER BY Подразделение, КодВидаПродукции, НаименованиеПроизводителя ");
