// Формируем список складов, которые находятся в указанном подразделении
IF ( АДСклады_как_подразделения )
	ДобавитьКонтекст( "SELECT skl.code, skl.name, branch.dbase 
					   FROM sprskl skl 
					   INNER JOIN sprbranch branch ON skl.branch = branch.code
					   WHERE branch.dbase <> '' AND skl.kpp = '" + Подразделение + "'", "СписокСкладов" );	
ELSE
	ДобавитьКонтекст( "SELECT skl.code, skl.name, branch.dbase 
					   FROM sprskl skl 
					   INNER JOIN sprbranch branch ON skl.branch = branch.code
					   INNER JOIN sprdepartment depart ON branch.code = depart.branch
					   WHERE depart.folder = 0 AND branch.dbase <> '' AND depart.code = '" + Подразделение + "'" + ЕСЛИ( !ПУСТО( АДСклад ), " AND skl.code IN ( " + АДСклад_список + ")", "" ), "СписокСкладов" );

Коэффициент				= "sprnn.d_litr / 10"; 
УсловиеНаФирму			= ЕСЛИ( АДФильтроватьПоФирме, "AND reg001.firm= '" + АДФирма + "'", "" );
УсловиеНаФирмуД			= ЕСЛИ( АДФильтроватьПоФирме, "AND spr.firm= '" + АДФирма + "'", "" );
УсловиеНаФирмуР			= ЕСЛИ( АДФильтроватьПоФирме, "AND reg.firm= '" + АДФирма + "'", "" );
СвойИНН					= ЗАПРОС( "SELECT inn FROM sprfirm  WHERE code= '" + АДФирма + "'" );
СкладыПодразделения		= "";
// Для каждого склада собираем остатки и обороты
СИСТЕМНОЕСООБЩЕНИЕ( "Пожалуйста, подождите. Формирование списка товаров для расчета партий." );
WHILE ( !КонецКонтекста( "СписокСкладов" ) )
{
	СкладыПодразделения	= СкладыПодразделения + ЕСЛИ( ПУСТО( СкладыПодразделения ), "", "," ) + "'" + СписокСкладов.code + "'";
	БазаДанных			= СписокСкладов.dbase + "..";
	ЗАПРОС( "
			DECLARE @period_min datetime, @period_max datetime
			SELECT @period_min		= '" + Период_min + "';
			SELECT @period_max		= '" + Период_max + "';

			-- Добавляем в список товаФормируем список товаров, для которых производитель указан непосредственно в приходной накладной
			INSERT INTO " + ПодготовительнаяТаблица + "( code, ic, client, sklad, maincode, date, kolp, saldo_in, saldo_out, importer, declar ) 
			SELECT '001', spec.ic, spr.client, '" + СписокСкладов.code + "', sprnn.maincode, spr.date, spec.kolp * spec.koef_e, 
				   spec.kolp * spec.koef_e, spec.kolp * spec.koef_e, CASE WHEN spec.importer = '' THEN sprnn.importer ELSE spec.importer END, spec.declar
			FROM " + БазаДанных + "spec001 spec 
			INNER JOIN " + БазаДанных + "spr001 spr ON spec.ic = spr.identity_column
			INNER JOIN " + БазаДанных + "accountlist alist ON alist.code = '001' AND alist.ic = spr.identity_column AND alist.account_= '" + АДУчет + "' AND alist.transacted = 1
			INNER JOIN " + БазаДанных + "sprnn sprnn ON spec.nn = sprnn.nn
			INNER JOIN sprnnvid sprnnvid ON sprnnvid.code = sprnn.nnvid
			WHERE (" + СписокСкладов.dbase + ".dbo.fn_chartoint( sprnnvid.code ) < 500 AND NOT dbo.fn_chartoint( sprnnvid.code ) IN ( 261, 262, 263 ) ) AND 
				  DATEDIFF( day, spr.date, @period_max ) >= 0 AND spr.sklad = '" + СписокСкладов.code + "' " + УсловиеНаФирмуД + "
			ORDER BY spr.date, spec.identity_column
				  
			-- Добавляем все прочие приходы, по товарам, для которых когда-то был указан производитель в приходной накладной
			INSERT INTO " + ПодготовительнаяТаблица + "( code, ic, client, sklad, maincode, date, kolp, saldo_in, saldo_out, importer, declar ) 
			SELECT reg.code, reg.ic, reg.client, '" + СписокСкладов.code + "', sprnn.maincode, reg.date, CASE WHEN reg.priz = '+' THEN reg.kolp ELSE -reg.kolp END, 
					CASE WHEN reg.priz = '+' THEN reg.kolp ELSE -reg.kolp END, CASE WHEN reg.priz = '+' THEN reg.kolp ELSE -reg.kolp END, sprnn.importer, ''
			FROM " + БазаДанных + "reg001 reg 
			INNER JOIN " + БазаДанных + "sprnn sprnn ON reg.nn = sprnn.nn
			INNER JOIN sprnnvid sprnnvid ON sprnnvid.code = sprnn.nnvid
			WHERE (" + СписокСкладов.dbase + ".dbo.fn_chartoint( sprnnvid.code ) < 500 AND NOT dbo.fn_chartoint( sprnnvid.code ) IN ( 261, 262, 263 ) ) AND 
				  ((reg.priz ='+' AND reg.kolp > 0 ) OR ( reg.priz = '-' AND reg.kolp < 0 ) ) AND reg.code <> '001' AND DATEDIFF( day, reg.date, @period_max ) >= 0 AND
					reg.account_ = '" + АДУчет + "' AND reg.sklad = '" + СписокСкладов.code + "' " + УсловиеНаФирмуР + "
			ORDER BY reg.date, reg.identity_column
			
			-- Теперь необходимо сформировать итоговый список в порядке даты прихода
			INSERT INTO " + ТаблицаТоваровДляПартий + "( code, ic, client, sklad, maincode, date, kolp, saldo_in, saldo_out, importer, declar ) 
			SELECT code, ic, client, sklad, maincode, date, kolp, saldo_in, saldo_out, importer, declar 
			FROM " + ПодготовительнаяТаблица + "
			ORDER BY date, identity_column;
			
			DELETE FROM " + ПодготовительнаяТаблица + ";

			-- Теперь необходимо достать все расходы и распределить их по приходам.

		DECLARE @identity_column int, @saldo_out float, @maincode_in char( 10 ), @importer char( 7 );
		SELECT @identity_column= 0, @saldo_out= 0, @maincode_in= '';
		
		DECLARE @code_out char( 3 ), @ic_out int, @client_out char( 7 ), @maincode_out char( 10 ), @kolp_out float, @kolp_to_out float, @date_out datetime;
		DECLARE alcoout CURSOR FOR SELECT reg.code, reg.ic, reg.date, reg.client, sprnn.maincode, CASE WHEN reg.priz = '-' THEN reg.kolp ELSE -reg.kolp END
								   FROM " + БазаДанных + "reg001 reg
								   INNER JOIN " + БазаДанных + "sprnn sprnn ON reg.nn = sprnn.nn
								   WHERE (( reg.priz = '-' AND reg.kolp > 0 ) OR ( reg.priz = '+' AND reg.kolp < 0 ) ) AND reg.code <> '001' " + УсловиеНаФирмуР + " AND 
										   reg.account_ = '" + АДУчет + "' AND reg.sklad = '" + СписокСкладов.code + "' AND DATEDIFF( day, reg.date, @period_max ) >= 0 AND
										   EXISTS( SELECT * FROM " + ТаблицаТоваровДляПартий + " temp WHERE temp.maincode = sprnn.maincode AND temp.sklad = '" + СписокСкладов.code + "' )
								   ORDER BY sprnn.maincode, reg.date;
		OPEN alcoout
		FETCH NEXT FROM alcoout INTO @code_out, @ic_out, @date_out, @client_out, @maincode_out, @kolp_out;
		WHILE @@FETCH_STATUS = 0
		BEGIN
			-- Пока не распределим весь расход, будем искать приходы
			WHILE @kolp_out > 0
			BEGIN
				-- Если сменился товар, или израсходовали предыдущий приход, то ищем новый приход для распределения
				IF @maincode_in <> @maincode_out OR @saldo_out <= 0
					SELECT TOP 1 @identity_column= identity_column, @maincode_in = maincode, @saldo_out= saldo_out, @importer = importer 
					FROM " + ТаблицаТоваровДляПартий + " temp
					WHERE temp.maincode = @maincode_out AND saldo_out > 0 AND sklad= '" + СписокСкладов.code + "' 
					ORDER BY date ;
											 
				SELECT @saldo_out = ISNULL( @saldo_out, 0 );
				
				-- Если больше нет подходящего прихода, то весь нераспределенный остаток записываем в производителя по умолчанию
				IF @saldo_out = 0
				BEGIN
					SELECT @importer = importer
					FROM " + БазаДанных + "sprnn WHERE maincode = @maincode_out;
					SELECT @kolp_to_out	= @kolp_out;
				END
				ELSE
				BEGIN
					
					SELECT @kolp_to_out	= CASE WHEN @saldo_out > @kolp_out THEN @kolp_out ELSE @saldo_out END;
					SELECT @saldo_out = @saldo_out - @kolp_to_out;
					UPDATE " + ТаблицаТоваровДляПартий + " 
					SET saldo_out 	= saldo_out - @kolp_to_out,
						saldo_in	= saldo_in - CASE WHEN @date_out >= @period_min THEN 0 ELSE @kolp_to_out END
					WHERE identity_column= @identity_column
				END
				-- Если дата расхода раньше даты начала отчета, то просто вычитаем количество из подходящего остатка, иначе, надо добавить в таблицу расходов с указанием производителя
				IF @date_out >= @period_min
					INSERT INTO " + ТаблицаТоваровДляДекларации + " ( maincode, importer, sklad, ОстатокНаНачало, ПоступлениеОтПроизводителей, ПоступлениеОтОптовиков, ПоступлениеПоИмпорту, 
																	  ВозвратОтПокупателей, ПрочееПоступление, ПоступлениеПоПеремещению, РасходРозница, РасходПрочий, РасходВозвратПоставщику, 
																	  РасходПеремещение, ОстатокНаКонец )
				VALUES ( @maincode_out, @importer, '" + СписокСкладов.code + "', 0, 0, 0, 0, 0, 0, 0, 
					   CASE WHEN @code_out = '008' OR ( @code_out = '002' AND (SELECT ttntype FROM spr002 WHERE identity_column= @ic_out ) = 0 ) THEN @kolp_to_out ELSE 0 END, 
					   CASE WHEN NOT @code_out IN ( '002', '008', '055' ) THEN @kolp_to_out ELSE 0 END, 
					   CASE WHEN @code_out = '055' OR ( @code_out = '002' AND (SELECT ttntype FROM spr002 WHERE identity_column= @ic_out ) = 1 ) THEN @kolp_to_out ELSE 0 END, 
					   CASE WHEN @code_out = '002' AND (SELECT ttntype FROM spr002 WHERE identity_column= @ic_out ) = 2 THEN @kolp_to_out ELSE 0 END, 0 )

				SELECT @kolp_out	= @kolp_out - @kolp_to_out;
			END
			FETCH NEXT FROM alcoout INTO @code_out, @ic_out, @date_out, @client_out, @maincode_out, @kolp_out;
		END
		CLOSE alcoout;
		DEALLOCATE alcoout; " );
		
	ПРОПУСТИТЬ( 1, "СписокСкладов" )  ;
}
ЗАПРОС( "
		DECLARE @period_min datetime, @period_max datetime
		SELECT @period_min		= '" + Период_min + "';
		SELECT @period_max		= '" + Период_max + "';

		-- Добавляем то что получилось в таблице приходов в расчетную таблицу
		INSERT INTO " + ТаблицаТоваров + "( Подразделение, ВидПродукции, КодВидаПродукции,  ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
											 ОстатокНаНачало, ПоступлениеОтПроизводителей, ПоступлениеОтОптовиков, ПоступлениеПоИмпорту, 
											 ВозвратОтПокупателей, ПрочееПоступление, ПоступлениеПоПеремещению,
											 РасходРозница, РасходПрочий, РасходВозвратПоставщику, РасходПеремещение, ОстатокНаКонец, ОстатокНаКонецСтарыеМарки )
		SELECT '" + Подразделение + "', sprnnvid.name, sprnnvid.code, sprclient.code, sprclient.name, sprclient.inn, sprclient.kpp, 
				CASE WHEN temp.date >= @period_min THEN 0 ELSE temp.saldo_in * " + Коэффициент + " END, 
				CASE WHEN temp.date >= @period_min AND temp.code = '001' AND sprvendor.inn <> '" + STDF( СвойИНН ) + "' AND sprvendor.f_prz = 1 THEN temp.kolp ELSE 0 END * " + Коэффициент + ", 
				CASE WHEN temp.date >= @period_min AND temp.code = '001' AND sprvendor.inn <> '" + STDF( СвойИНН ) + "' AND sprvendor.f_prz = 0 THEN temp.kolp ELSE 0 END * " + Коэффициент + ",
				CASE WHEN temp.date >= @period_min AND temp.code = '001' AND sprvendor.inn <> '" + STDF( СвойИНН ) + "' AND sprvendor.f_exp = 1 THEN temp.kolp ELSE 0 END * " + Коэффициент + ", 
				CASE WHEN temp.date >= @period_min AND temp.code = '006' THEN temp.kolp ELSE 0 END * " + Коэффициент + ", 
				CASE WHEN temp.date >= @period_min AND NOT temp.code IN ( '001', '006' ) THEN temp.kolp ELSE 0 END * " + Коэффициент + ", 
				CASE WHEN temp.date >= @period_min AND temp.code = '001' AND sprvendor.inn = '" + STDF( СвойИНН ) + "' THEN temp.kolp ELSE 0 END * " + Коэффициент + ", 
				0, 0, 0, 0, temp.saldo_out * " + Коэффициент + ", 0
		FROM " + ТаблицаТоваровДляПартий + " temp
		INNER JOIN " + БазаДанных + "sprclient sprclient ON temp.importer = sprclient.code 
		INNER JOIN " + БазаДанных + "sprclient sprvendor ON temp.client = sprvendor.code 
		INNER JOIN " + БазаДанных + "sprnn sprnn ON temp.maincode = sprnn.maincode 
		INNER JOIN sprnnvid sprnnvid ON sprnn.nnvid = sprnnvid.code
		WHERE temp.client <> ''
		
		-- Добавляем прочий приход
		INSERT INTO " + ТаблицаТоваров + "( Подразделение, ВидПродукции, КодВидаПродукции,  ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
											 ОстатокНаНачало, ПоступлениеОтПроизводителей, ПоступлениеОтОптовиков, ПоступлениеПоИмпорту, 
											 ВозвратОтПокупателей, ПрочееПоступление, ПоступлениеПоПеремещению,
											 РасходРозница, РасходПрочий, РасходВозвратПоставщику, РасходПеремещение, ОстатокНаКонец, ОстатокНаКонецСтарыеМарки )
		SELECT '" + Подразделение + "', sprnnvid.name, sprnnvid.code, sprclient.code, sprclient.name, sprclient.inn, sprclient.kpp, 
				CASE WHEN temp.date >= @period_min THEN 0 ELSE temp.saldo_in * " + Коэффициент + " END, 0, 0, 0,
				CASE WHEN temp.date >= @period_min AND temp.code = '006' THEN temp.kolp ELSE 0 END * " + Коэффициент + ", 
				CASE WHEN temp.date >= @period_min AND NOT temp.code IN ( '001', '006' ) THEN temp.kolp ELSE 0 END * " + Коэффициент + ", 0, 0, 0, 0, 0, temp.saldo_out * " + Коэффициент + ", 0
		FROM " + ТаблицаТоваровДляПартий + " temp
		INNER JOIN " + БазаДанных + "sprclient sprclient ON temp.importer = sprclient.code 
		INNER JOIN " + БазаДанных + "sprnn sprnn ON temp.maincode = sprnn.maincode 
		INNER JOIN sprnnvid sprnnvid ON sprnn.nnvid = sprnnvid.code
		WHERE temp.client = ''

		INSERT INTO " + ТаблицаТоваров + "( Подразделение, ВидПродукции, КодВидаПродукции,  ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
											ОстатокНаНачало, ПоступлениеОтПроизводителей, ПоступлениеОтОптовиков, ПоступлениеПоИмпорту, 
											ВозвратОтПокупателей, ПрочееПоступление, ПоступлениеПоПеремещению,
											РасходРозница, РасходПрочий, РасходВозвратПоставщику, РасходПеремещение, ОстатокНаКонец, ОстатокНаКонецСтарыеМарки )
		SELECT '" + Подразделение + "', sprnnvid.name, sprnnvid.code, sprclient.code, sprclient.name, sprclient.inn, sprclient.kpp, 0, 0, 0, 0, 0, 0, 0,  
				РасходРозница * " + Коэффициент + ", РасходПрочий * " + Коэффициент + ", РасходВозвратПоставщику * " + Коэффициент + ", РасходПеремещение * " + Коэффициент + ", 0, 0
		FROM " + ТаблицаТоваровДляДекларации + " temp
		INNER JOIN sprclient sprclient ON temp.importer = sprclient.code 
		INNER JOIN sprnn sprnn ON temp.maincode = sprnn.maincode 
		INNER JOIN sprnnvid sprnnvid ON sprnn.nnvid = sprnnvid.code
		
		-- Добавляем то что получилось в таблице приходов в общую таблицу приходов
		INSERT INTO " + ТаблицаПоступлений + "( Подразделение, ВидПродукции, КодВидаПродукции, ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
												КодПоставщика, ПризнакПоставщика, НаименованиеПоставщика, ИННПоставщика, КПППоставщика, ЛицензияНомер, ЛицензияДатаВыдачи, 
												ЛицензияДатаОкончания, ЛицензияКемВыдана, ДатаПоставки, НомерНакладной, НомерГТД, ОбъемПоставки, ОбъемВозвратов )
		SELECT '" + Подразделение + "', sprnnvid.name, sprnnvid.code, sprclient.code, sprclient.name, sprclient.inn, sprclient.kpp, 
			   sprvendor.code, sprvendor.priz, sprvendor.name, sprvendor.inn, CASE WHEN spr.vendor_kpp <> '' THEN spr.vendor_kpp ELSE sprvendor.kpp END, 
			   CASE WHEN spr.l_num <> '' THEN spr.l_num ELSE sprvendor.l_num END, CASE WHEN spr.l_num <> '' THEN spr.l_from ELSE sprvendor.l_from END, 
			   CASE WHEN spr.l_num <> '' THEN spr.l_to ELSE sprvendor.l_to END, CASE WHEN spr.l_num <> '' THEN spr.l_by ELSE sprvendor.l_by END, 
			   CASE WHEN spr.nknum = '' THEN spr.date ELSE spr.nkdate END, CASE WHEN spr.nknum = '' THEN spr.ndok ELSE spr.nknum END, temp.declar, temp.kolp * " + Коэффициент + ", 0
		FROM " + БазаДанных + "sprnn sprnn
		INNER JOIN sprnnvid sprnnvid ON sprnn.nnvid= sprnnvid.code
		INNER JOIN " + ТаблицаТоваровДляПартий + " temp ON sprnn.maincode = temp.maincode 
		INNER JOIN " + БазаДанных + "sprclient sprclient ON temp.importer = sprclient.code 
		INNER JOIN " + БазаДанных + "spr001 spr ON temp.ic = spr.identity_column AND temp.code = '001'
		INNER JOIN " + БазаДанных + "sprclient sprvendor ON sprvendor.code = spr.client AND sprvendor.inn <> '" + STDF( СвойИНН ) + "'
		WHERE DATEDIFF( day, spr.date, @period_min ) <= 0 AND DATEDIFF( day, spr.date, @period_max ) >= 0 AND spr.sklad IN ( " + СкладыПодразделения + " );
		
		-- Добавляем возвраты в общую таблицу приходов
		INSERT INTO " + ТаблицаПоступлений + "( Подразделение, ВидПродукции, КодВидаПродукции, ИДПроизвИмп, НаименованиеПроизводителя, ИннПроизводителя, КПППроизводителя, 
												КодПоставщика, ПризнакПоставщика, НаименованиеПоставщика, ИННПоставщика, КПППоставщика, ЛицензияНомер, ЛицензияДатаВыдачи, 
												ЛицензияДатаОкончания, ЛицензияКемВыдана, ДатаПоставки, НомерНакладной, НомерГТД, ОбъемПоставки, ОбъемВозвратов )
		SELECT '" + Подразделение + "', sprnnvid.name, sprnnvid.code, sprclient.code, sprclient.name, sprclient.inn, sprclient.kpp, 
			   sprvendor.code, sprvendor.priz, sprvendor.name, sprvendor.inn, sprvendor.kpp, sprvendor.l_num, sprvendor.l_from, 
			   sprvendor.l_to, sprvendor.l_by, spr.date, spr.ndok, '', 0, spec.kolp * spec.koef_e * " + Коэффициент + "
		FROM " + БазаДанных + "spr002 spr
		INNER JOIN " + БазаДанных + "spec002 spec ON spr.identity_column = spec.ic
		INNER JOIN " + БазаДанных + "accountlist alist ON spr.identity_column = alist.ic AND alist.code = '002' AND alist.transacted = 1 AND alist.account_='001'
		INNER JOIN " + БазаДанных + "sprnn sprnn ON spec.nn = sprnn.nn
		INNER JOIN sprnnvid sprnnvid ON sprnn.nnvid= sprnnvid.code AND NOT sprnnvid.code IN ( '261', '262', '263', '500', '510', '520' )
		INNER JOIN " + БазаДанных + "sprclient sprclient ON sprnn.importer = sprclient.code 
		INNER JOIN " + БазаДанных + "sprclient sprvendor ON sprvendor.code = spr.client AND sprvendor.inn <> '" + STDF( СвойИНН ) + "'
		WHERE DATEDIFF( day, spr.date, @period_min ) <= 0 AND DATEDIFF( day, spr.date, @period_max ) >= 0 AND spr.ttntype = 1 AND
			  spr.sklad IN ( " + СкладыПодразделения + " );
		" );

ЗАПРОС( "DELETE FROM " + ТаблицаТоваровДляПартий );
ЗАПРОС( "DELETE FROM " + ТаблицаТоваровДляДекларации );
ЗАПРОС( "DELETE FROM " + ПодготовительнаяТаблица );

УДАЛИТЬКОНТЕКСТ( "СписокСкладов" );
