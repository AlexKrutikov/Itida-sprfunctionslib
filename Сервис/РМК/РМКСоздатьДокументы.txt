// Загрзука данных и формирование документов по чекам РМК
_ERRORDESCRIPTION		= "";
_ERRORCODE				= 0;
ТЕКУЩЕЕВРЕМЯ			= TTOC( ДАТАВРЕМЯ( ) );

IF ( VAL( ЗАПРОС( "SELECT CONVERT( varchar( 128 ), SERVERPROPERTY( 'ProductVersion' ) )" ) ) < 10 )
{
	СООБЩЕНИЕ( "MS SQL сервер 2005 не поддреживает работу необходимого функционала.\nДля создания документов вам необходимо использовать форму для обмена с оборудованием." );
	RETURN false;
}

try
{
	// Настройки группировки документов берем из формы регистрации продаж
	IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT datetype, group_by_equipment, group_by_shiftnumber, storage_from_group, firm_from_group, exclude_o_shift
							 FROM sprrmkschem
							 WHERE code= '" + РМКСХЕМА + "'", "ПараметрыЗагрузки" ) ) throw;

	ИСТОЧНИКДАТЫ			= ПараметрыЗагрузки.datetype;				// 0 - дата из чека, 1 - текущая дата, 2 - дата закрытия смены
	ГРУППИРОВАТЬПОФР		= ПараметрыЗагрузки.group_by_equipment;
	ГРУППИРОВАТЬПОСМЕНАМ	= ПараметрыЗагрузки.group_by_shiftnumber;
	БРАТЬСКЛАДИЗГРУППЫ		= ПараметрыЗагрузки.storage_from_group;
	БРАТЬФИРМУИЗГРУППЫ		= ПараметрыЗагрузки.firm_from_group;
	ИСКЛЮЧИТЬОТКРЫТЫЕ		= ПараметрыЗагрузки.exclude_o_shift;
	УДАЛИТЬКОНТЕКСТ( "ПараметрыЗагрузки" );
	
	// Задача состоит в разделении строк всех загружаемых чеков по документам.
	// Делить нужно по типам документов (тип задан в самом чеке), признаку отдельного документа, номеру смены, дате, фирме, складу, контрагенту, коду оборудования
	// Создаем таблицу, в которой будем собирать отдельные документы. По ИД в этой таблице будем делить строки чеков 
	ТаблицаДокументов		= "##" + УНИКАЛЬНОЕИМЯ( );
	ТаблицаСтрок			= "##" + УНИКАЛЬНОЕИМЯ( );
	ТаблицаМодификаторов	= "##" + УНИКАЛЬНОЕИМЯ( );
	ТаблицаЧеков			= "##" + УНИКАЛЬНОЕИМЯ( );
	_ERRORCODE				= 0;
	ЗАПРОС( "CREATE TABLE " + ТаблицаДокументов + " ( code char( 3 ) DEFAULT '', id int DEFAULT 0, shiftnumber int DEFAULT 0, date datetime DEFAULT '', firm char( 7 ) DEFAULT '', 
													  cashless float DEFAULT 0, sklad char( 3 ) DEFAULT '', client char( 7 ) DEFAULT '', fr_code char( 3 ) DEFAULT '', 
													  kskod char( 3 ) DEFAULT '', identity_column int IDENTITY( 1, 1 ) ) " );
	ЗАПРОС( "CREATE TABLE " + ТаблицаСтрок + " ( spec_ic int, docic int, date datetime, type char( 3 ), paytype char( 3 ) ) " );
	ЗАПРОС( "CREATE TABLE " + ТаблицаМодификаторов + " ( docic int, type char( 3 ), paytype char( 3 ), ware char( 10 ), qty float ) " );
	ЗАПРОС( "CREATE TABLE " + ТаблицаЧеков + " ( chequelist_ic int, rid varchar( 50 ) DEFAULT '', checktype int ) " );

	// Запрашиваем список чеков, по которым не было создано документов
	ЗАПРОС( "INSERT INTO " + ТаблицаЧеков + " ( chequelist_ic, rid, checktype ) 
			 SELECT list.identity_column, list.rid, list.checktype 
			 FROM chequelist list 	
			 LEFT OUTER JOIN chequelist_processed prc ON list.rid = prc.rid
			 WHERE list.rmkschem= '" + РМКСХЕМА + "' AND list.rmk='" + РМККОД + "' AND ISNULL( prc.processed, 0 ) = 0 " +
			 ЕСЛИ( ИСКЛЮЧИТЬОТКРЫТЫЕ, "AND EXISTS(SELECT * FROM chequelist WHERE rmkschem= list.rmkschem AND rmk= list.rmk AND 
																				 checktype= 10 AND shiftnumber= list.shiftnumber AND fr_code= list.fr_code )", "" ) );
	IF ( _ERRORCODE != 0 ) throw;
			 
	IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT list.fr_code, list.ndok, list.date, list.firm, list.cur, ISNULL( eq.sklad, list.sklad ) AS sklad, list.empl, 
									CASE WHEN list.doccode IN ( '008', '046' ) THEN SPACE( 7 ) ELSE list.partner END AS client, dbo.fn_chartoint( list.checktype ) AS checktype, 
									list.doccode, list.total, list.cash, list.noncash + list.credit + list.sert + list.bonus AS cashless, list.f_separatedoc,
									list.shiftnumber, list.cardnumber, list.identity_column, list.kskod,
									CASE WHEN list.noncash <> 0 THEN '002' ELSE CASE WHEN list.credit <> 0 THEN '003' ELSE 
									CASE WHEN list.sert <> 0 THEN '004' ELSE CASE WHEN list.bonus <> 0 THEN '005' ELSE '000' END END END END AS paytype, 
									CASE WHEN dbo.fn_chartoint( list.checktype ) = 1 THEN '001' ELSE '000' END AS type
							 FROM chequelist list
							 INNER JOIN " + ТаблицаЧеков + " temp ON list.identity_column = temp.chequelist_ic
							 LEFT OUTER JOIN sprequipment eq ON eq.code = list.fr_code
							 ORDER BY list.date, list.identity_column", "Чеки" ) ) throw;

	СИСТЕМНОЕСООБЩЕНИЕ( "Обработка данных" );
	m_code 					= "";
	m_id 					= 0;
	m_shiftnumber 			= 0;
	m_date 					= "";
	m_firm 					= "";
	m_sklad 				= "";
	m_client 				= "";
	m_frcode 				= "";
	m_kskod 				= "";
	m_mainsklad 			= ЗАПРОС( "SELECT sklad FROM specrmkschem WHERE code= '" + РМКСХЕМА + "' AND element_type = 1 AND rmk= '" + РМККОД + "'" );
	m_rmkname				= ЗАПРОС( "SELECT rmkname FROM specrmkschem WHERE code= '" + РМКСХЕМА + "' AND element_type = 1 AND rmk= '" + РМККОД + "'" );
	
	m_docic					= 0;

	ИНДИКАТОР( "Загрузка данных", КОЛИЧЕСТВОСТРОК( "Чеки" ) );
	СтрокОбработано			= 0;

	WHILE ( !КОНЕЦКОНТЕКСТА( "Чеки" ) )
	{
		СкладЧека			= ЕСЛИ( !ПУСТО( Чеки.sklad ), Чеки.sklad, m_mainsklad  );
		ФирмаЧека			= ЕСЛИ( !ПУСТО( Чеки.firm ), Чеки.firm, ЗАПРОС( "SELECT firm FROM sprequipment WHERE code= '" + Чеки.fr_code + "'" ) );
		m_kskod				= ЕСЛИ( !ПУСТО( Чеки.kskod ), Чеки.kskod, ЗАПРОС( "SELECT kskod FROM sprequipment WHERE code= '" + Чеки.fr_code + "'" ) );
		СтрокОбработано++;
		ИНДИКАТОР( СтрокОбработано, "Обработано строк" );
		 
		// Не чеки продажи/возврата/покупки/возврата покупки пропускаем
		IF ( Чеки.checktype != 0 AND Чеки.checktype != 1 AND Чеки.checktype != 2 AND Чеки.checktype != 3 AND Чеки.checktype != 6 )
		{
			//------- Если нашли чек закрытия смены, и тип даты - закрытие смены, то ставим дату документов из этой смены равной дате чека закрытия
			IF ( Чеки.checktype == 10 AND ИСТОЧНИКДАТЫ == 2 )
				ЗАПРОС( "UPDATE " + ТаблицаДокументов + " SET date = '" + TTOC( Чеки.date ) + "' WHERE shiftnumber = " + STR( Чеки.shiftnumber ) );
			ПРОПУСТИТЬ( 1, "Чеки" );
			CONTINUE;
		}
		
		m_doccode		= Чеки.doccode;
		m_docic			= 0;
		// Если чеки сегодняшние, то делаем дату текущей. Если другой день, то конец дня
		m_date			= ЕСЛИ( ИСТОЧНИКДАТЫ == 0, ЕСЛИ( РАЗНИЦАДАТ( Чеки.date, ДАТА( ), "day" ) == 0, ТЕКУЩЕЕВРЕМЯ, DTOC( Чеки.date ) + " 23:59:59" ), ТЕКУЩЕЕВРЕМЯ );
		m_frcode		= ЕСЛИ( ГРУППИРОВАТЬПОФР, Чеки.fr_code, "" );
		m_shiftnumb		= ЕСЛИ( ГРУППИРОВАТЬПОСМЕНАМ, Чеки.shiftnumber, 0 );
		m_client		= Чеки.client;
		m_sklad			= СкладЧека;
		m_firm			= ФирмаЧека;
		
		// Если тип документа не указан, то определяем его по признакам типа чека и наличия кода контрагента
		IF ( ПУСТО( m_doccode ) )
		{
			// Если выбран контрагент, то может быть либо расходная накладная, либо возврат от покупателя, либо приходная накладная, 
			IF ( !ПУСТО( m_client ) )
				m_doccode	= ЕСЛИ( Чеки.checktype == 0, "002", ЕСЛИ( Чеки.checktype == 1, "006", ЕСЛИ( Чеки.checktype == 2, "001", "055" ) ) );
			ELSE
				m_doccode	= ЕСЛИ( Чеки.checktype == 0 || Чеки.checktype == 1, "008", ЕСЛИ( Чеки.checktype == 2, "001", "055" ) );
		}
		// Если нужен отдельный документ, то добавляем запись в список документов
		IF ( Чеки.f_separatedoc ) 
		{
			_ERRORCODE		= 0;
			ЗАПРОС( "INSERT INTO " + ТаблицаДокументов + " ( code, id, shiftnumber, date, firm, sklad, client, fr_code, kskod ) 
					 VALUES ( '" + m_doccode + "', " + Чеки.identity_column + ", " + Чеки.shiftnumber + ", '" + TTOC( Чеки.date ) + "', '" + m_firm + "', 
							  '" + m_sklad + "', '" + m_client + "', '" + Чеки.fr_code + "', '" + m_kskod + "' );" );
			m_docic			= ЗАПРОС( "SELECT MAX( identity_column ) FROM " + ТаблицаДокументов );
			IF ( _ERRORCODE != 0 ) throw;
		}
		// Достьаем состав чека
		IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT spec.nn, spec.s_code, spec.nnname, spec.kolp, spec.cena, spec.cena_sale, spec.summa, spec.summa_sale, spec.summa_wd, spec.ed,
										spec.koef_e, spec.koef_c, spec.identity_column AS spec_ic, modifiers
								 FROM chequespec spec 
								 WHERE spec.ic = " + Чеки.identity_column + "
								 ORDER BY spec.identity_column", "Строки" ) ) throw;
		WHILE ( !КОНЕЦКОНТЕКСТА( "Строки" ) )
		{
			_ERRORCODE			= 0;
			КодРесурса			= ЕСЛИ( ПУСТО( Строки.nn ), Строки.s_code, Строки.nn );
			Наименование		= "<товар не указан>";
			//------ Если получилось установить код товара, то определяем остальные его параметры 
			IF ( !ПУСТО( КодРесурса ) )
			{
				//------ Достаем информацию о группе товара/услуги
				IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT ISNULL( d.sklad, '' ) AS sklad, ISNULL( d.firm, '' ) AS firm			
										 FROM sprres s																				
										 LEFT OUTER JOIN sprres_g d ON s.group_ = d.code												
										 WHERE s.code = '" + КодРесурса + "'", "ТОВАРИНФО" ) ) throw;
					
				m_sklad 	= IIF( EMPTY( ТОВАРИНФО.sklad ) OR !БРАТЬСКЛАДИЗГРУППЫ, m_sklad, ТОВАРИНФО.sklad );
				m_firm		= IIF( EMPTY( ТОВАРИНФО.firm ) OR !БРАТЬФИРМУИЗГРУППЫ, m_firm, ТОВАРИНФО.firm );
				УДАЛИТЬКОНТЕКСТ( "ТОВАРИНФО" );
			}
			
			// Определяем ИД документа, либо добавляем новый
			IF ( m_docic == 0 )
			{
				// Ищем подходящий документ	
				m_docic		= ЗАПРОС( "SELECT identity_column FROM " + ТаблицаДокументов + "
									   WHERE code= '" + m_doccode + "' AND firm= '" + m_firm + "' AND sklad = '" + m_sklad + "' AND shiftnumber = " + m_shiftnumb + " AND 
											 client = '" + m_client + "' AND fr_code= '" + m_frcode + "' AND kskod= '" + m_kskod + "' AND date = '" + m_date + "' AND id >= 0" );
											 
				IF ( m_docic == 0 )
				{
					// Если подходящего документа еще нет, то добавляем
					ЗАПРОС( "INSERT INTO " + ТаблицаДокументов + " ( code, shiftnumber, date, firm, sklad, client, fr_code, kskod )
							 VALUES ( '" + m_doccode + "', " + m_shiftnumb + ", '" + m_date + "', '" + m_firm + "', 
									  '" + m_sklad + "', '" + m_client + "', '" + m_frcode + "', '" + m_kskod + "' ); " );
					m_docic		= ЗАПРОС( "SELECT MAX( identity_column ) FROM " + ТаблицаДокументов );
				}
			}
			ЗАПРОС( "INSERT INTO " + ТаблицаСтрок + " ( spec_ic, docic, date, type, paytype ) VALUES ( " + Строки.spec_ic + ", " + m_docic + ", '" + m_date + "', '" + Чеки.type + "', '" + Чеки.paytype + "')" );
			// Проставляем сумму безнала
			m_cashless			= ЕСЛИ( Чеки.total != 0, Чеки.cashless * Строки.summa_wd / Чеки.total, 0 );
			ЗАПРОС( "UPDATE " + ТаблицаДокументов + " SET cashless = cashless + " + STR( m_cashless, 20, 8 ) + " WHERE identity_column = " + m_docic );
			IF ( _ERRORCODE != 0 ) throw;
			
			// Если есть модификаторы, то добавляем их в таблицу проданных товаров без цены
			IF ( !ПУСТО( Строки.modifiers ) )
			{
				ЗАГРУЗИТЬJSON( "Модификаторы", Строки.modifiers, "Модификаторы" );
				ПЕРЕЙТИВНАЧАЛО( "Модификаторы" );
				ПОКА ( !КОНЕЦКОНТЕКСТА( "Модификаторы" ) )
				{
					mWare		= ПОЛЕ_JSON( Модификаторы.Модификаторы, "ware", "" );
					mQty		= VAL( ПОЛЕ_JSON( Модификаторы.Модификаторы, "qty", "" ) );
					IF ( !ПУСТО( mWare ) && ROUND( mQty, 3 ) != 0 )
						ЗАПРОС( "INSERT INTO " + ТаблицаМодификаторов + " ( docic, type, paytype, ware, qty ) 
								 VALUES ( " + m_docic + ", '" + Чеки.type + "', '" + Чеки.paytype + "', '" + mWare + "', " + СТРОКА( mQty, 20, 3 ) + ")" );
					ПРОПУСТИТЬ( 1, "Модификаторы" );
				}
				УДАЛИТЬКОНТЕКСТ( "Модификаторы" );
				
			}
			
			ПРОПУСТИТЬ( 1, "Строки" );
		}
		УДАЛИТЬКОНТЕКСТ( "Строки" );
		ПРОПУСТИТЬ( 1, "Чеки" );
	}
	УДАЛИТЬКОНТЕКСТ( "Чеки" );

	ИНДИКАТОР(  );
	СИСТЕМНОЕСООБЩЕНИЕ(  );

	Создано001			= 0;
	Создано002			= 0;
	Создано006			= 0;
	Создано008			= 0;
	Создано046			= 0;
	Создано055			= 0;
	Создано007			= 0;
	Создано003			= 0;
	Создано020			= 0;

	// Теперь необходимо пройти по списку обнаруженных документов и реально их создать 
	ДОБАВИТЬКОНТЕКСТ( "SELECT code, date, firm, cashless, sklad, client, fr_code, kskod, shiftnumber, identity_column FROM " + ТаблицаДокументов + " ORDER BY identity_column", "Документы" );
	
	ИНДИКАТОР( "Создание документов", КОЛИЧЕСТВОСТРОК( "Документы" ) );
	СтрокОбработано			= 0;
	WHILE ( !КОНЕЦКОНТЕКСТА( "Документы" ) )
	{
		СтрокОбработано++;
		ИДСозданного	= -1;
		
		ИНДИКАТОР( СтрокОбработано, "Создано документов" );
		// Так как запись производится синхронно в несколько таблиц, то делаем это в транзакции
		IF ( !ЗАПРОС( "BEGIN TRANSACTION" ) ) throw;
		// Очищаем код связанного документа у чеков, за одно блокируя обновления 
		IF ( !ЗАПРОС( "UPDATE clist 
					   SET 	doccode_c = '', ic_c = 0
					   FROM chequelist clist
					   INNER JOIN chequespec cspec ON clist.identity_column = cspec.ic
					   INNER JOIN " + ТаблицаСтрок + " temp ON cspec.identity_column = temp.spec_ic
					   WHERE temp.docic = " +  Документы.identity_column ) ) throw;

		IF 		( Документы.code == "001" ) ИДСозданного= Сервис.РМКСоздатьДокумент001( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, Документы.client, ТаблицаСтрок );
		ELSE IF ( Документы.code == "002" ) ИДСозданного= Сервис.РМКСоздатьДокумент002( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, Документы.client, ТаблицаСтрок, ТаблицаМодификаторов );
		ELSE IF ( Документы.code == "006" ) ИДСозданного= Сервис.РМКСоздатьДокумент006( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, Документы.client, ТаблицаСтрок, ТаблицаМодификаторов );
		ELSE IF ( Документы.code == "008" ) ИДСозданного= Сервис.РМКСоздатьДокумент008( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, Документы.kskod, Документы.shiftnumber, Документы.cashless, m_rmkname, ТаблицаСтрок, ТаблицаМодификаторов );
		ELSE IF ( Документы.code == "046" ) ИДСозданного= Сервис.РМКСоздатьДокумент046( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, ТаблицаСтрок );
		ELSE IF ( Документы.code == "055" ) ИДСозданного= Сервис.РМКСоздатьДокумент055( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, Документы.client, ТаблицаСтрок );
		ELSE IF ( Документы.code == "007" ) ИДСозданного= Сервис.РМКСоздатьДокумент007( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, ТаблицаСтрок );
		ELSE IF ( Документы.code == "003" ) ИДСозданного= Сервис.РМКСоздатьДокумент003( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, ТаблицаСтрок, ТаблицаМодификаторов );
		ELSE IF ( Документы.code == "020" ) ИДСозданного= Сервис.РМКСоздатьДокумент020( Документы.identity_column, Документы.date, Документы.firm, Документы.sklad, Документы.client, ТаблицаСтрок, ТаблицаМодификаторов );
		
		IF ( ИДСозданного <= 0 ) throw;
		
		IF 		( Документы.code == "001" ) Создано001++;
		ELSE IF ( Документы.code == "002" ) Создано002++;
		ELSE IF ( Документы.code == "006" ) Создано006++;
		ELSE IF ( Документы.code == "008" ) Создано008++;
		ELSE IF ( Документы.code == "046" ) Создано046++;
		ELSE IF ( Документы.code == "055" ) Создано055++;
		ELSE IF ( Документы.code == "007" ) Создано007++;
		ELSE IF ( Документы.code == "003" ) Создано003++;
		ELSE IF ( Документы.code == "020" ) Создано020++;

		// Проставляем связь чеков и документов
		ИмяВременнойТаблицы		= "##" + УНИКАЛЬНОЕИМЯ( );
		__SQL( )
		{
			SELECT DISTINCT c.rid INTO [[ ИмяВременнойТаблицы ]]
			FROM chequelist c
			INNER JOIN chequespec s ON c.identity_column = s.ic
			INNER JOIN [[ ТаблицаСтрок ]] t ON t.spec_ic = s.identity_column
			WHERE t.docic = [[ Документы.identity_column ]];
		
			DELETE FROM p FROM chequelist_processed p
			INNER JOIN [[ ИмяВременнойТаблицы ]] t ON t.rid = p.rid;
			
			INSERT INTO chequelist_processed ( rid, processed, doccode_c, ic_c )
			SELECT rid, 1, '[[ Документы.code ]]', [[ИДСозданного]]
			FROM [[ ИмяВременнойТаблицы ]] t;
			
			--Если все успешно, то завершаем транзакцию
			COMMIT TRANSACTION;
		}
		SQLERROR
		{
			throw;
		}
		ПРОПУСТИТЬ( 1, "Документы" );
	}
	// Проставляем признак обработки чека, для того, чтобы больше не грузился
	// Чеки закрытия смены не нужно помечать, т.к. иначе, при повторной загрузке, они не будут обработаны
//	ЗАПРОС( "UPDATE chequelist SET processed = 1 WHERE identity_column IN ( SELECT chequelist_ic FROM " + ТаблицаЧеков + " ) AND checktype <> 10" );
	__SQL( )
	{
		DELETE FROM c FROM chequelist_processed c 
		INNER JOIN [[ ТаблицаЧеков ]] temp ON c.rid = temp.rid AND c.processed = 0;
		
		INSERT INTO chequelist_processed ( rid, processed ) 
		SELECT t.rid, 1
		FROM [[ ТаблицаЧеков ]] t
		LEFT OUTER JOIN chequelist_processed c ON c.rid= t.rid
		WHERE t.checktype <> 10 AND c.rid IS NULL;
	}
	УДАЛИТЬКОНТЕКСТ( "Документы" );
	
	ВтомЧисле			= "";
	ВсегоСоздано		= Создано001 + Создано002 + Создано006 + Создано008 + Создано046 + Создано055 + Создано007 + Создано003 + Создано020;
	IF ( Создано001 != 0 )
		ВтомЧисле		+= "\nПриходных накладных: " + Создано001;
	IF ( Создано002 != 0 )
		ВтомЧисле		+= "\nРасходных накладных: " + Создано002;
	IF ( Создано006 != 0 )
		ВтомЧисле		+= "\nВозвратов от покупателей: " + Создано006;
	IF ( Создано008 != 0 )
		ВтомЧисле		+= "\nДКС: " + Создано008;
	IF ( Создано046 != 0 )
		ВтомЧисле		+= "\nВТ: " + Создано046;
	IF ( Создано055 != 0 )
		ВтомЧисле		+= "\nВозвратов поставщикам: " + Создано055;
	IF ( Создано007 != 0 )
		ВтомЧисле		+= "\nИнвентаризаций ТМЦ: " + Создано007;
	IF ( Создано003 != 0 )
		ВтомЧисле		+= "\nСписаний ТМЦ: " + Создано003;
	IF ( Создано020 != 0 )
		ВтомЧисле		+= "\nЗаказов от покупателя: " + Создано020;

	IF ( !ПУСТО( ВтомЧисле ) )
		ВтомЧисле		= "\nВ том числе:\n"  + ВтомЧисле;

	СООБЩЕНИЕ( "Данные были успешно обработаны.\nБыло создано " + ВсегоСоздано + " док." + ВтомЧисле );
}
catch ( )
{
	ЗАПРОС( "IF @@TRANCOUNT > 0 ROLLBACK" )
	СООБЩЕНИЕ( "Во время создания документов возникла ошибка:" + CHR( 13 ) + _ERRORDESCRIPTION );
	RETURN false;
}
ИНДИКАТОР( );
RETURN true;
