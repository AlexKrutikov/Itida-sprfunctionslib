
_ERRORCODE 		= 0;

_ТОЧКАЗРЕНИЯ			= ЗАПРОС( "SELECT dbo.fn_getdefaultviewpoint( )" );
СкладСписания			= СкладДокумента;
РСДокумента				= ЗАПРОС( "SELECT rs FROM sprrsfirm WHERE firm= '" + ФирмаДокумента + "' AND fmain= 1");
АвторДокумента			= ЗАПРОС( "SELECT SUSER_SNAME( )" );
ВалютаДокумента			= ЗАПРОС( "SELECT value FROM param WHERE param='cur'" );
КурсДокумента			= 1;
НомерДокумента			= "";
ФилиалДокумента			= ЗАПРОС( "SELECT branch FROM sprskl WHERE code= '" + СкладДокумента + "'" );
КатегорияЦены			= ЗАПРОС( "SELECT clev FROM sprskl WHERE code= '" + СкладДокумента + "'" );

IF ( _ERRORCODE != 0 ) RETURN -1;
				   
// Формируем список учетов для нового документа
СписокУчетов					= "";
IF ( !ДОБАВИТЬКОНТЕКСТ( "SELECT account_ FROM specviewpoints_def WHERE code = dbo.fn_getdefaultviewpoint( ) AND objcode='008' AND objtype='DOC'", "МоделиУчета") ) RETURN -1;
WHILE ( !КОНЕЦКОНТЕКСТА( "МоделиУчета" ) )
{
	СписокУчетов				+= МоделиУчета.account_;
	ПРОПУСТИТЬ( 1, "МоделиУчета" );
}
УДАЛИТЬКОНТЕКСТ( "МоделиУчета" );
СписокУчетов			= ALLTRIM( СписокУчетов );

ИДНакладной				= ЗАПРОС( "EXECUTE sp_insertdoc '008', '', '" + TTOC( ДатаДокумента ) + "', '" + НомерДокумента + "', '" + ФирмаДокумента + "', 
																'" + АвторДокумента + "', '" + ВалютаДокумента + "', '', '" + СписокУчетов + "', '" + _ТОЧКАЗРЕНИЯ + "', 0, '001'", "ident" );
																	
// Устанваливаем обязательные поля нового документа
ЗАПРОС( "UPDATE spr008 SET
			cur					= '" + ВалютаДокумента + "',
			cur_rate			=  " + КурсДокумента + ",
			firm				= '" + ФирмаДокумента + "',
			rs					= '" + РСДокумента + "',
			note				= 'Создан на основании кассовых чеков.',
			branch				= '" + ФилиалДокумента + "', 
			branch_d			= '" + ФилиалДокумента + "',
			sklad				= '" + СкладСписания + "', 
			summa				= 0,
			summasale			= 0,
			summabn				=  " + STR( СУММАБЕЗНАЛ, 20, 8 ) + ",
			kkmlist				= '" + STDF( НАЗВАНИЕРМК ) + "',
			ksnum				=  " + НОМЕРСМЕНЫ + ", 
			kskod				= '" + Карман + "',
			f_autogenerated		= 1
		WHERE identity_column = " + ИДНакладной );
		
IF ( _ERRORCODE != 0 ) RETURN -1;

// Заполняем спецификацию нового документа
__SQL( "Строки" )
{
	SELECT CONVERT( varchar( max ), ( SELECT CONVERT( varchar( 10 ), c.identity_column ) + ' '
		     FROM chequespec c
			 INNER JOIN [[ ТаблицаСтрок ]] t ON t.spec_ic = c.identity_column
			 WHERE t.docic= temp.docic AND t.type = temp.type AND t.paytype = temp.paytype AND 
				   c.nn = spec.nn AND c.s_code = spec.s_code AND c.ed = spec.ed AND c.koef_e = spec.koef_e AND 
				   c.koef_c = spec.koef_c AND ROUND( c.cena_wd, 2 ) = ROUND( spec.cena_wd, 2 ) AND ROUND( c.cena, 2 ) = ROUND( spec.cena, 2 )
			 FOR XML PATH( '' ) ) ) AS spec_iclist
	FROM chequespec spec
	INNER JOIN [[ ТаблицаСтрок ]] temp ON temp.spec_ic = spec.identity_column
	WHERE temp.docic= [[ ИДСПИСКА ]] 
	GROUP BY temp.docic, temp.type, temp.paytype, spec.nn, spec.s_code, spec.ed, spec.koef_e, spec.koef_c, ROUND( spec.cena_wd, 2 ), ROUND( spec.cena, 2 );
}
SQLERROR
{
	RETURN -1;
}

WHILE ( !КОНЕЦКОНТЕКСТА( "Строки" ) )
{
	ИДСтрок			= ЗАМЕНИТЬ( Строки.spec_iclist, " ", "," );
	IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO spec008 ( ic, type, paytype, nn, s_code, ed, kolp, koef_e, koef_c, cena, summa, cenasale, summasale, kodn, nnname )
							 SELECT " + ИДНакладной + ", temp.type, temp.paytype, spec.nn, spec.s_code, spec.ed, 
								    CASE WHEN temp.type = '000' THEN SUM( spec.kolp ) ELSE -SUM( spec.kolp ) END, spec.koef_e, spec.koef_c, ROUND( spec.cena, 2 ), 
									CASE WHEN temp.type = '000' THEN SUM( spec.summa ) ELSE -SUM( spec.summa ) END, ROUND( spec.cena_wd, 2 ), 
									CASE WHEN temp.type = '000' THEN SUM( spec.summa_wd ) ELSE -SUM( spec.summa_wd ) END, sprres.kodn, dbo.fn_fullnnname( sprres.code )
							 FROM chequespec spec
							 INNER JOIN " + ТаблицаСтрок + " temp ON temp.spec_ic = spec.identity_column
							 INNER JOIN sprres sprres ON (spec.nn <> '' AND spec.nn = sprres.code) OR (spec.s_code <> '' AND spec.s_code = sprres.code)
							 WHERE temp.docic= " + ИДСПИСКА + " AND temp.spec_ic IN ( " + ИДСтрок + " )
							 GROUP BY temp.type, temp.paytype, spec.nn, spec.s_code, spec.ed, spec.koef_e, spec.koef_c, ROUND( spec.cena, 2 ),
									  ROUND( spec.cena_wd, 2 ), sprres.kodn, sprres.code", "Спецификация" ) ) RETURN -1;
	ИДСтроки	= Спецификация.ident;
	УДАЛИТЬКОНТЕКСТ( "Спецификация" );

	IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO barcodes ( code, ic, spec_ic, nn, barcode, kolp, sklad )
							 SELECT '008', " + ИДНакладной + ", spec.identity_column, spec.nn, barcodes.barcode, 1,'" + СкладДокумента + "'
							 FROM spec008 spec, chequebarcodes barcodes
							 WHERE spec.identity_column = " + ИДСтроки + " AND barcodes.spec_ic IN ( " + ИДСтрок + " )", "ШК" ) ) RETURN -1;
	УДАЛИТЬКОНТЕКСТ( "ШК" );
	ПРОПУСТИТЬ( 1, "Строки" );
}
УДАЛИТЬКОНТЕКСТ( "Строки" );

// Добавляем модификаторы, если были
ВыражениеЦена			= "dbo.fn_calcsklad_cena( spec.ware, '" + TTOC( ДатаДокумента ) + "', '" + СкладДокумента + "', '001' )";
IF ( !ДОБАВИТЬКОНТЕКСТ( "INSERT INTO spec008 ( ic, type, paytype, nn, s_code, ed, kolp, koef_e, koef_c, cena, summa, cenasale, summasale, kodn, nnname )
							 SELECT " + ИДНакладной + ", spec.type, spec.paytype, sprres.code, '', sprres.ed, 
								    CASE WHEN spec.type = '000' THEN SUM( spec.qty ) ELSE -SUM( spec.qty ) END, 1, 1, " + ВыражениеЦена + ", 
									" + ВыражениеЦена + " * CASE WHEN spec.type = '000' THEN SUM( spec.qty ) ELSE -SUM( spec.qty ) END, 0, 0, 
									sprres.kodn, dbo.fn_fullnnname( sprres.code )
						 FROM " + ТаблицаМодификаторов + " spec
						 INNER JOIN sprres sprres ON spec.ware = sprres.code
						 WHERE spec.docic= " + ИДСПИСКА + "
						 GROUP BY spec.ware, sprres.ed, sprres.code, sprres.kodn, spec.type, spec.paytype" , "Модификаторы" ) ) RETURN -1;
УДАЛИТЬКОНТЕКСТ( "Модификаторы" );

// Устанавливаем поля Сумма в спецификации и в шапке документа
_ERRORCODE 		= 0;
ЗАПРОС( "UPDATE spr008 SET summa= (SELECT SUM( summa ) FROM spec008 WHERE ic= " + ИДНакладной + ") WHERE identity_column= " + ИДНакладной );
ЗАПРОС( "UPDATE spr008 SET summasale= (SELECT SUM( summasale ) FROM spec008 WHERE ic= " + ИДНакладной + ") WHERE identity_column= " + ИДНакладной );
IF ( _ERRORCODE != 0 ) RETURN -1;

RETURN ИДНакладной;
