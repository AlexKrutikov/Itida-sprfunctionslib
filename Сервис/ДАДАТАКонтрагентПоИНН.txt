
IF ( ТИП( "_ДАДАТАТОКЕН" ) != "C" )
	_ДАДАТАТОКЕН		= "";

IF ( ПУСТО( _ДАДАТАТОКЕН ) )
{
	MESSAGEBOX( "Для проверки контрагента по ИНН необходимо зарегистриролваться на портале www.dadata.ru и получить ТОКЕН и СЕКРЕТНЫЙ КЛЮЧ." + CHR( 13 ) + CHR( 13 ) + 
				"Полученные значения необходмио записать в константы _ДАДАТАТОКЕН и _ДАДАТАКЛЮЧ соответственно." );
	RETURN false;
}

IF ( ПУСТО( ИНН ) )
{
	СООБЩЕНИЕ( "Не указан ИНН контрагента для проверки.");
	RETURN false;
}
АдресРесурса 			= "https://suggestions.dadata.ru";
АдресПроверки 			= "/suggestions/api/4_1/rs/findById/party";
Токен 					= _ДАДАТАТОКЕН;
СекретныйКлюч 			= _ДАДАТАКЛЮЧ;
СтрокаПроверки 			= "{ ""query"": """ + ПЕРЕКОДИРОВАТЬ( ИНН, "ANSI", "UTF-8" ) + """" + 
						  ЕСЛИ( !ПУСТО( КПП ), ", ""kpp"":""" + ПЕРЕКОДИРОВАТЬ( КПП, "ANSI", "UTF-8" ) + """", "" ) + "}";
ИмяФайлаЖурнала 		= ВРЕМЕННЫЙКАТАЛОГ( ) + "http_dadata_log.txt";
  
Соединение 				= HTTPCONNECT( АдресРесурса, 443, true, ИмяФайлаЖурнала );
Заголовки[0] 			= "Content-Type: application/json";
Заголовки[1] 			= "Authorization: Token " + Токен;
Заголовки[2] 			= "X-Secret: " + СекретныйКлюч;
Ответ 					= ПЕРЕКОДИРОВАТЬ( HTTPPOST( Соединение, АдресПроверки, СтрокаПроверки, "Заголовки" ), "UTF-8", "ANSI" );
HTTPCLOSE( Соединение );

ЗАГРУЗИТЬJSON( "Данные", Ответ );
// Если вернулась ошибка, то выводим ее и выходим
IF ( ПУСТО( ЗНАЧЕНИЕПОЛЯ( "Данные", "suggestions", "" ) ) )
{
	СООБЩЕНИЕ( "Произошла ошибка. Сервер вернул сообщение об ошибке: " + CHR( 13 ) + CHR( 13 ) + ЗНАЧЕНИЕПОЛЯ( "Данные", "message", Ответ ) );
	RETURN false;
}

ЗАГРУЗИТЬJSON( "Данные", Данные.suggestions, "info" );
ПЕРЕЙТИВНАЧАЛО( "Данные" );
WHILE ( !КОНЕЦКОНТЕКСТА( "Данные" ) )
{
	ЗАГРУЗИТЬJSON( "Строка", Данные.info );
	ЗАГРУЗИТЬJSON( "Строка", ЗНАЧЕНИЕПОЛЯ( "Строка", "data", "" ) );
	ЗАГРУЗИТЬJSON( "Статус", ЗНАЧЕНИЕПОЛЯ( "Строка", "state", "" ) );
	ЗАГРУЗИТЬJSON( "Руководитель", ЗНАЧЕНИЕПОЛЯ( "Строка", "management", "" ) );
	ЗАГРУЗИТЬJSON( "Название", ЗНАЧЕНИЕПОЛЯ( "Строка", "name", "" ) );
	ЗАГРУЗИТЬJSON( "Адрес", ЗНАЧЕНИЕПОЛЯ( "Строка", "address", "" ) );
	КПП				= ЗНАЧЕНИЕПОЛЯ( "Строка", "kpp", "" );
	ТИПФФИЛИАЛА		= ЗНАЧЕНИЕПОЛЯ( "Строка", "branch_type", "" );
	ИНН				= ЗНАЧЕНИЕПОЛЯ( "Строка", "inn", "" );
	ОГРН			= ЗНАЧЕНИЕПОЛЯ( "Строка", "ogrn", "" );
	ОКПО			= ЗНАЧЕНИЕПОЛЯ( "Строка", "okpo", "" );
	ОКВЭД			= ЗНАЧЕНИЕПОЛЯ( "Строка", "okved", "" );
	ТЕЛЕФОН			= ЗНАЧЕНИЕПОЛЯ( "Строка", "phones", "" );
	ПОЧТА			= ЗНАЧЕНИЕПОЛЯ( "Строка", "emails", "" );
	
	СОСТОЯНИЕ		= ЗНАЧЕНИЕПОЛЯ( "Статус", "status", "" );
	ДИРЕКТОР		= ЗНАЧЕНИЕПОЛЯ( "Руководитель", "name", "" );
	ДОЛЖНОСТЬ		= ЗНАЧЕНИЕПОЛЯ( "Руководитель", "post", "" );
	
	ПОЛНОЕ			= ЗНАЧЕНИЕПОЛЯ( "Название", "full_with_opf", "" );
	КРАТКОЕ			= ЗНАЧЕНИЕПОЛЯ( "Название", "short_with_opf", "" );
	АДРЕС			= ЗНАЧЕНИЕПОЛЯ( "Адрес", "value", "" );

	ЗАПРОС( "INSERT INTO " + ИМЯТАБЛИЦЫ + " ( kpp, branch_type, inn, ogrn, okpo, okved, phones, emails, status, manager, title, full_with_opf, short_with_opf, address )
			 VALUES ( '" + STDF( КПП, 250 ) + "', '" + STDF( ТИПФФИЛИАЛА, 250 ) + "', '" + STDF( ИНН, 250 ) + "', '" + STDF( ОГРН, 250 ) + "', '" + STDF( ОКПО, 250 ) + "', 
					  '" + STDF( ОКВЭД, 250 ) + "', '" + STDF( ТЕЛЕФОН, 250 ) + "', '" + STDF( ПОЧТА, 250 ) + "', '" + STDF( СОСТОЯНИЕ, 250 ) + "', '" + STDF( ДИРЕКТОР, 250 ) + "', 
					  '" + STDF( ДОЛЖНОСТЬ, 250 ) + "', '" + STDF( ПОЛНОЕ, 250 ) + "', '" + STDF( КРАТКОЕ, 250 ) + "', '" + STDF( АДРЕС, 250 ) + "' )" );

	ПРОПУСТИТЬ( 1, "Данные" );
}
УДАЛИТЬКОНТЕКСТ( "Строка" );
УДАЛИТЬКОНТЕКСТ( "Статус" );
УДАЛИТЬКОНТЕКСТ( "Руководитель" );
УДАЛИТЬКОНТЕКСТ( "Название" );
УДАЛИТЬКОНТЕКСТ( "Адрес" );
УДАЛИТЬКОНТЕКСТ( "Данные" );
RETURN true;
