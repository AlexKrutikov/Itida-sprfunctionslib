PUBLIC ИмяФайлаЖурнала, _АДРЕССЕРВЕРАБИФИТ, _ЛОГИНБИФИТ, _ПАРОЛЬБИФИТ, КоличествоТоваровВОдномЗапросе, _ОБОРУДОВАНИЕНАИМЕНОВАНИЕ;

//адрес сервера Бифит
_АДРЕССЕРВЕРАБИФИТ = "https://kassa.bifit.com";
//переменная отвечает за количество товаров, отправляемых в облако за один запрос
КоличествоТоваровВОдномЗапросе = 500;
//получим необходимые для авторизации данные из карточки торгового оборудования и проверим их заполнение
ДОБАВИТЬКОНТЕКСТ("SELECT login, password, name, firm, sklad, serialnumber, regnumber, ex_code FROM sprequipment WHERE code = '" + ALLTRIM(КОДОБОРУДОВАНИЯ) + "'", "ДанныеОборудования", 1);

_ЛОГИНБИФИТ = ДанныеОборудования.login;
_ПАРОЛЬБИФИТ = ДанныеОборудования.password;
_ФИРМА = ДанныеОборудования.firm;
_ОБОРУДОВАНИЕНАИМЕНОВАНИЕ = ДанныеОборудования.name;

_ФИРМАИНН = "";
_ФИРМАНАИМЕНОВАНИЕ = "";
_ФИРМАКОД = "";

IF ( ПУСТО( _ЛОГИНБИФИТ ) OR ПУСТО( _ПАРОЛЬБИФИТ ) )
{
	_КОДОШИБКИ			= "001";
	_ТЕКСТОШИБКИ		= "Не указаны логин и/или пароль в карточке торгового оборудования """ + ALLTRIM(_ОБОРУДОВАНИЕНАИМЕНОВАНИЕ) + """ ";
	СООБЩЕНИЕ(_ТЕКСТОШИБКИ);
	RETURN false;
}

IF ( ПУСТО( _ФИРМА ) )
{
	_КОДОШИБКИ			= "002";
	_ТЕКСТОШИБКИ		= "Не указана организация в карточке торгового оборудования """ + ALLTRIM(_ОБОРУДОВАНИЕНАИМЕНОВАНИЕ) + """ ";
	СООБЩЕНИЕ(_ТЕКСТОШИБКИ);
	RETURN false;
}
ELSE
{
	ДОБАВИТЬКОНТЕКСТ("SELECT inn, code, name FROM sprfirm WHERE code = '" + ALLTRIM(ДанныеОборудования.firm) + "'", "ДанныеОрганизации", 1);
	_ФИРМАИНН = ALLTRIM(ДанныеОрганизации.inn);
	_ФИРМАНАИМЕНОВАНИЕ = ALLTRIM(ДанныеОрганизации.name);
	_ФИРМАКОД = ALLTRIM(ДанныеОрганизации.code);
	IF (ПУСТО( _ФИРМАИНН ))
	{
		_КОДОШИБКИ			= "002";
		_ТЕКСТОШИБКИ		= "Не указана ИНН в карточке организации """ + ALLTRIM(_ФИРМАНАИМЕНОВАНИЕ) + """ (" + ALLTRIM(_ФИРМАКОД) + ") ";
		СООБЩЕНИЕ(_ТЕКСТОШИБКИ);
		RETURN false;
	}
}
/*
IF ( ПУСТО( ДанныеОборудования.sklad ) )
{
	_КОДОШИБКИ			= "003";
	_ТЕКСТОШИБКИ		= "Не указан склад в карточке торгового оборудования """ + ALLTRIM(ДанныеОборудования.name) + """ ";
	СООБЩЕНИЕ(_ТЕКСТОШИБКИ);
	RETURN false;
}
*/


//Логирование
//определим расположение файла лога
ИмяФайлаЖурнала = RESTAPI.БИФИТ_ИМЯФАЙЛАЖУРНАЛА(path_out);
ИмяФайлаОбмена = RESTAPI.БИФИТ_ФАЙЛОБМЕНА(path_out, "ВЫГРУЗКАCSV");

//АВТОРИЗАЦИЯ
БифитТокен = RESTAPI.БИФИТ_АВТОРИЗАЦИЯ(_ЛОГИНБИФИТ, _ПАРОЛЬБИФИТ);
//если не получили токен, то прерываем выгрузку
IF (ПУСТО(БифитТокен)) RETURN "";

ОрганизацияИД = "";
//ПОЛУЧЕНИЕ СПИСКА ОРГАНИЗАЦИЙ
СписокОрганизаций = RESTAPI.БИФИТ_POSTЗАПРОС(_АДРЕССЕРВЕРАБИФИТ, "/cashdesk-api/v1/protected/organizations/list/read", "", БифитТокен, "");

//если не получили список организаций, то прерываем выгрузку, т.к. товар будет не привязать к орагнизации
IF ( ПУСТО(СписокОрганизаций) ) RETURN false;

НАШЛИ			= false;
ЗАГРУЗИТЬJSON( "БифитОрганизации", СписокОрганизаций, "БифитОрганизация" );
ВЫБРАТЬКОНТЕКСТ("БифитОрганизации");
WHILE (!КОНЕЦКОНТЕКСТА("БифитОрганизации") && !НАШЛИ)
{
	ЗАГРУЗИТЬJSON("Организация", ЗНАЧЕНИЕПОЛЯ("БифитОрганизации","БифитОрганизация"));
	ОрганизацияИД = ЗНАЧЕНИЕПОЛЯ( "Организация", "id" );
	ОрганизацияИмя = ЗНАЧЕНИЕПОЛЯ( "Организация", "name" );
	ОрганизацияИНН = ЗНАЧЕНИЕПОЛЯ( "Организация", "inn" );
	НАШЛИ		= ALLTRIM( ОрганизацияИНН )  == _ФИРМАИНН;
	
	IF ( !НАШЛИ ) ПРОПУСТИТЬ( 1, "БифитОрганизации" );
}
IF (!НАШЛИ)
{
	ТекстОшибки = "Организация, выбранная в карточке обоудования, не найдена в ЛК Бифит." + CHR(13) + "Проверьте правильность занесения ИНН организации в ЛК Бифит и в карточке фирмы в Айтиде." ;
	СООБЩЕНИЕ(ТекстОшибки);
	RETURN false;
}
ELSE СИСТЕМНОЕСООБЩЕНИЕ("Найдена организация: " + ALLTRIM(ОрганизацияИмя) + "(" + ALLTRIM(ОрганизацияИД) + ")" );

//ОЧИСТКА ПЕРЕД ЗАГРУЗКОЙ
IF (ПРИЗНАКОЧИСТКИККМ)
	ОТВЕТ = RESTAPI.БИФИТ_POSTЗАПРОС(_АДРЕССЕРВЕРАБИФИТ, "/cashdesk-api/v1/protected/nomenclatures/list/delete?organization_id=" + ОрганизацияИД + "", "", БифитТокен, "");
	
//начало формиррования файла и отправка

КоличествоТоваровНовые = 0;

КоличествоЭлементов = ЗАПРОС("SELECT count(code) FROM " + ТОВАРЫ);
СООТВЕТСТВИЕНАЛОГОВ[0] = "";	//Без НДС
СООТВЕТСТВИЕНАЛОГОВ[1] = "10";	//НДС 10%
СООТВЕТСТВИЕНАЛОГОВ[2] = "";	//Без НДС
СООТВЕТСТВИЕНАЛОГОВ[3] = "";	//Без НДС
СООТВЕТСТВИЕНАЛОГОВ[4] = "20";	//НДС 20%
СООТВЕТСТВИЕНАЛОГОВ[5] = "";	//Без НДС
СООТВЕТСТВИЕНАЛОГОВ[6] = "0";	//НДС 0%

_ЕСТЬМАРКИРОВКА	= VAL(ЗАПРОС("SELECT CASE WHEN EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE (TABLE_NAME = N'sprres') AND (COLUMN_NAME = N'f_mark')) THEN 1 ELSE 0 END"));
_ЕСТЬТИПМАРКИРОВКИ	= VAL( ЗАПРОС("SELECT CASE WHEN EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE (TABLE_NAME = N'sprres') AND (COLUMN_NAME = N'markgroup')) THEN 1 ELSE 0 END") );

СтрокаЗаголовка = "ID;NAME;GROUP;PRICE;VENDOR_CODE;PURCHASE_PRICE;WEIGHTED;NDS;PAYMENT_SUBJECT;BARCODE;UNIT_CODE;ALCOHOL;MARK_TYPE;GROUPED;MODIFIERS;INGREDIENTS;GOOD_TYPE";

//записываем первую строку с заголовками в файл
ФайлОбмена	= ФАЙЛОТКРЫТЬ( ИмяФайлаОбмена, 1, 1 );
ФАЙЛУСТАНОВИТЬУКАЗАТЕЛЬ( ФайлОбмена, 0, 0, 2 );
ФАЙЛЗАПИСАТЬСТРОКУ( ФайлОбмена, ПЕРЕКОДИРОВАТЬ(СтрокаЗаголовка, "ANSI", "UTF-8"));
//ФАЙЛЗАПИСАТЬСТРОКУ( ФайлОбмена, СтрокаЗаголовка);
ФАЙЛЗАКРЫТЬ( ФайлОбмена );

ДОБАВИТЬКОНТЕКСТ("SELECT temp.code AS id, temp.barcode, temp.name, temp.cname, temp.cena, temp.kolp, temp.kodn, temp.article, spr.fractqty AS weighted,
				CASE WHEN spr.d_litr <> 0 THEN STR( spr.d_litr, 10, 3 ) + ' ' + spr.edd_litr 
					 WHEN spr.weight <> 0 THEN STR( spr.weight, 10, 3 ) + ' ' + spr.ed_weight
					 ELSE '' END AS volweight,
					 spr.nnvid, spr.d_litr, spr.a_proc, dbo.fn_getalcocodes(spr.code) as alcocodes, spr.ed AS ed, (SELECT TOP 1 ex_code FROM spredn WHERE code = spr.ed) AS ed_code,
					 " + ЕСЛИ(_ЕСТЬМАРКИРОВКА==1, "spr.f_mark", "0") + " AS f_mark, " + ЕСЛИ(_ЕСТЬТИПМАРКИРОВКИ==1, "spr.markgroup", "0") + " AS markgroup,
					 dbo.fn_getpath( 'S02', '0000000001', spectree.parent, '#', 0) AS fullpath, ISNULL(sprg.rsubject,1) AS rsubject
				FROM " +  Товары + " temp 
				INNER JOIN sprres spr ON spr.maincode = temp.code
				INNER JOIN spectree spectree ON spectree.ic = spr.identity_column AND spectree.code= '0000000001' AND spectree.folder = 0
				LEFT JOIN sprres_g sprg ON sprg.code = spr.group_","СписокТоваров");

ВЫБРАТЬКОНТЕКСТ( "СписокТоваров" );
КоличествоСтрокОбщее = КоличествоСтрок("СписокТоваров");
Индикатор("Выгрузка товаров",КоличествоСтрокОбщее);
КоличествоСтрок=0;

ПЕРЕЙТИВНАЧАЛО("СписокТоваров");
WHILE ( !КОНЕЦКОНТЕКСТА( "СписокТоваров" ) )
{
	//СИСТЕМНОЕСООБЩЕНИЕ( "Пожалуйста, подождите.");
	//индикатор
	КоличествоСтрок++;
	if ( КоличествоСтрок % 10 == 0 ) Индикатор( КоличествоСтрок, " Выгрузка товаров. Обработка " + Alltrim(КоличествоСтрок) + " из " + ALLTRIM(КоличествоСтрокОбщее) + "" );
	//индикатор
	IF (!ТОВАРЫБЕЗЦЕНЫ AND VAL(СписокТоваров.cena) == 0)
	{
		ПРОПУСТИТЬ(1, "СписокТоваров");
		CONTINUE;
	}
	uuid = СписокТоваров.id;
	IF (ПУСТО(uuid))
	{
		ПРОПУСТИТЬ(1, "СписокТоваров");
		CONTINUE;
	}	
	
	mCode = ALLTRIM( СписокТоваров.id );  //код
	barCodes[0] = ALLTRIM( СписокТоваров.barcode ); //массив штрихкодов
	
	НаименованиеТовара = СписокТоваров.name;
	НаименованиеКраткое = СписокТоваров.cname;
	
	WHILE ( ЛЕВСИМВ(НаименованиеТовара, 1) == """" )
	{
		НаименованиеТовара = ПРАВСИМВ( НаименованиеТовара, LEN( НаименованиеТовара) - 1 );
	}
		
	WHILE ( ЛЕВСИМВ(НаименованиеКраткое, 1) == """" )
	{
		НаименованиеКраткое = ПРАВСИМВ( НаименованиеКраткое, LEN( НаименованиеКраткое) - 1 );	
	}
	
	mName			= RESTAPI.XMLTRANS( НаименованиеТовара + ЕСЛИ( IN_PARAM_NAME_WEIGHT == 0, "", " " + ALLTRIM( СписокТоваров.volweight ) ) );
	// Краткое наименование используется для чека
	mCname			= RESTAPI.XMLTRANS( НаименованиеКраткое + ЕСЛИ( IN_PARAM_NAME_WEIGHT == 0, "", " " + ALLTRIM( СписокТоваров.volweight ) ) );
	// Пивную продукцию теперь не выгружаем как алкоголь
	ПивнаяПродукция	= VAL( СписокТоваров.nnvid ) >= 500 OR ВСПИСКЕ( VAL( СписокТоваров.nnvid ), 261, 262, 263 );
	mAlco			= VAL( СписокТоваров.nnvid ) > 0 AND !ПивнаяПродукция;
	mNNVid			= СписокТоваров.nnvid;
	mVolume			= СписокТоваров.d_litr;
	mAProc			= СписокТоваров.a_proc;
	alcoCodes[0] 	= СписокТоваров.alcocodes; //массив алкокодов
	mEdn			= СписокТоваров.ed_code;
	mWeighted		= ЕСЛИ(СписокТоваров.weighted, 1, 0);
	price 			= STRTRANC(STR( СписокТоваров.cena, 8, 2 ),".",","); //цена продажи
	costPrice		= 0; //закупочная цена
		
	КоличествоТоваровНовые++;
		
	tax = ЕСЛИ( f_nalogs, СООТВЕТСТВИЕНАЛОГОВ[VAL( СписокТоваров.kodn )], ""); //налоги
	articleNumber = RESTAPI.XMLTRANS( СписокТоваров.article ); //артикул
	markType = ЕСЛИ(ПивнаяПродукция,"1", ЕСЛИ(mAlco,"1", "0")); //тип товара
	IF ( !ПУСТО(СписокТоваров.f_mark) AND СписокТоваров.f_mark <> 0 )
	{
		ТипМаркировки = СписокТоваров.markgroup;
		IF ( VAL( ТипМаркировки ) == 5 ) //табачная продукция
		{
			markType = "2";			
		}
		ELSE IF ( VAL( ТипМаркировки ) == 1520 ) //обувь
		{
			markType = "3";			
		}
		ELSE IF ( VAL( ТипМаркировки ) == 9995 ) //парфюм
		{
			markType = "5";
		}
		ELSE IF ( ТипМаркировки == "0002" ) //СИЗ
		{
			markType = "4";			
		}
		ELSE
		{
			markType = "6";			
		}
	}
	adultsOnly	= ПивнаяПродукция OR mAlco;
	fullpath	= СписокТоваров.fullpath;
	mfullpath	= STRTRANC(fullpath, "Справочник#", "");
	payment_subject	= ЕСЛИ( ПУСТО( СписокТоваров.rsubject ), 1, СписокТоваров.rsubject );
	mBarcodes	= STRTRANC(barCodes[0],",", "|");
	ТипТовара	= "DEFAULT";
	
	СтрокаТовара = uuid + ";" + mName + ";" + mfullpath + ";" + price + ";" + articleNumber + ";" + costPrice + ";" + 
		mWeighted + ";" + tax + ";" + payment_subject + ";" + mBarcodes + ";" + mEdn + ";" + ЕСЛИ(ПивнаяПродукция OR mAlco, "1", "0") + 
		";" + markType + ";;;;" + ТипТовара;
		
	ФайлОбмена	= ФАЙЛОТКРЫТЬ( ИмяФайлаОбмена, 1, 1 );
	ФАЙЛУСТАНОВИТЬУКАЗАТЕЛЬ( ФайлОбмена, 0, 0, 2 );
	ФАЙЛЗАПИСАТЬСТРОКУ( ФайлОбмена, ПЕРЕКОДИРОВАТЬ(СтрокаТовара, "ANSI", "UTF-8"));
	//ФАЙЛЗАПИСАТЬСТРОКУ( ФайлОбмена, СтрокаТовара);
	ФАЙЛЗАКРЫТЬ( ФайлОбмена );
		
	ПРОПУСТИТЬ(1, "СписокТоваров");
}

УДАЛИТЬКОНТЕКСТ( "СписокТоваров" );


Ответ = "";
Граница				= "------------------------975764a1c0b00c61";

ФайлОбмена	= ФАЙЛОТКРЫТЬ( ИмяФайлаОбмена, 1, 1 );
ФАЙЛУСТАНОВИТЬУКАЗАТЕЛЬ(ФайлОбмена, 0);
СТРОКАДАННЫХ = ФАЙЛПРОЧИТАТЬ(ФайлОбмена, "S", ФАЙЛРАЗМЕР(ФайлОбмена) );
ФАЙЛЗАКРЫТЬ( ФайлОбмена );

СТРОКАДЛЯОТПРАВКИ	= "--" + Граница + CHR( 13 ) + CHR( 10 ) + "Content-Disposition: form-data; name=""file""; filename=""" + ИмяФайлаОбмена + """" + CHR( 13 ) + CHR( 10 ) + 
														"Content-Type: application/vnd.ms-excel" + CHR( 13 ) + CHR( 10 ) + CHR( 13 ) + CHR( 10 ) + СТРОКАДАННЫХ + CHR( 13 ) + CHR( 10 ) + 
														"--" + Граница + "--" + CHR( 13 ) + CHR( 10 );

Заголовки[0] = "Content-Type: multipart/form-data; boundary=" + Граница;
Заголовки[1] = "Authorization: bearer " + БифитТокен + "";
АдресСервера = "https://kassa.bifit.com";
Ресурс = "/cashdesk-api/v1/protected/exchange/csv/upload?charset=UTF-8&organization_id=" + ОрганизацияИД;

Ответ = RESTAPI.БИФИТ_POSTЗАПРОС(АдресСервера, Ресурс, СТРОКАДЛЯОТПРАВКИ, БифитТокен, "Заголовки");

ИНДИКАТОР( );

ФайлЗакрыть( ФайлОбмена );
ФайлОбмена = -1;

Заголовки[0] = "";
Заголовки[1] = "";
Заголовки[2] = "";
Заголовки[3] = "";

RETURN true;
