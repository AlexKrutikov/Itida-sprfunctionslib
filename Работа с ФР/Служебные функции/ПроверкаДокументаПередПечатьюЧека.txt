PUBLIC ТипЧека, ВыбранныйТипЧека, КОНТРАГЕНТ;

// Если документ уже выводился на ФР, то ничего не делаем
ЧекПробитНаККМ = ЗАПРОС( "SELECT f_kkm FROM spr000 WHERE code= '" + КодДокумента + "' AND ic = " + ИДДокумента );
IF ( ЧекПробитНаККМ )
{
	//выдаем сообщение
	СООБЩЕНИЕ( "Чек из данного документа уже пробит на ККМ." );
	//завершаем выполнение модуля
	RETURN false;
}

//Если ПКО не проведен, то прерываем пробитие, т.к. в этом случае нет возможности достоверно проанализировать взаиморасчеты и определить параметры для пробития текущего чека
ДокументПроведен = ЗАПРОС( "SELECT a.transacted FROM accountlist a WHERE a.code = '" + КодДокумента + "' AND a.account_ = '001' AND a.ic = '" + ИДДокумента + "' ");
IF ( ДокументПроведен <> 1 )
{
	//выдаем сообщение
	СООБЩЕНИЕ( "Перед печатью чека необходимо провести документ.");
	//завершаем выполнение модуля
	RETURN false;
}
КОНТРАГЕНТ = ЗАПРОС( "SELECT client FROM spr000 WHERE code= '" + КодДокумента + "' AND ic = " + ИДДокумента );

//начиная с релиза 3.9.3 для документа ПКО и РКО определены дополнительные виды оплат. Получим и проверим вид оплаты документа
ЭтоОплата			= true;
ЭтоОплатаКредита	= false;
ЭтоАванс			= false;
ЭтоПредоплата100	= false;
ЭтоПредоплатаЧаст	= false;
ЭтоПолныйРасчет		= false;

ВидОплаты 			= "ОПЛАТА";
IF ( КодДокумента == "023" )
	ВидОплаты 		= UPPER( ALLTRIM( ЗАПРОС( "SELECT intype FROM spr" + КодДокумента + " WHERE identity_column = " + ИДДокумента ) ) );
ELSE IF ( КодДокумента == "016" )
	ВидОплаты 		= UPPER( ALLTRIM( ЗАПРОС( "SELECT outtype FROM spr" + КодДокумента + " WHERE identity_column = " + ИДДокумента ) ) );
	
ЭтоОплата			= ВидОплаты == "ОПЛАТА";
ЭтоОплатаКредита	= ВидОплаты == "ОПЛАТА КРЕДИТА";
ЭтоАванс			= ВидОплаты == "АВАНС";
ЭтоПредоплата100	= ВидОплаты == "ПРЕДОПЛАТА 100%";
ЭтоПредоплатаЧаст	= ВидОплаты == "ПРЕДОПЛАТА ЧАСТ";
ЭтоПолныйРасчет		= ВидОплаты == "ПОЛНЫЙ РАСЧЕТ";

//БОНУС пробивать не будем
IF ( !ЭтоОплата AND !ЭтоОплатаКредита AND !ЭтоАванс AND !ЭтоПредоплата100 AND !ЭтоПредоплатаЧаст AND !ЭтоПолныйРасчет )
{
	//выдаем сообщение
	СООБЩЕНИЕ( "Недопустимый вид оплаты для пробития чека." );
	//завершаем выполнение модуля
	RETURN false;
}

//если в ПКО не поменяли вид оплаты, а оставили как есть по умолчанию
IF ( ЭтоОплата AND !ЭтоОплатаКредита AND !ЭтоАванс AND !ЭтоПредоплата100 AND !ЭтоПредоплатаЧаст AND !ЭтоПолныйРасчет )
	СтандартныйВидОплаты = true;
ELSE
	СтандартныйВидОплаты = false;

//создаем таблицу для строк чека, куда будем помещать все операции по чеку для их последующего пробития через функцию ПечатьЧекаНаФР()
ИмяТаблицыСтрокЧека						= "##" + УникальноеИмя( );										
ЗАПРОС( "CREATE TABLE " + ИмяТаблицыСтрокЧека + " ( operation varchar( 20 ), password varchar( 50 ), mode int, checktype varchar( 20 ), kodn varchar( 20 ),
													name varchar( 1024 ), quantity float, price float, summa float, _price_u float, department int, destination int, 
													discounttype float, discountvalue float, closetype varchar( 20 ), echeque bit DEFAULT 0,
													utm_code char( 10 ), egais_url varchar( 250 ), egais_sign varchar( 250 ), identity_column int IDENTITY( 1, 1 ), 
													rsubject varchar( 20 ), rvariant varchar( 20 ), marktype char(10), markbc varchar(max), clientcode varchar(10), ffd_version varchar(10), kmcheckresult varchar(1000))" );

//создаем таблицу товаров, которую будем заполнять данными из спецификации документа основания и, при необходимости, производить распределение оплаты по строкам данной таблицы товаров.
ИмяТаблицыТоваров						= "##" + УникальноеИмя( );
ЗАПРОС( "CREATE TABLE " + ИмяТаблицыТоваров + " ( npp char(5), code char(10), s_code char(10), name varchar( 250 ), quantity float, price float, summa float, rsubject varchar( 20 ), rvariant varchar( 20 ), kodn varchar( 20 ), department int, marktype char(10), markbc varchar(max), f_mark bit)" );

//если включен запрос параметров при пробитии, то запрашиваем у пользователя: 
//1. почту/телефон покупателя, 2. признак электронного чека,  3. необходимость печати копии
ПОЧТА 			= "";
ЭЛЕКТРОННЫЙЧЕК	= false;
ПЕЧАТАТЬКОПИЮ	= false;
Контрагент		= ЗАПРОС("SELECT client FROM spr000 WHERE code = '" + КодДокумента + "' AND ic = " + ИДДокумента );
КонтрагентИмя 	= ЗАПРОС("SELECT name FROM sprclient WHERE code = " + Контрагент );
ВыбранныйТипЧека= "";
IF ( _ККТ_ОПРЕДЕЛЯТЬАДРЕСОТПРАВКИЧЕКАИЗКЛИЕНТА )
{
	КонтрагентПочта 	= ЗАПРОС("SELECT email FROM sprclient WHERE code = '" + Контрагент + "'" );
	КонтрагентТелефон 	= ЗАПРОС("SELECT telefon FROM sprclient WHERE code = '" + Контрагент + "'" );
	
	IF ( !ПУСТО( КонтрагентПочта ) )
		ПОЧТА 			= КонтрагентПочта;
	ELSE
		ПОЧТА 			= КонтрагентТелефон;
}
IF ( _ККТ_ПАРАМЕТРЫПРИПРОБИТИИЧЕКА )
{
	ОТПРАВИТЬСООБЩЕНИЕ( _ГЛАВНОЕОКНОПРИЛОЖЕНИЯ, _СООБЩЕНИЕВЫПОЛНИТЬКОМАНДУ,"ЗАПРОСПАРАМЕТРОВ","'_ККТ_ТИПДОКУМЕНТА','_ККТ_АДРЕСПОКУПАТЕЛЯ','_ККТ_ЭЛЕКТРОННЫЙЧЕК','_ККТ_ПЕЧАТАТЬКОПИЮ'" );
	IF (_РЕЗУЛЬТАТВВОДАПАРАМЕТРОВ)
	{
		ПОЧТА 			= _ККТ_АДРЕСПОКУПАТЕЛЯ;
		ЭЛЕКТРОННЫЙЧЕК	= _ККТ_ЭЛЕКТРОННЫЙЧЕК;
		ПЕЧАТАТЬКОПИЮ	= _ККТ_ПЕЧАТАТЬКОПИЮ;
		ВыбранныйТипЧека= VAL(_ККТ_ТИПДОКУМЕНТА);
	}
	ELSE //если отказались от ввода параметров, то ничего не отправляем
	{
		ПОЧТА 			= "";
		ЭЛЕКТРОННЫЙЧЕК	= false;
		ПЕЧАТАТЬКОПИЮ	= false;
	}
}	
	
_ИМЯКАССИРА 	= ЗАПРОС("SELECT name FROM sprempl WHERE code = " + froperator);
_КАССИР			= froperator;

RETURN true;
