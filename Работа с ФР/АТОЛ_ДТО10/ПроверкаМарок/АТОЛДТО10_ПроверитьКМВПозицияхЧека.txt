//сперва очистим результаты предыдущей проверки
//ФР.АТОЛДТО10_ОчиститьТаблицуПроверенныхКМ( ФР.КОДОБОРУДОВАНИЯ() );

//вычислим номер первой строки с товарной позицией
НомерПервойСтрокиТовара = ЗАПРОС("SELECT TOP 1 identity_column FROM " + ИмяТаблицыСтрокЧека + " WHERE operation = 'Регистрация' OR operation = 'Возврат' ORDER BY identity_column ASC");
//вычислим номер последней строки с товарной позицией
НомерПоследнейСтрокиТовара = ЗАПРОС("SELECT TOP 1 identity_column FROM " + ИмяТаблицыСтрокЧека + " WHERE operation = 'Регистрация' OR operation = 'Возврат' ORDER BY identity_column DESC");
	


//копируем все команды, располагающиеся до первой строки товаров в новую таблицу команд чека
ДОБАВИТЬКОНТЕКСТ("SELECT * FROM " + ИмяТаблицыСтрокЧека + " WHERE identity_column < " + НомерПервойСтрокиТовара,"НовыеКомандыЧека");
	
//отдельно обработаем позиции чека
ДОБАВИТЬКОНТЕКСТ( "SELECT * FROM " + ИмяТаблицыСтрокЧека + " WHERE operation = 'Регистрация' OR operation = 'Возврат' ORDER BY identity_column", "ПозицииЧека" );
WHILE ( !КОНЕЦКОНТЕКСТА( "ПозицииЧека" ) )
{
	КоличествоТовара	= ПозицииЧека.quantity;
	СуммаТовара			= ПозицииЧека.summa;
	СуммаСкидкиПозиции	= ПозицииЧека.discountvalue;
	Наименование		= ПозицииЧека.name;
	_Цена_Учет			= ПозицииЧека._price_u;
	СекцияККМ			= ПозицииЧека.department;
	КодНалога			= ПозицииЧека.kodn;
	ПредметРасчета		= ПозицииЧека.rsubject;
	СпособРасчета		= ПозицииЧека.rvariant;
	ПарольОперации		= ПозицииЧека.password;
	ИмяОперации			= ПозицииЧека.operation;
	ТипМаркировки		= ПозицииЧека.marktype;
	ШтрихКодМаркировки	= ALLTRIM(ПозицииЧека.markbc);
	ВерсияФФД			= ПозицииЧека.ffd_version;
	
	РезультатПроверкиКМ = "";
	
	IF ( !ПУСТО( ШтрихКодМаркировки ) AND ВерсияФФД == "1.2" )
	{
		IF ( !ФР.АТОЛДТО10_ПроверитьКМ( КОДОБОРУДОВАНИЯ, false, ШтрихКодМаркировки, Наименование, @РезультатПроверкиКМ ) )
		{
			УДАЛИТЬКОНТЕКСТ("НовыеКомандыЧека");
			УДАЛИТЬКОНТЕКСТ("ПозицииЧека");
			RETURN false;		
		}
	}
	
	//добавляем строку		
	ДОБАВИТЬСТРОКИ(1, "НовыеКомандыЧека");
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "operation", ИмяОперации);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "password", ПарольОперации);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "mode", "1");
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "checktype", "0");
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "name", Наименование);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "quantity", STR( КоличествоТовара, 16, 3 ));
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "price", STR( ЦенаТоварнойПозиции, 16, 2 ));
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "_price_u", STR( _Цена_Учет, 16, 2 ));
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "summa", STR( СуммаТовара, 16, 2 ));
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "destination", 0);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "department", ЕСЛИ( ПУСТО( СекцияККМ ), 1, СекцияККМ ));
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "discounttype", 0);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "discountvalue", STR( СуммаСкидкиПозиции, 16, 3 ));
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "kodn", КодНалога);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "rsubject", ПредметРасчета);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "rvariant", СпособРасчета);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "marktype", ТипМаркировки);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "markbc", ШтрихКодМаркировки);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "ffd_version",  ВерсияФФД);
	ИЗМЕНИТЬПОЛЕ("НовыеКомандыЧека", "kmcheckresult",  РезультатПроверкиКМ);
	
	
	
	ПРОПУСТИТЬ( 1, "ПозицииЧека" );
}
УДАЛИТЬКОНТЕКСТ("ПозицииЧека");

//копируем все команды, располагающиеся после последней строки товаров в новую таблицу команд чека
ДОБАВИТЬКОНТЕКСТ("SELECT * FROM " + ИмяТаблицыСтрокЧека + " WHERE identity_column > " + НомерПоследнейСтрокиТовара,"ПоследниеКомандыЧека");
	
//теперь удалим все строки из таблицы позиций
ЗАПРОС("DELETE FROM " + ИмяТаблицыСтрокЧека);

//и загрузим в неё данные из сформированных контекстов
ВЫГРУЗИТЬ(ИмяТаблицыСтрокЧека,"","identity_column","НовыеКомандыЧека");
ВЫГРУЗИТЬ(ИмяТаблицыСтрокЧека,"","identity_column","ПоследниеКомандыЧека");


УДАЛИТЬКОНТЕКСТ("НовыеКомандыЧека");
УДАЛИТЬКОНТЕКСТ("ПоследниеКомандыЧека");

RETURN true;
